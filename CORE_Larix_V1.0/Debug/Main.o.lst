   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"Main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	PWM_percent
  20              		.bss
  21              		.align	2
  24              	PWM_percent:
  25 0000 00000000 		.space	16
  25      00000000 
  25      00000000 
  25      00000000 
  26              		.comm	x_pitch,8,4
  27              		.comm	x_roll,8,4
  28              		.global	u_yaw_dot
  29              		.align	2
  32              	u_yaw_dot:
  33 0010 00000000 		.space	4
  34              		.global	u_pitch
  35              		.align	2
  38              	u_pitch:
  39 0014 00000000 		.space	4
  40              		.global	u_roll
  41              		.align	2
  44              	u_roll:
  45 0018 00000000 		.space	4
  46              		.global	T
  47              		.section	.rodata
  48              		.align	2
  51              	T:
  52 0000 6F12033B 		.word	990057071
  53              		.global	P_roll
  54              		.align	2
  57              	P_roll:
  58 0004 A54ECA41 		.word	1103777445
  59              		.global	I_roll
  60              		.align	2
  63              	I_roll:
  64 0008 00000000 		.space	4
  65              		.global	D_roll
  66              		.align	2
  69              	D_roll:
  70 000c 0C1F9D3F 		.word	1067261708
  71              		.global	N_roll
  72              		.align	2
  75              	N_roll:
  76 0010 36FC8342 		.word	1115946038
  77              		.global	P_pitch
  78              		.align	2
  81              	P_pitch:
  82 0014 00007041 		.word	1097859072
  83              		.global	I_pitch
  84              		.align	2
  87              	I_pitch:
  88 0018 00000000 		.space	4
  89              		.global	D_pitch
  90              		.align	2
  93              	D_pitch:
  94 001c 0000803F 		.word	1065353216
  95              		.global	N_pitch
  96              		.align	2
  99              	N_pitch:
 100 0020 36FC8342 		.word	1115946038
 101              		.global	P_yaw
 102              		.align	2
 105              	P_yaw:
 106 0024 00004842 		.word	1112014848
 107              		.comm	a_roll,8,4
 108              		.comm	a_pitch,8,4
 109              		.comm	b_roll,12,4
 110              		.comm	b_pitch,12,4
 111              		.global	powerD
 112              		.bss
 113              		.align	2
 116              	powerD:
 117 001c 00000000 		.space	4
 118              		.global	yawD_dot
 119              		.align	2
 122              	yawD_dot:
 123 0020 00000000 		.space	4
 124              		.global	pitchD
 125              		.align	2
 128              	pitchD:
 129 0024 00000000 		.space	4
 130              		.global	rollD
 131              		.align	2
 134              	rollD:
 135 0028 00000000 		.space	4
 136              		.comm	YPR,12,4
 137              		.comm	sensorData,12,4
 138              		.global	TxBuffer
 139              		.align	2
 142              	TxBuffer:
 143 002c 00000000 		.space	100
 143      00000000 
 143      00000000 
 143      00000000 
 143      00000000 
 144              		.comm	c,100,4
 145              		.global	sendMag
 148              	sendMag:
 149 0090 00       		.space	1
 150              		.global	counter_main
 151 0091 00       		.align	1
 154              	counter_main:
 155 0092 0000     		.space	2
 156              		.global	MonitorBuffer
 157              		.align	2
 160              	MonitorBuffer:
 161 0094 00000000 		.space	14
 161      00000000 
 161      00000000 
 161      0000
 162              		.global	MotorRunning
 165              	MotorRunning:
 166 00a2 00       		.space	1
 167              		.global	__aeabi_f2d
 168              		.global	__aeabi_ddiv
 169              		.global	__aeabi_dmul
 170              		.global	__aeabi_d2uiz
 171 00a3 00       		.section	.text.CCU41_1_IRQHandler,"ax",%progbits
 172              		.align	2
 173              		.global	CCU41_1_IRQHandler
 174              		.thumb
 175              		.thumb_func
 177              	CCU41_1_IRQHandler:
 178              	.LFB153:
 179              		.file 1 "../Main.c"
   1:../Main.c     **** /*
   2:../Main.c     ****  * Main.c
   3:../Main.c     ****  *
   4:../Main.c     ****  *  Created on: 25.12.2014
   5:../Main.c     ****  *      Author: Andreas
   6:../Main.c     ****  */
   7:../Main.c     **** 
   8:../Main.c     **** #include <DAVE3.h>			//Declarations from DAVE3 Code Generation (includes SFR declaration)
   9:../Main.c     **** #include <limits.h>
  10:../Main.c     **** #include "_Quadrocopter/_HAL/Delay/util.h"
  11:../Main.c     **** #include "_Quadrocopter/_HAL/I2C/I2Cdev.h"
  12:../Main.c     **** #include "_Quadrocopter/Sensors/MPU9X50/MPU9150.h"
  13:../Main.c     **** #include "_Quadrocopter/RemoteControl/RCReceive.h"
  14:../Main.c     **** #include "_Quadrocopter/Attitude_Control/Attitudecontroller.h"
  15:../Main.c     **** #include "_Quadrocopter/DaisyChain/DaisyChain.h"
  16:../Main.c     **** 
  17:../Main.c     **** #define CONTROL_ORDER 2
  18:../Main.c     **** 
  19:../Main.c     **** //Actor values
  20:../Main.c     **** float PWM_percent[] = {0.0, 0.0, 0.0, 0.0};
  21:../Main.c     **** 
  22:../Main.c     **** float x_pitch[CONTROL_ORDER];
  23:../Main.c     **** float x_roll[CONTROL_ORDER];
  24:../Main.c     **** 
  25:../Main.c     **** float u_yaw_dot = 0.0;
  26:../Main.c     **** float u_pitch = 0.0;
  27:../Main.c     **** float u_roll = 0.0;
  28:../Main.c     **** 
  29:../Main.c     **** //Controllerparamter
  30:../Main.c     **** const float T=0.002;
  31:../Main.c     **** const float P_roll = 25.2884;
  32:../Main.c     **** const float I_roll = 0;//5;
  33:../Main.c     **** const float D_roll =  1.22751;
  34:../Main.c     **** const float N_roll = 65.9926;
  35:../Main.c     **** const float P_pitch = 15;
  36:../Main.c     **** const float I_pitch = 0;//5;
  37:../Main.c     **** const float D_pitch = 1;
  38:../Main.c     **** const float N_pitch = 65.9926;
  39:../Main.c     **** const float P_yaw = 50;
  40:../Main.c     **** 
  41:../Main.c     **** //Controllerpolynomials
  42:../Main.c     **** float a_roll[CONTROL_ORDER];
  43:../Main.c     **** float a_pitch[CONTROL_ORDER];
  44:../Main.c     **** float b_roll[CONTROL_ORDER+1];
  45:../Main.c     **** float b_pitch[CONTROL_ORDER+1];
  46:../Main.c     **** 
  47:../Main.c     **** //Remote Control
  48:../Main.c     **** float powerD = 0.0;
  49:../Main.c     **** float yawD_dot = 0.0;
  50:../Main.c     **** float pitchD = 0.0;
  51:../Main.c     **** float rollD = 0.0;
  52:../Main.c     **** 
  53:../Main.c     **** float YPR[3];
  54:../Main.c     **** float sensorData[3];
  55:../Main.c     **** 
  56:../Main.c     **** int8_t TxBuffer[100] = { 0 };
  57:../Main.c     **** char c[100]; //for displaying data
  58:../Main.c     **** 
  59:../Main.c     **** bool sendMag = FALSE;
  60:../Main.c     **** 
  61:../Main.c     **** uint16_t counter_main=0;
  62:../Main.c     **** 
  63:../Main.c     **** int8_t MonitorBuffer[14] = {0};
  64:../Main.c     **** int8_t MotorRunning=0;
  65:../Main.c     **** 
  66:../Main.c     **** void Monitoring_Int_Handler();
  67:../Main.c     **** 
  68:../Main.c     **** void Controller_CompareMatch_Int_Handler(void)
  69:../Main.c     **** {
 180              		.loc 1 69 0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 1, uses_anonymous_args = 0
 184 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 185              	.LCFI0:
 186              		.cfi_def_cfa_offset 20
 187              		.cfi_offset 4, -20
 188              		.cfi_offset 5, -16
 189              		.cfi_offset 6, -12
 190              		.cfi_offset 7, -8
 191              		.cfi_offset 14, -4
 192 0002 85B0     		sub	sp, sp, #20
 193              	.LCFI1:
 194              		.cfi_def_cfa_offset 40
 195 0004 04AF     		add	r7, sp, #16
 196              	.LCFI2:
 197              		.cfi_def_cfa 7, 24
  70:../Main.c     **** 	GetAngles(YPR);
 198              		.loc 1 70 0
 199 0006 40F20000 		movw	r0, #:lower16:YPR
 200 000a C0F20000 		movt	r0, #:upper16:YPR
 201 000e FFF7FEFF 		bl	GetAngles
  71:../Main.c     **** 	GetRCData(&powerD, &yawD_dot, &pitchD, &rollD);
 202              		.loc 1 71 0
 203 0012 40F20000 		movw	r0, #:lower16:powerD
 204 0016 C0F20000 		movt	r0, #:upper16:powerD
 205 001a 40F20001 		movw	r1, #:lower16:yawD_dot
 206 001e C0F20001 		movt	r1, #:upper16:yawD_dot
 207 0022 40F20002 		movw	r2, #:lower16:pitchD
 208 0026 C0F20002 		movt	r2, #:upper16:pitchD
 209 002a 40F20003 		movw	r3, #:lower16:rollD
 210 002e C0F20003 		movt	r3, #:upper16:rollD
 211 0032 FFF7FEFF 		bl	GetRCData
  72:../Main.c     **** 
  73:../Main.c     **** 	//YPR[0]=0;
  74:../Main.c     **** 
  75:../Main.c     **** 	//yaw control
  76:../Main.c     **** 	AngleRateController(&yawD_dot, &YPR[0], &P_yaw, &u_yaw_dot);
 212              		.loc 1 76 0
 213 0036 40F20000 		movw	r0, #:lower16:yawD_dot
 214 003a C0F20000 		movt	r0, #:upper16:yawD_dot
 215 003e 40F20001 		movw	r1, #:lower16:YPR
 216 0042 C0F20001 		movt	r1, #:upper16:YPR
 217 0046 40F20002 		movw	r2, #:lower16:P_yaw
 218 004a C0F20002 		movt	r2, #:upper16:P_yaw
 219 004e 40F20003 		movw	r3, #:lower16:u_yaw_dot
 220 0052 C0F20003 		movt	r3, #:upper16:u_yaw_dot
 221 0056 FFF7FEFF 		bl	AngleRateController
  77:../Main.c     **** 	//pitch control
  78:../Main.c     **** 	AngleController(&pitchD, &YPR[1], CONTROL_ORDER, a_pitch, b_pitch, x_pitch, &u_pitch);
 222              		.loc 1 78 0
 223 005a 40F20003 		movw	r3, #:lower16:b_pitch
 224 005e C0F20003 		movt	r3, #:upper16:b_pitch
 225 0062 0093     		str	r3, [sp, #0]
 226 0064 40F20003 		movw	r3, #:lower16:x_pitch
 227 0068 C0F20003 		movt	r3, #:upper16:x_pitch
 228 006c 0193     		str	r3, [sp, #4]
 229 006e 40F20003 		movw	r3, #:lower16:u_pitch
 230 0072 C0F20003 		movt	r3, #:upper16:u_pitch
 231 0076 0293     		str	r3, [sp, #8]
 232 0078 40F20000 		movw	r0, #:lower16:pitchD
 233 007c C0F20000 		movt	r0, #:upper16:pitchD
 234 0080 8549     		ldr	r1, .L7+8
 235 0082 4FF00202 		mov	r2, #2
 236 0086 40F20003 		movw	r3, #:lower16:a_pitch
 237 008a C0F20003 		movt	r3, #:upper16:a_pitch
 238 008e FFF7FEFF 		bl	AngleController
  79:../Main.c     **** 	//roll control
  80:../Main.c     **** 	AngleController(&rollD, &YPR[2], CONTROL_ORDER, a_roll, b_roll, x_roll, &u_roll);
 239              		.loc 1 80 0
 240 0092 40F20003 		movw	r3, #:lower16:b_roll
 241 0096 C0F20003 		movt	r3, #:upper16:b_roll
 242 009a 0093     		str	r3, [sp, #0]
 243 009c 40F20003 		movw	r3, #:lower16:x_roll
 244 00a0 C0F20003 		movt	r3, #:upper16:x_roll
 245 00a4 0193     		str	r3, [sp, #4]
 246 00a6 40F20003 		movw	r3, #:lower16:u_roll
 247 00aa C0F20003 		movt	r3, #:upper16:u_roll
 248 00ae 0293     		str	r3, [sp, #8]
 249 00b0 40F20000 		movw	r0, #:lower16:rollD
 250 00b4 C0F20000 		movt	r0, #:upper16:rollD
 251 00b8 7849     		ldr	r1, .L7+12
 252 00ba 4FF00202 		mov	r2, #2
 253 00be 40F20003 		movw	r3, #:lower16:a_roll
 254 00c2 C0F20003 		movt	r3, #:upper16:a_roll
 255 00c6 FFF7FEFF 		bl	AngleController
  81:../Main.c     **** 
  82:../Main.c     **** 	//generate actuator values
  83:../Main.c     **** 	CreatePulseWidth(&u_roll, &u_pitch, &u_yaw_dot, &powerD, PWM_percent);
 256              		.loc 1 83 0
 257 00ca 40F20003 		movw	r3, #:lower16:PWM_percent
 258 00ce C0F20003 		movt	r3, #:upper16:PWM_percent
 259 00d2 0093     		str	r3, [sp, #0]
 260 00d4 40F20000 		movw	r0, #:lower16:u_roll
 261 00d8 C0F20000 		movt	r0, #:upper16:u_roll
 262 00dc 40F20001 		movw	r1, #:lower16:u_pitch
 263 00e0 C0F20001 		movt	r1, #:upper16:u_pitch
 264 00e4 40F20002 		movw	r2, #:lower16:u_yaw_dot
 265 00e8 C0F20002 		movt	r2, #:upper16:u_yaw_dot
 266 00ec 40F20003 		movw	r3, #:lower16:powerD
 267 00f0 C0F20003 		movt	r3, #:upper16:powerD
 268 00f4 FFF7FEFF 		bl	CreatePulseWidth
  84:../Main.c     **** 
  85:../Main.c     **** 	if (powerD > 10)
 269              		.loc 1 85 0
 270 00f8 40F20003 		movw	r3, #:lower16:powerD
 271 00fc C0F20003 		movt	r3, #:upper16:powerD
 272 0100 93ED007A 		flds	s14, [r3, #0]
 273 0104 F2EE047A 		fconsts	s15, #36
 274 0108 B4EEE77A 		fcmpes	s14, s15
 275 010c F1EE10FA 		fmstat
 276 0110 40F39D80 		ble	.L6
 277              	.L5:
  86:../Main.c     **** 		SendDaisyData(SET_REF_CURRENT,
  87:../Main.c     **** 			PWM_percent[0]/100.0*1279,
 278              		.loc 1 87 0
 279 0114 40F20003 		movw	r3, #:lower16:PWM_percent
 280 0118 C0F20003 		movt	r3, #:upper16:PWM_percent
 281 011c 1B68     		ldr	r3, [r3, #0]	@ float
 282 011e 1846     		mov	r0, r3	@ float
 283 0120 FFF7FEFF 		bl	__aeabi_f2d
 284 0124 0246     		mov	r2, r0
 285 0126 0B46     		mov	r3, r1
 286 0128 1046     		mov	r0, r2
 287 012a 1946     		mov	r1, r3
 288 012c 4FF00002 		mov	r2, #0
 289 0130 4FF00003 		mov	r3, #0
 290 0134 C4F25903 		movt	r3, 16473
 291 0138 FFF7FEFF 		bl	__aeabi_ddiv
 292 013c 0246     		mov	r2, r0
 293 013e 0B46     		mov	r3, r1
 294 0140 1046     		mov	r0, r2
 295 0142 1946     		mov	r1, r3
 296 0144 52A3     		adr	r3, .L7
 297 0146 D3E90023 		ldrd	r2, [r3]
 298 014a FFF7FEFF 		bl	__aeabi_dmul
 299 014e 0246     		mov	r2, r0
 300 0150 0B46     		mov	r3, r1
  86:../Main.c     **** 		SendDaisyData(SET_REF_CURRENT,
 301              		.loc 1 86 0
 302 0152 1046     		mov	r0, r2
 303 0154 1946     		mov	r1, r3
 304 0156 FFF7FEFF 		bl	__aeabi_d2uiz
 305 015a 0346     		mov	r3, r0
 306 015c 9EB2     		uxth	r6, r3
  88:../Main.c     **** 			PWM_percent[1]/100.0*1279,
 307              		.loc 1 88 0
 308 015e 40F20003 		movw	r3, #:lower16:PWM_percent
 309 0162 C0F20003 		movt	r3, #:upper16:PWM_percent
 310 0166 5B68     		ldr	r3, [r3, #4]	@ float
 311 0168 1846     		mov	r0, r3	@ float
 312 016a FFF7FEFF 		bl	__aeabi_f2d
 313 016e 0246     		mov	r2, r0
 314 0170 0B46     		mov	r3, r1
 315 0172 1046     		mov	r0, r2
 316 0174 1946     		mov	r1, r3
 317 0176 4FF00002 		mov	r2, #0
 318 017a 4FF00003 		mov	r3, #0
 319 017e C4F25903 		movt	r3, 16473
 320 0182 FFF7FEFF 		bl	__aeabi_ddiv
 321 0186 0246     		mov	r2, r0
 322 0188 0B46     		mov	r3, r1
 323 018a 1046     		mov	r0, r2
 324 018c 1946     		mov	r1, r3
 325 018e 40A3     		adr	r3, .L7
 326 0190 D3E90023 		ldrd	r2, [r3]
 327 0194 FFF7FEFF 		bl	__aeabi_dmul
 328 0198 0246     		mov	r2, r0
 329 019a 0B46     		mov	r3, r1
  86:../Main.c     **** 		SendDaisyData(SET_REF_CURRENT,
 330              		.loc 1 86 0
 331 019c 1046     		mov	r0, r2
 332 019e 1946     		mov	r1, r3
 333 01a0 FFF7FEFF 		bl	__aeabi_d2uiz
 334 01a4 0346     		mov	r3, r0
 335 01a6 9DB2     		uxth	r5, r3
  89:../Main.c     **** 			PWM_percent[3]/100.0*1279,
 336              		.loc 1 89 0
 337 01a8 40F20003 		movw	r3, #:lower16:PWM_percent
 338 01ac C0F20003 		movt	r3, #:upper16:PWM_percent
 339 01b0 DB68     		ldr	r3, [r3, #12]	@ float
 340 01b2 1846     		mov	r0, r3	@ float
 341 01b4 FFF7FEFF 		bl	__aeabi_f2d
 342 01b8 0246     		mov	r2, r0
 343 01ba 0B46     		mov	r3, r1
 344 01bc 1046     		mov	r0, r2
 345 01be 1946     		mov	r1, r3
 346 01c0 4FF00002 		mov	r2, #0
 347 01c4 4FF00003 		mov	r3, #0
 348 01c8 C4F25903 		movt	r3, 16473
 349 01cc FFF7FEFF 		bl	__aeabi_ddiv
 350 01d0 0246     		mov	r2, r0
 351 01d2 0B46     		mov	r3, r1
 352 01d4 1046     		mov	r0, r2
 353 01d6 1946     		mov	r1, r3
 354 01d8 2DA3     		adr	r3, .L7
 355 01da D3E90023 		ldrd	r2, [r3]
 356 01de FFF7FEFF 		bl	__aeabi_dmul
 357 01e2 0246     		mov	r2, r0
 358 01e4 0B46     		mov	r3, r1
  86:../Main.c     **** 		SendDaisyData(SET_REF_CURRENT,
 359              		.loc 1 86 0
 360 01e6 1046     		mov	r0, r2
 361 01e8 1946     		mov	r1, r3
 362 01ea FFF7FEFF 		bl	__aeabi_d2uiz
 363 01ee 0346     		mov	r3, r0
 364 01f0 9CB2     		uxth	r4, r3
  90:../Main.c     **** 			PWM_percent[2]/100.0*1279);
 365              		.loc 1 90 0
 366 01f2 40F20003 		movw	r3, #:lower16:PWM_percent
 367 01f6 C0F20003 		movt	r3, #:upper16:PWM_percent
 368 01fa 9B68     		ldr	r3, [r3, #8]	@ float
 369 01fc 1846     		mov	r0, r3	@ float
 370 01fe FFF7FEFF 		bl	__aeabi_f2d
 371 0202 0246     		mov	r2, r0
 372 0204 0B46     		mov	r3, r1
 373 0206 1046     		mov	r0, r2
 374 0208 1946     		mov	r1, r3
 375 020a 4FF00002 		mov	r2, #0
 376 020e 4FF00003 		mov	r3, #0
 377 0212 C4F25903 		movt	r3, 16473
 378 0216 FFF7FEFF 		bl	__aeabi_ddiv
 379 021a 0246     		mov	r2, r0
 380 021c 0B46     		mov	r3, r1
 381 021e 1046     		mov	r0, r2
 382 0220 1946     		mov	r1, r3
 383 0222 1BA3     		adr	r3, .L7
 384 0224 D3E90023 		ldrd	r2, [r3]
 385 0228 FFF7FEFF 		bl	__aeabi_dmul
 386 022c 0246     		mov	r2, r0
 387 022e 0B46     		mov	r3, r1
  86:../Main.c     **** 		SendDaisyData(SET_REF_CURRENT,
 388              		.loc 1 86 0
 389 0230 1046     		mov	r0, r2
 390 0232 1946     		mov	r1, r3
 391 0234 FFF7FEFF 		bl	__aeabi_d2uiz
 392 0238 0346     		mov	r3, r0
 393 023a 9BB2     		uxth	r3, r3
 394 023c 0093     		str	r3, [sp, #0]
 395 023e 4FF02200 		mov	r0, #34
 396 0242 3146     		mov	r1, r6
 397 0244 2A46     		mov	r2, r5
 398 0246 2346     		mov	r3, r4
 399 0248 FFF7FEFF 		bl	SendDaisyData
 400 024c 0CE0     		b	.L4
 401              	.L6:
  91:../Main.c     **** 	else
  92:../Main.c     **** 		SendDaisyData(STOP_MOTOR,0,0,0,0);
 402              		.loc 1 92 0
 403 024e 4FF00003 		mov	r3, #0
 404 0252 0093     		str	r3, [sp, #0]
 405 0254 4FF00B00 		mov	r0, #11
 406 0258 4FF00001 		mov	r1, #0
 407 025c 4FF00002 		mov	r2, #0
 408 0260 4FF00003 		mov	r3, #0
 409 0264 FFF7FEFF 		bl	SendDaisyData
 410              	.L4:
  93:../Main.c     **** 
  94:../Main.c     **** 	/*SendDaisyData(SET_REF_CURRENT,
  95:../Main.c     **** 			powerD/100.0*1279,
  96:../Main.c     **** 			powerD/100.0*1279,
  97:../Main.c     **** 			powerD/100.0*1279,
  98:../Main.c     **** 			powerD/100.0*1279);*/
  99:../Main.c     **** 
 100:../Main.c     **** 
 101:../Main.c     **** 	counter_main++;
 411              		.loc 1 101 0
 412 0268 40F20003 		movw	r3, #:lower16:counter_main
 413 026c C0F20003 		movt	r3, #:upper16:counter_main
 414 0270 1B88     		ldrh	r3, [r3, #0]
 415 0272 03F10103 		add	r3, r3, #1
 416 0276 9AB2     		uxth	r2, r3
 417 0278 40F20003 		movw	r3, #:lower16:counter_main
 418 027c C0F20003 		movt	r3, #:upper16:counter_main
 419 0280 1A80     		strh	r2, [r3, #0]	@ movhi
 102:../Main.c     **** }
 420              		.loc 1 102 0
 421 0282 07F10407 		add	r7, r7, #4
 422 0286 BD46     		mov	sp, r7
 423 0288 F0BD     		pop	{r4, r5, r6, r7, pc}
 424              	.L8:
 425 028a 00BFAFF3 		.align	3
 425      0080
 426              	.L7:
 427 0290 00000000 		.word	0
 428 0294 00FC9340 		.word	1083440128
 429 0298 04000000 		.word	YPR+4
 430 029c 08000000 		.word	YPR+8
 431              		.cfi_endproc
 432              	.LFE153:
 434              		.section	.text.Initialize,"ax",%progbits
 435              		.align	2
 436              		.global	Initialize
 437              		.thumb
 438              		.thumb_func
 440              	Initialize:
 441              	.LFB154:
 103:../Main.c     **** 
 104:../Main.c     **** void Initialize()
 105:../Main.c     **** {
 442              		.loc 1 105 0
 443              		.cfi_startproc
 444              		@ args = 0, pretend = 0, frame = 0
 445              		@ frame_needed = 1, uses_anonymous_args = 0
 446 0000 80B5     		push	{r7, lr}
 447              	.LCFI3:
 448              		.cfi_def_cfa_offset 8
 449              		.cfi_offset 7, -8
 450              		.cfi_offset 14, -4
 451 0002 00AF     		add	r7, sp, #0
 452              	.LCFI4:
 453              		.cfi_def_cfa_register 7
 106:../Main.c     **** 	delay(1000);
 454              		.loc 1 106 0
 455 0004 4FF47A70 		mov	r0, #1000
 456 0008 FFF7FEFF 		bl	delay
 107:../Main.c     **** 
 108:../Main.c     ****     // initialize device
 109:../Main.c     **** 	MPU9150_Setup();
 457              		.loc 1 109 0
 458 000c FFF7FEFF 		bl	MPU9150_Setup
 110:../Main.c     **** 
 111:../Main.c     ****     // initilize controller polynomials
 112:../Main.c     **** 	b_roll[0]=P_roll-I_roll*T-P_roll*N_roll*T+N_roll*I_roll*T*T+D_roll*N_roll;
 459              		.loc 1 112 0
 460 0010 40F20003 		movw	r3, #:lower16:P_roll
 461 0014 C0F20003 		movt	r3, #:upper16:P_roll
 462 0018 93ED007A 		flds	s14, [r3, #0]
 463 001c 40F20003 		movw	r3, #:lower16:I_roll
 464 0020 C0F20003 		movt	r3, #:upper16:I_roll
 465 0024 D3ED006A 		flds	s13, [r3, #0]
 466 0028 40F20003 		movw	r3, #:lower16:T
 467 002c C0F20003 		movt	r3, #:upper16:T
 468 0030 D3ED007A 		flds	s15, [r3, #0]
 469 0034 66EEA77A 		fmuls	s15, s13, s15
 470 0038 37EE677A 		fsubs	s14, s14, s15
 471 003c 40F20003 		movw	r3, #:lower16:P_roll
 472 0040 C0F20003 		movt	r3, #:upper16:P_roll
 473 0044 D3ED006A 		flds	s13, [r3, #0]
 474 0048 40F20003 		movw	r3, #:lower16:N_roll
 475 004c C0F20003 		movt	r3, #:upper16:N_roll
 476 0050 D3ED007A 		flds	s15, [r3, #0]
 477 0054 66EEA76A 		fmuls	s13, s13, s15
 478 0058 40F20003 		movw	r3, #:lower16:T
 479 005c C0F20003 		movt	r3, #:upper16:T
 480 0060 D3ED007A 		flds	s15, [r3, #0]
 481 0064 66EEA77A 		fmuls	s15, s13, s15
 482 0068 37EE677A 		fsubs	s14, s14, s15
 483 006c 40F20003 		movw	r3, #:lower16:N_roll
 484 0070 C0F20003 		movt	r3, #:upper16:N_roll
 485 0074 D3ED006A 		flds	s13, [r3, #0]
 486 0078 40F20003 		movw	r3, #:lower16:I_roll
 487 007c C0F20003 		movt	r3, #:upper16:I_roll
 488 0080 D3ED007A 		flds	s15, [r3, #0]
 489 0084 66EEA76A 		fmuls	s13, s13, s15
 490 0088 40F20003 		movw	r3, #:lower16:T
 491 008c C0F20003 		movt	r3, #:upper16:T
 492 0090 D3ED007A 		flds	s15, [r3, #0]
 493 0094 66EEA76A 		fmuls	s13, s13, s15
 494 0098 40F20003 		movw	r3, #:lower16:T
 495 009c C0F20003 		movt	r3, #:upper16:T
 496 00a0 D3ED007A 		flds	s15, [r3, #0]
 497 00a4 66EEA77A 		fmuls	s15, s13, s15
 498 00a8 37EE277A 		fadds	s14, s14, s15
 499 00ac 40F20003 		movw	r3, #:lower16:D_roll
 500 00b0 C0F20003 		movt	r3, #:upper16:D_roll
 501 00b4 D3ED006A 		flds	s13, [r3, #0]
 502 00b8 40F20003 		movw	r3, #:lower16:N_roll
 503 00bc C0F20003 		movt	r3, #:upper16:N_roll
 504 00c0 D3ED007A 		flds	s15, [r3, #0]
 505 00c4 66EEA77A 		fmuls	s15, s13, s15
 506 00c8 77EE277A 		fadds	s15, s14, s15
 507 00cc 40F20003 		movw	r3, #:lower16:b_roll
 508 00d0 C0F20003 		movt	r3, #:upper16:b_roll
 509 00d4 C3ED007A 		fsts	s15, [r3, #0]
 113:../Main.c     **** 	b_roll[1]=I_roll*T-2*P_roll+P_roll*N_roll*T-2*D_roll*N_roll;
 510              		.loc 1 113 0
 511 00d8 40F20003 		movw	r3, #:lower16:I_roll
 512 00dc C0F20003 		movt	r3, #:upper16:I_roll
 513 00e0 93ED007A 		flds	s14, [r3, #0]
 514 00e4 40F20003 		movw	r3, #:lower16:T
 515 00e8 C0F20003 		movt	r3, #:upper16:T
 516 00ec D3ED007A 		flds	s15, [r3, #0]
 517 00f0 27EE277A 		fmuls	s14, s14, s15
 518 00f4 40F20003 		movw	r3, #:lower16:P_roll
 519 00f8 C0F20003 		movt	r3, #:upper16:P_roll
 520 00fc D3ED007A 		flds	s15, [r3, #0]
 521 0100 77EEA77A 		fadds	s15, s15, s15
 522 0104 37EE677A 		fsubs	s14, s14, s15
 523 0108 40F20003 		movw	r3, #:lower16:P_roll
 524 010c C0F20003 		movt	r3, #:upper16:P_roll
 525 0110 D3ED006A 		flds	s13, [r3, #0]
 526 0114 40F20003 		movw	r3, #:lower16:N_roll
 527 0118 C0F20003 		movt	r3, #:upper16:N_roll
 528 011c D3ED007A 		flds	s15, [r3, #0]
 529 0120 66EEA76A 		fmuls	s13, s13, s15
 530 0124 40F20003 		movw	r3, #:lower16:T
 531 0128 C0F20003 		movt	r3, #:upper16:T
 532 012c D3ED007A 		flds	s15, [r3, #0]
 533 0130 66EEA77A 		fmuls	s15, s13, s15
 534 0134 37EE277A 		fadds	s14, s14, s15
 535 0138 40F20003 		movw	r3, #:lower16:D_roll
 536 013c C0F20003 		movt	r3, #:upper16:D_roll
 537 0140 D3ED007A 		flds	s15, [r3, #0]
 538 0144 77EEA76A 		fadds	s13, s15, s15
 539 0148 40F20003 		movw	r3, #:lower16:N_roll
 540 014c C0F20003 		movt	r3, #:upper16:N_roll
 541 0150 D3ED007A 		flds	s15, [r3, #0]
 542 0154 66EEA77A 		fmuls	s15, s13, s15
 543 0158 77EE677A 		fsubs	s15, s14, s15
 544 015c 40F20003 		movw	r3, #:lower16:b_roll
 545 0160 C0F20003 		movt	r3, #:upper16:b_roll
 546 0164 C3ED017A 		fsts	s15, [r3, #4]
 114:../Main.c     **** 	b_roll[2]=P_roll+D_roll*N_roll;
 547              		.loc 1 114 0
 548 0168 40F20003 		movw	r3, #:lower16:D_roll
 549 016c C0F20003 		movt	r3, #:upper16:D_roll
 550 0170 93ED007A 		flds	s14, [r3, #0]
 551 0174 40F20003 		movw	r3, #:lower16:N_roll
 552 0178 C0F20003 		movt	r3, #:upper16:N_roll
 553 017c D3ED007A 		flds	s15, [r3, #0]
 554 0180 27EE277A 		fmuls	s14, s14, s15
 555 0184 40F20003 		movw	r3, #:lower16:P_roll
 556 0188 C0F20003 		movt	r3, #:upper16:P_roll
 557 018c D3ED007A 		flds	s15, [r3, #0]
 558 0190 77EE277A 		fadds	s15, s14, s15
 559 0194 40F20003 		movw	r3, #:lower16:b_roll
 560 0198 C0F20003 		movt	r3, #:upper16:b_roll
 561 019c C3ED027A 		fsts	s15, [r3, #8]
 115:../Main.c     **** 	a_roll[0]=1-N_roll*T;
 562              		.loc 1 115 0
 563 01a0 40F20003 		movw	r3, #:lower16:N_roll
 564 01a4 C0F20003 		movt	r3, #:upper16:N_roll
 565 01a8 93ED007A 		flds	s14, [r3, #0]
 566 01ac 40F20003 		movw	r3, #:lower16:T
 567 01b0 C0F20003 		movt	r3, #:upper16:T
 568 01b4 D3ED007A 		flds	s15, [r3, #0]
 569 01b8 67EE277A 		fmuls	s15, s14, s15
 570 01bc B7EE007A 		fconsts	s14, #112
 571 01c0 77EE677A 		fsubs	s15, s14, s15
 572 01c4 40F20003 		movw	r3, #:lower16:a_roll
 573 01c8 C0F20003 		movt	r3, #:upper16:a_roll
 574 01cc C3ED007A 		fsts	s15, [r3, #0]
 116:../Main.c     **** 	a_roll[1]=N_roll*T-2;
 575              		.loc 1 116 0
 576 01d0 40F20003 		movw	r3, #:lower16:N_roll
 577 01d4 C0F20003 		movt	r3, #:upper16:N_roll
 578 01d8 93ED007A 		flds	s14, [r3, #0]
 579 01dc 40F20003 		movw	r3, #:lower16:T
 580 01e0 C0F20003 		movt	r3, #:upper16:T
 581 01e4 D3ED007A 		flds	s15, [r3, #0]
 582 01e8 27EE277A 		fmuls	s14, s14, s15
 583 01ec F0EE007A 		fconsts	s15, #0
 584 01f0 77EE677A 		fsubs	s15, s14, s15
 585 01f4 40F20003 		movw	r3, #:lower16:a_roll
 586 01f8 C0F20003 		movt	r3, #:upper16:a_roll
 587 01fc C3ED017A 		fsts	s15, [r3, #4]
 117:../Main.c     **** 
 118:../Main.c     **** 	b_pitch[0]=P_pitch-I_pitch*T-P_pitch*N_pitch*T+N_pitch*I_pitch*T*T+D_pitch*N_pitch;
 588              		.loc 1 118 0
 589 0200 40F20003 		movw	r3, #:lower16:P_pitch
 590 0204 C0F20003 		movt	r3, #:upper16:P_pitch
 591 0208 93ED007A 		flds	s14, [r3, #0]
 592 020c 40F20003 		movw	r3, #:lower16:I_pitch
 593 0210 C0F20003 		movt	r3, #:upper16:I_pitch
 594 0214 D3ED006A 		flds	s13, [r3, #0]
 595 0218 40F20003 		movw	r3, #:lower16:T
 596 021c C0F20003 		movt	r3, #:upper16:T
 597 0220 D3ED007A 		flds	s15, [r3, #0]
 598 0224 66EEA77A 		fmuls	s15, s13, s15
 599 0228 37EE677A 		fsubs	s14, s14, s15
 600 022c 40F20003 		movw	r3, #:lower16:P_pitch
 601 0230 C0F20003 		movt	r3, #:upper16:P_pitch
 602 0234 D3ED006A 		flds	s13, [r3, #0]
 603 0238 40F20003 		movw	r3, #:lower16:N_pitch
 604 023c C0F20003 		movt	r3, #:upper16:N_pitch
 605 0240 D3ED007A 		flds	s15, [r3, #0]
 606 0244 66EEA76A 		fmuls	s13, s13, s15
 607 0248 40F20003 		movw	r3, #:lower16:T
 608 024c C0F20003 		movt	r3, #:upper16:T
 609 0250 D3ED007A 		flds	s15, [r3, #0]
 610 0254 66EEA77A 		fmuls	s15, s13, s15
 611 0258 37EE677A 		fsubs	s14, s14, s15
 612 025c 40F20003 		movw	r3, #:lower16:N_pitch
 613 0260 C0F20003 		movt	r3, #:upper16:N_pitch
 614 0264 D3ED006A 		flds	s13, [r3, #0]
 615 0268 40F20003 		movw	r3, #:lower16:I_pitch
 616 026c C0F20003 		movt	r3, #:upper16:I_pitch
 617 0270 D3ED007A 		flds	s15, [r3, #0]
 618 0274 66EEA76A 		fmuls	s13, s13, s15
 619 0278 40F20003 		movw	r3, #:lower16:T
 620 027c C0F20003 		movt	r3, #:upper16:T
 621 0280 D3ED007A 		flds	s15, [r3, #0]
 622 0284 66EEA76A 		fmuls	s13, s13, s15
 623 0288 40F20003 		movw	r3, #:lower16:T
 624 028c C0F20003 		movt	r3, #:upper16:T
 625 0290 D3ED007A 		flds	s15, [r3, #0]
 626 0294 66EEA77A 		fmuls	s15, s13, s15
 627 0298 37EE277A 		fadds	s14, s14, s15
 628 029c 40F20003 		movw	r3, #:lower16:D_pitch
 629 02a0 C0F20003 		movt	r3, #:upper16:D_pitch
 630 02a4 D3ED006A 		flds	s13, [r3, #0]
 631 02a8 40F20003 		movw	r3, #:lower16:N_pitch
 632 02ac C0F20003 		movt	r3, #:upper16:N_pitch
 633 02b0 D3ED007A 		flds	s15, [r3, #0]
 634 02b4 66EEA77A 		fmuls	s15, s13, s15
 635 02b8 77EE277A 		fadds	s15, s14, s15
 636 02bc 40F20003 		movw	r3, #:lower16:b_pitch
 637 02c0 C0F20003 		movt	r3, #:upper16:b_pitch
 638 02c4 C3ED007A 		fsts	s15, [r3, #0]
 119:../Main.c     **** 	b_pitch[1]=I_pitch*T-2*P_pitch+P_pitch*N_pitch*T-2*D_pitch*N_pitch;
 639              		.loc 1 119 0
 640 02c8 40F20003 		movw	r3, #:lower16:I_pitch
 641 02cc C0F20003 		movt	r3, #:upper16:I_pitch
 642 02d0 93ED007A 		flds	s14, [r3, #0]
 643 02d4 40F20003 		movw	r3, #:lower16:T
 644 02d8 C0F20003 		movt	r3, #:upper16:T
 645 02dc D3ED007A 		flds	s15, [r3, #0]
 646 02e0 27EE277A 		fmuls	s14, s14, s15
 647 02e4 40F20003 		movw	r3, #:lower16:P_pitch
 648 02e8 C0F20003 		movt	r3, #:upper16:P_pitch
 649 02ec D3ED007A 		flds	s15, [r3, #0]
 650 02f0 77EEA77A 		fadds	s15, s15, s15
 651 02f4 37EE677A 		fsubs	s14, s14, s15
 652 02f8 40F20003 		movw	r3, #:lower16:P_pitch
 653 02fc C0F20003 		movt	r3, #:upper16:P_pitch
 654 0300 D3ED006A 		flds	s13, [r3, #0]
 655 0304 40F20003 		movw	r3, #:lower16:N_pitch
 656 0308 C0F20003 		movt	r3, #:upper16:N_pitch
 657 030c D3ED007A 		flds	s15, [r3, #0]
 658 0310 66EEA76A 		fmuls	s13, s13, s15
 659 0314 40F20003 		movw	r3, #:lower16:T
 660 0318 C0F20003 		movt	r3, #:upper16:T
 661 031c D3ED007A 		flds	s15, [r3, #0]
 662 0320 66EEA77A 		fmuls	s15, s13, s15
 663 0324 37EE277A 		fadds	s14, s14, s15
 664 0328 40F20003 		movw	r3, #:lower16:D_pitch
 665 032c C0F20003 		movt	r3, #:upper16:D_pitch
 666 0330 D3ED007A 		flds	s15, [r3, #0]
 667 0334 77EEA76A 		fadds	s13, s15, s15
 668 0338 40F20003 		movw	r3, #:lower16:N_pitch
 669 033c C0F20003 		movt	r3, #:upper16:N_pitch
 670 0340 D3ED007A 		flds	s15, [r3, #0]
 671 0344 66EEA77A 		fmuls	s15, s13, s15
 672 0348 77EE677A 		fsubs	s15, s14, s15
 673 034c 40F20003 		movw	r3, #:lower16:b_pitch
 674 0350 C0F20003 		movt	r3, #:upper16:b_pitch
 675 0354 C3ED017A 		fsts	s15, [r3, #4]
 120:../Main.c     **** 	b_pitch[2]=P_pitch+D_pitch*N_pitch;
 676              		.loc 1 120 0
 677 0358 40F20003 		movw	r3, #:lower16:D_pitch
 678 035c C0F20003 		movt	r3, #:upper16:D_pitch
 679 0360 93ED007A 		flds	s14, [r3, #0]
 680 0364 40F20003 		movw	r3, #:lower16:N_pitch
 681 0368 C0F20003 		movt	r3, #:upper16:N_pitch
 682 036c D3ED007A 		flds	s15, [r3, #0]
 683 0370 27EE277A 		fmuls	s14, s14, s15
 684 0374 40F20003 		movw	r3, #:lower16:P_pitch
 685 0378 C0F20003 		movt	r3, #:upper16:P_pitch
 686 037c D3ED007A 		flds	s15, [r3, #0]
 687 0380 77EE277A 		fadds	s15, s14, s15
 688 0384 40F20003 		movw	r3, #:lower16:b_pitch
 689 0388 C0F20003 		movt	r3, #:upper16:b_pitch
 690 038c C3ED027A 		fsts	s15, [r3, #8]
 121:../Main.c     **** 	a_pitch[0]=1-N_pitch*T;
 691              		.loc 1 121 0
 692 0390 40F20003 		movw	r3, #:lower16:N_pitch
 693 0394 C0F20003 		movt	r3, #:upper16:N_pitch
 694 0398 93ED007A 		flds	s14, [r3, #0]
 695 039c 40F20003 		movw	r3, #:lower16:T
 696 03a0 C0F20003 		movt	r3, #:upper16:T
 697 03a4 D3ED007A 		flds	s15, [r3, #0]
 698 03a8 67EE277A 		fmuls	s15, s14, s15
 699 03ac B7EE007A 		fconsts	s14, #112
 700 03b0 77EE677A 		fsubs	s15, s14, s15
 701 03b4 40F20003 		movw	r3, #:lower16:a_pitch
 702 03b8 C0F20003 		movt	r3, #:upper16:a_pitch
 703 03bc C3ED007A 		fsts	s15, [r3, #0]
 122:../Main.c     **** 	a_pitch[1]=N_pitch*T-2;
 704              		.loc 1 122 0
 705 03c0 40F20003 		movw	r3, #:lower16:N_pitch
 706 03c4 C0F20003 		movt	r3, #:upper16:N_pitch
 707 03c8 93ED007A 		flds	s14, [r3, #0]
 708 03cc 40F20003 		movw	r3, #:lower16:T
 709 03d0 C0F20003 		movt	r3, #:upper16:T
 710 03d4 D3ED007A 		flds	s15, [r3, #0]
 711 03d8 27EE277A 		fmuls	s14, s14, s15
 712 03dc F0EE007A 		fconsts	s15, #0
 713 03e0 77EE677A 		fsubs	s15, s14, s15
 714 03e4 40F20003 		movw	r3, #:lower16:a_pitch
 715 03e8 C0F20003 		movt	r3, #:upper16:a_pitch
 716 03ec C3ED017A 		fsts	s15, [r3, #4]
 123:../Main.c     **** 
 124:../Main.c     **** 	WatchRC_Init(); //Initialize RC watchdog
 717              		.loc 1 124 0
 718 03f0 FFF7FEFF 		bl	WatchRC_Init
 125:../Main.c     **** 
 126:../Main.c     **** 	delay(1000);
 719              		.loc 1 126 0
 720 03f4 4FF47A70 		mov	r0, #1000
 721 03f8 FFF7FEFF 		bl	delay
 127:../Main.c     **** 
 128:../Main.c     **** 	//InitDaisy();
 129:../Main.c     **** 
 130:../Main.c     **** 	PWMSP001_Start(&PWMSP001_Handle0);
 722              		.loc 1 130 0
 723 03fc 40F20000 		movw	r0, #:lower16:PWMSP001_Handle0
 724 0400 C0F20000 		movt	r0, #:upper16:PWMSP001_Handle0
 725 0404 FFF7FEFF 		bl	PWMSP001_Start
 131:../Main.c     **** }
 726              		.loc 1 131 0
 727 0408 80BD     		pop	{r7, pc}
 728              		.cfi_endproc
 729              	.LFE154:
 731 040a 00BF     		.section	.rodata
 732              		.align	2
 733              	.LC0:
 734 0028 5468726F 		.ascii	"Throttle: %f   Rudder: %f   Elevator: %f   Aileron:"
 734      74746C65 
 734      3A202566 
 734      20202052 
 734      75646465 
 735 005b 2025660A 		.ascii	" %f\012\000"
 735      00
 736              		.align	2
 737              	.LC1:
 738 0060 593A2531 		.ascii	"Y:%1.2f P:%1.2f R:%1.2f\012\000"
 738      2E326620 
 738      503A2531 
 738      2E326620 
 738      523A2531 
 739 0079 000000   		.align	2
 740              	.LC2:
 741 007c 50574D31 		.ascii	"PWM1:%f PWM2:%f PWM3:%f PWM4:%f\012\000"
 741      3A256620 
 741      50574D32 
 741      3A256620 
 741      50574D33 
 742 009d 000000   		.align	2
 743              	.LC3:
 744 00a0 65593A25 		.ascii	"eY:%f eP:%f eR:%f\012\000"
 744      66206550 
 744      3A256620 
 744      65523A25 
 744      660A00
 745 00b3 00       		.align	2
 746              	.LC4:
 747 00b4 54696D65 		.ascii	"TimerSensor:%d TimerMain:%d TimerRC:%d\012\000"
 747      7253656E 
 747      736F723A 
 747      25642054 
 747      696D6572 
 748              		.align	2
 749              	.LC5:
 750 00dc 4779726F 		.ascii	"GyroX:%3.2f GyroY:%3.2f GyroZ:%3.2f\012\000"
 750      583A2533 
 750      2E326620 
 750      4779726F 
 750      593A2533 
 751 0101 000000   		.align	2
 752              	.LC6:
 753 0104 41636358 		.ascii	"AccX:%f AccY:%f AccZ:%f\012\000"
 753      3A256620 
 753      41636359 
 753      3A256620 
 753      4163635A 
 754              		.section	.text.main,"ax",%progbits
 755              		.align	2
 756              		.global	main
 757              		.thumb
 758              		.thumb_func
 760              	main:
 761              	.LFB155:
 132:../Main.c     **** 
 133:../Main.c     **** int main(void)
 134:../Main.c     **** {
 762              		.loc 1 134 0
 763              		.cfi_startproc
 764              		@ args = 0, pretend = 0, frame = 8
 765              		@ frame_needed = 1, uses_anonymous_args = 0
 766 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, sl, fp, lr}
 767              	.LCFI5:
 768              		.cfi_def_cfa_offset 32
 769              		.cfi_offset 4, -32
 770              		.cfi_offset 5, -28
 771              		.cfi_offset 7, -24
 772              		.cfi_offset 8, -20
 773              		.cfi_offset 9, -16
 774              		.cfi_offset 10, -12
 775              		.cfi_offset 11, -8
 776              		.cfi_offset 14, -4
 777 0004 88B0     		sub	sp, sp, #32
 778              	.LCFI6:
 779              		.cfi_def_cfa_offset 64
 780 0006 06AF     		add	r7, sp, #24
 781              	.LCFI7:
 782              		.cfi_def_cfa 7, 40
 135:../Main.c     **** 	uint16_t Bytes = 0;
 783              		.loc 1 135 0
 784 0008 4FF00003 		mov	r3, #0
 785 000c BB80     		strh	r3, [r7, #4]	@ movhi
 136:../Main.c     **** 	uint16_t nByte;
 137:../Main.c     **** //	status_t status;		// Declaration of return variable for DAVE3 APIs (toggle comment if required)
 138:../Main.c     **** 
 139:../Main.c     **** 	DAVE_Init();			// Initialization of DAVE Apps
 786              		.loc 1 139 0
 787 000e FFF7FEFF 		bl	DAVE_Init
 140:../Main.c     **** 	USBVC001_Init();		//Initialize the USB core in Device mode
 788              		.loc 1 140 0
 789 0012 FFF7FEFF 		bl	USBVC001_Init
 141:../Main.c     **** 
 142:../Main.c     **** 	Initialize();
 790              		.loc 1 142 0
 791 0016 FFF7FEFF 		bl	Initialize
 792              	.L25:
 143:../Main.c     **** 
 144:../Main.c     **** 	while(1)
 145:../Main.c     **** 	{
 146:../Main.c     **** 		// Check number of bytes received
 147:../Main.c     **** 	    Bytes = USBVC001_BytesReceived();
 793              		.loc 1 147 0
 794 001a FFF7FEFF 		bl	USBVC001_BytesReceived
 795 001e 0346     		mov	r3, r0
 796 0020 BB80     		strh	r3, [r7, #4]	@ movhi
 148:../Main.c     **** 
 149:../Main.c     **** 	    if(Bytes != 0)
 797              		.loc 1 149 0
 798 0022 BB88     		ldrh	r3, [r7, #4]
 799 0024 002B     		cmp	r3, #0
 800 0026 00F0B781 		beq	.L11
 150:../Main.c     **** 	    {
 151:../Main.c     **** 	    	for(nByte = 0; nByte < Bytes; nByte++)
 801              		.loc 1 151 0
 802 002a 4FF00003 		mov	r3, #0
 803 002e FB80     		strh	r3, [r7, #6]	@ movhi
 804 0030 09E0     		b	.L12
 805              	.L13:
 152:../Main.c     **** 	    	{
 153:../Main.c     **** 	    		// Receive Byte
 154:../Main.c     **** 	    		if(USBVC001_ReceiveByte(&TxBuffer[0]) != DAVEApp_SUCCESS)
 806              		.loc 1 154 0
 807 0032 40F20000 		movw	r0, #:lower16:TxBuffer
 808 0036 C0F20000 		movt	r0, #:upper16:TxBuffer
 809 003a FFF7FEFF 		bl	USBVC001_ReceiveByte
 151:../Main.c     **** 	    	for(nByte = 0; nByte < Bytes; nByte++)
 810              		.loc 1 151 0
 811 003e FB88     		ldrh	r3, [r7, #6]	@ movhi
 812 0040 03F10103 		add	r3, r3, #1
 813 0044 FB80     		strh	r3, [r7, #6]	@ movhi
 814              	.L12:
 151:../Main.c     **** 	    	for(nByte = 0; nByte < Bytes; nByte++)
 815              		.loc 1 151 0 is_stmt 0 discriminator 1
 816 0046 FA88     		ldrh	r2, [r7, #6]
 817 0048 BB88     		ldrh	r3, [r7, #4]
 818 004a 9A42     		cmp	r2, r3
 819 004c F1D3     		bcc	.L13
 155:../Main.c     **** 	    		{
 156:../Main.c     **** 	    			//Error
 157:../Main.c     **** 	    		}
 158:../Main.c     **** 	    	}
 159:../Main.c     **** 
 160:../Main.c     **** 			switch(TxBuffer[0])
 820              		.loc 1 160 0 is_stmt 1
 821 004e 40F20003 		movw	r3, #:lower16:TxBuffer
 822 0052 C0F20003 		movt	r3, #:upper16:TxBuffer
 823 0056 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 824 0058 5BB2     		sxtb	r3, r3
 825 005a A3F13103 		sub	r3, r3, #49
 826 005e 082B     		cmp	r3, #8
 827 0060 00F29481 		bhi	.L14
 828 0064 01A2     		adr	r2, .L23
 829 0066 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 830 006a 00BF     		.align	2
 831              	.L23:
 832 006c 91000000 		.word	.L15+1
 833 0070 07010000 		.word	.L16+1
 834 0074 15010000 		.word	.L17+1
 835 0078 8D030000 		.word	.L14+1
 836 007c 73010000 		.word	.L18+1
 837 0080 E9010000 		.word	.L19+1
 838 0084 83020000 		.word	.L20+1
 839 0088 B9020000 		.word	.L21+1
 840 008c 23030000 		.word	.L22+1
 841              	.L15:
 161:../Main.c     **** 			{
 162:../Main.c     **** 				case '1':
 163:../Main.c     **** 					sprintf(c, "Throttle: %f   Rudder: %f   Elevator: %f   Aileron: %f\n", powerD, yawD_dot, pitch
 842              		.loc 1 163 0
 843 0090 40F20003 		movw	r3, #:lower16:powerD
 844 0094 C0F20003 		movt	r3, #:upper16:powerD
 845 0098 1B68     		ldr	r3, [r3, #0]	@ float
 846 009a 1846     		mov	r0, r3	@ float
 847 009c FFF7FEFF 		bl	__aeabi_f2d
 848 00a0 0446     		mov	r4, r0
 849 00a2 0D46     		mov	r5, r1
 850 00a4 40F20003 		movw	r3, #:lower16:yawD_dot
 851 00a8 C0F20003 		movt	r3, #:upper16:yawD_dot
 852 00ac 1B68     		ldr	r3, [r3, #0]	@ float
 853 00ae 1846     		mov	r0, r3	@ float
 854 00b0 FFF7FEFF 		bl	__aeabi_f2d
 855 00b4 8246     		mov	sl, r0
 856 00b6 8B46     		mov	fp, r1
 857 00b8 40F20003 		movw	r3, #:lower16:pitchD
 858 00bc C0F20003 		movt	r3, #:upper16:pitchD
 859 00c0 1B68     		ldr	r3, [r3, #0]	@ float
 860 00c2 1846     		mov	r0, r3	@ float
 861 00c4 FFF7FEFF 		bl	__aeabi_f2d
 862 00c8 8046     		mov	r8, r0
 863 00ca 8946     		mov	r9, r1
 864 00cc 40F20003 		movw	r3, #:lower16:rollD
 865 00d0 C0F20003 		movt	r3, #:upper16:rollD
 866 00d4 1B68     		ldr	r3, [r3, #0]	@ float
 867 00d6 1846     		mov	r0, r3	@ float
 868 00d8 FFF7FEFF 		bl	__aeabi_f2d
 869 00dc 0246     		mov	r2, r0
 870 00de 0B46     		mov	r3, r1
 871 00e0 CDE900AB 		strd	sl, [sp]
 872 00e4 CDE90289 		strd	r8, [sp, #8]
 873 00e8 CDE90423 		strd	r2, [sp, #16]
 874 00ec 40F20000 		movw	r0, #:lower16:c
 875 00f0 C0F20000 		movt	r0, #:upper16:c
 876 00f4 40F20001 		movw	r1, #:lower16:.LC0
 877 00f8 C0F20001 		movt	r1, #:upper16:.LC0
 878 00fc 2246     		mov	r2, r4
 879 00fe 2B46     		mov	r3, r5
 880 0100 FFF7FEFF 		bl	sprintf
 164:../Main.c     **** 					break;
 881              		.loc 1 164 0
 882 0104 42E1     		b	.L14
 883              	.L16:
 165:../Main.c     **** 				case '2':
 166:../Main.c     **** 					PWMSP001_Start(&PWMSP001_Handle2);
 884              		.loc 1 166 0
 885 0106 40F20000 		movw	r0, #:lower16:PWMSP001_Handle2
 886 010a C0F20000 		movt	r0, #:upper16:PWMSP001_Handle2
 887 010e FFF7FEFF 		bl	PWMSP001_Start
 167:../Main.c     **** 					break;
 888              		.loc 1 167 0
 889 0112 3BE1     		b	.L14
 890              	.L17:
 168:../Main.c     **** 				case '3':
 169:../Main.c     **** 					sprintf(c, "Y:%1.2f P:%1.2f R:%1.2f\n", YPR[0], YPR[1], YPR[2]);
 891              		.loc 1 169 0
 892 0114 40F20003 		movw	r3, #:lower16:YPR
 893 0118 C0F20003 		movt	r3, #:upper16:YPR
 894 011c 1B68     		ldr	r3, [r3, #0]	@ float
 895 011e 1846     		mov	r0, r3	@ float
 896 0120 FFF7FEFF 		bl	__aeabi_f2d
 897 0124 0446     		mov	r4, r0
 898 0126 0D46     		mov	r5, r1
 899 0128 40F20003 		movw	r3, #:lower16:YPR
 900 012c C0F20003 		movt	r3, #:upper16:YPR
 901 0130 5B68     		ldr	r3, [r3, #4]	@ float
 902 0132 1846     		mov	r0, r3	@ float
 903 0134 FFF7FEFF 		bl	__aeabi_f2d
 904 0138 8046     		mov	r8, r0
 905 013a 8946     		mov	r9, r1
 906 013c 40F20003 		movw	r3, #:lower16:YPR
 907 0140 C0F20003 		movt	r3, #:upper16:YPR
 908 0144 9B68     		ldr	r3, [r3, #8]	@ float
 909 0146 1846     		mov	r0, r3	@ float
 910 0148 FFF7FEFF 		bl	__aeabi_f2d
 911 014c 0246     		mov	r2, r0
 912 014e 0B46     		mov	r3, r1
 913 0150 CDE90089 		strd	r8, [sp]
 914 0154 CDE90223 		strd	r2, [sp, #8]
 915 0158 40F20000 		movw	r0, #:lower16:c
 916 015c C0F20000 		movt	r0, #:upper16:c
 917 0160 40F20001 		movw	r1, #:lower16:.LC1
 918 0164 C0F20001 		movt	r1, #:upper16:.LC1
 919 0168 2246     		mov	r2, r4
 920 016a 2B46     		mov	r3, r5
 921 016c FFF7FEFF 		bl	sprintf
 170:../Main.c     **** 					break;
 922              		.loc 1 170 0
 923 0170 0CE1     		b	.L14
 924              	.L18:
 171:../Main.c     **** 				case '5':
 172:../Main.c     **** 					sprintf(c, "PWM1:%f PWM2:%f PWM3:%f PWM4:%f\n", PWM_percent[0], PWM_percent[1], PWM_percent[2]
 925              		.loc 1 172 0
 926 0172 40F20003 		movw	r3, #:lower16:PWM_percent
 927 0176 C0F20003 		movt	r3, #:upper16:PWM_percent
 928 017a 1B68     		ldr	r3, [r3, #0]	@ float
 929 017c 1846     		mov	r0, r3	@ float
 930 017e FFF7FEFF 		bl	__aeabi_f2d
 931 0182 0446     		mov	r4, r0
 932 0184 0D46     		mov	r5, r1
 933 0186 40F20003 		movw	r3, #:lower16:PWM_percent
 934 018a C0F20003 		movt	r3, #:upper16:PWM_percent
 935 018e 5B68     		ldr	r3, [r3, #4]	@ float
 936 0190 1846     		mov	r0, r3	@ float
 937 0192 FFF7FEFF 		bl	__aeabi_f2d
 938 0196 8246     		mov	sl, r0
 939 0198 8B46     		mov	fp, r1
 940 019a 40F20003 		movw	r3, #:lower16:PWM_percent
 941 019e C0F20003 		movt	r3, #:upper16:PWM_percent
 942 01a2 9B68     		ldr	r3, [r3, #8]	@ float
 943 01a4 1846     		mov	r0, r3	@ float
 944 01a6 FFF7FEFF 		bl	__aeabi_f2d
 945 01aa 8046     		mov	r8, r0
 946 01ac 8946     		mov	r9, r1
 947 01ae 40F20003 		movw	r3, #:lower16:PWM_percent
 948 01b2 C0F20003 		movt	r3, #:upper16:PWM_percent
 949 01b6 DB68     		ldr	r3, [r3, #12]	@ float
 950 01b8 1846     		mov	r0, r3	@ float
 951 01ba FFF7FEFF 		bl	__aeabi_f2d
 952 01be 0246     		mov	r2, r0
 953 01c0 0B46     		mov	r3, r1
 954 01c2 CDE900AB 		strd	sl, [sp]
 955 01c6 CDE90289 		strd	r8, [sp, #8]
 956 01ca CDE90423 		strd	r2, [sp, #16]
 957 01ce 40F20000 		movw	r0, #:lower16:c
 958 01d2 C0F20000 		movt	r0, #:upper16:c
 959 01d6 40F20001 		movw	r1, #:lower16:.LC2
 960 01da C0F20001 		movt	r1, #:upper16:.LC2
 961 01de 2246     		mov	r2, r4
 962 01e0 2B46     		mov	r3, r5
 963 01e2 FFF7FEFF 		bl	sprintf
 173:../Main.c     **** 					break;
 964              		.loc 1 173 0
 965 01e6 D1E0     		b	.L14
 966              	.L19:
 174:../Main.c     **** 				case '6':
 175:../Main.c     **** 					sprintf(c, "eY:%f eP:%f eR:%f\n", yawD_dot-YPR[0], pitchD-YPR[1], rollD-YPR[2]);
 967              		.loc 1 175 0
 968 01e8 40F20003 		movw	r3, #:lower16:yawD_dot
 969 01ec C0F20003 		movt	r3, #:upper16:yawD_dot
 970 01f0 93ED007A 		flds	s14, [r3, #0]
 971 01f4 40F20003 		movw	r3, #:lower16:YPR
 972 01f8 C0F20003 		movt	r3, #:upper16:YPR
 973 01fc D3ED007A 		flds	s15, [r3, #0]
 974 0200 77EE677A 		fsubs	s15, s14, s15
 975 0204 17EE900A 		fmrs	r0, s15
 976 0208 FFF7FEFF 		bl	__aeabi_f2d
 977 020c 0446     		mov	r4, r0
 978 020e 0D46     		mov	r5, r1
 979 0210 40F20003 		movw	r3, #:lower16:pitchD
 980 0214 C0F20003 		movt	r3, #:upper16:pitchD
 981 0218 93ED007A 		flds	s14, [r3, #0]
 982 021c 40F20003 		movw	r3, #:lower16:YPR
 983 0220 C0F20003 		movt	r3, #:upper16:YPR
 984 0224 D3ED017A 		flds	s15, [r3, #4]
 985 0228 77EE677A 		fsubs	s15, s14, s15
 986 022c 17EE900A 		fmrs	r0, s15
 987 0230 FFF7FEFF 		bl	__aeabi_f2d
 988 0234 8046     		mov	r8, r0
 989 0236 8946     		mov	r9, r1
 990 0238 40F20003 		movw	r3, #:lower16:rollD
 991 023c C0F20003 		movt	r3, #:upper16:rollD
 992 0240 93ED007A 		flds	s14, [r3, #0]
 993 0244 40F20003 		movw	r3, #:lower16:YPR
 994 0248 C0F20003 		movt	r3, #:upper16:YPR
 995 024c D3ED027A 		flds	s15, [r3, #8]
 996 0250 77EE677A 		fsubs	s15, s14, s15
 997 0254 17EE900A 		fmrs	r0, s15
 998 0258 FFF7FEFF 		bl	__aeabi_f2d
 999 025c 0246     		mov	r2, r0
 1000 025e 0B46     		mov	r3, r1
 1001 0260 CDE90089 		strd	r8, [sp]
 1002 0264 CDE90223 		strd	r2, [sp, #8]
 1003 0268 40F20000 		movw	r0, #:lower16:c
 1004 026c C0F20000 		movt	r0, #:upper16:c
 1005 0270 40F20001 		movw	r1, #:lower16:.LC3
 1006 0274 C0F20001 		movt	r1, #:upper16:.LC3
 1007 0278 2246     		mov	r2, r4
 1008 027a 2B46     		mov	r3, r5
 1009 027c FFF7FEFF 		bl	sprintf
 176:../Main.c     **** 					break;
 1010              		.loc 1 176 0
 1011 0280 84E0     		b	.L14
 1012              	.L20:
 177:../Main.c     **** 				case '7':
 178:../Main.c     **** 					sprintf(c, "TimerSensor:%d TimerMain:%d TimerRC:%d\n", (int)GetSensorCount(), (int)counter_mai
 1013              		.loc 1 178 0
 1014 0282 FFF7FEFF 		bl	GetSensorCount
 1015 0286 0346     		mov	r3, r0
 1016 0288 1D46     		mov	r5, r3
 1017 028a 40F20003 		movw	r3, #:lower16:counter_main
 1018 028e C0F20003 		movt	r3, #:upper16:counter_main
 1019 0292 1B88     		ldrh	r3, [r3, #0]
 1020 0294 1C46     		mov	r4, r3
 1021 0296 FFF7FEFF 		bl	GetRCCount
 1022 029a 0346     		mov	r3, r0
 1023 029c 0093     		str	r3, [sp, #0]
 1024 029e 40F20000 		movw	r0, #:lower16:c
 1025 02a2 C0F20000 		movt	r0, #:upper16:c
 1026 02a6 40F20001 		movw	r1, #:lower16:.LC4
 1027 02aa C0F20001 		movt	r1, #:upper16:.LC4
 1028 02ae 2A46     		mov	r2, r5
 1029 02b0 2346     		mov	r3, r4
 1030 02b2 FFF7FEFF 		bl	sprintf
 179:../Main.c     **** 					break;
 1031              		.loc 1 179 0
 1032 02b6 69E0     		b	.L14
 1033              	.L21:
 180:../Main.c     **** 				case '8':
 181:../Main.c     **** 					GetGyroData(sensorData);
 1034              		.loc 1 181 0
 1035 02b8 40F20000 		movw	r0, #:lower16:sensorData
 1036 02bc C0F20000 		movt	r0, #:upper16:sensorData
 1037 02c0 FFF7FEFF 		bl	GetGyroData
 182:../Main.c     **** 					sprintf(c, "GyroX:%3.2f GyroY:%3.2f GyroZ:%3.2f\n", sensorData[0], sensorData[1], sensorData[2
 1038              		.loc 1 182 0
 1039 02c4 40F20003 		movw	r3, #:lower16:sensorData
 1040 02c8 C0F20003 		movt	r3, #:upper16:sensorData
 1041 02cc 1B68     		ldr	r3, [r3, #0]	@ float
 1042 02ce 1846     		mov	r0, r3	@ float
 1043 02d0 FFF7FEFF 		bl	__aeabi_f2d
 1044 02d4 0446     		mov	r4, r0
 1045 02d6 0D46     		mov	r5, r1
 1046 02d8 40F20003 		movw	r3, #:lower16:sensorData
 1047 02dc C0F20003 		movt	r3, #:upper16:sensorData
 1048 02e0 5B68     		ldr	r3, [r3, #4]	@ float
 1049 02e2 1846     		mov	r0, r3	@ float
 1050 02e4 FFF7FEFF 		bl	__aeabi_f2d
 1051 02e8 8046     		mov	r8, r0
 1052 02ea 8946     		mov	r9, r1
 1053 02ec 40F20003 		movw	r3, #:lower16:sensorData
 1054 02f0 C0F20003 		movt	r3, #:upper16:sensorData
 1055 02f4 9B68     		ldr	r3, [r3, #8]	@ float
 1056 02f6 1846     		mov	r0, r3	@ float
 1057 02f8 FFF7FEFF 		bl	__aeabi_f2d
 1058 02fc 0246     		mov	r2, r0
 1059 02fe 0B46     		mov	r3, r1
 1060 0300 CDE90089 		strd	r8, [sp]
 1061 0304 CDE90223 		strd	r2, [sp, #8]
 1062 0308 40F20000 		movw	r0, #:lower16:c
 1063 030c C0F20000 		movt	r0, #:upper16:c
 1064 0310 40F20001 		movw	r1, #:lower16:.LC5
 1065 0314 C0F20001 		movt	r1, #:upper16:.LC5
 1066 0318 2246     		mov	r2, r4
 1067 031a 2B46     		mov	r3, r5
 1068 031c FFF7FEFF 		bl	sprintf
 183:../Main.c     **** 					break;
 1069              		.loc 1 183 0
 1070 0320 34E0     		b	.L14
 1071              	.L22:
 184:../Main.c     **** 				case '9':
 185:../Main.c     **** 					GetAccData(sensorData);
 1072              		.loc 1 185 0
 1073 0322 40F20000 		movw	r0, #:lower16:sensorData
 1074 0326 C0F20000 		movt	r0, #:upper16:sensorData
 1075 032a FFF7FEFF 		bl	GetAccData
 186:../Main.c     **** 					sprintf(c, "AccX:%f AccY:%f AccZ:%f\n", sensorData[0], sensorData[1], sensorData[2]);
 1076              		.loc 1 186 0
 1077 032e 40F20003 		movw	r3, #:lower16:sensorData
 1078 0332 C0F20003 		movt	r3, #:upper16:sensorData
 1079 0336 1B68     		ldr	r3, [r3, #0]	@ float
 1080 0338 1846     		mov	r0, r3	@ float
 1081 033a FFF7FEFF 		bl	__aeabi_f2d
 1082 033e 0446     		mov	r4, r0
 1083 0340 0D46     		mov	r5, r1
 1084 0342 40F20003 		movw	r3, #:lower16:sensorData
 1085 0346 C0F20003 		movt	r3, #:upper16:sensorData
 1086 034a 5B68     		ldr	r3, [r3, #4]	@ float
 1087 034c 1846     		mov	r0, r3	@ float
 1088 034e FFF7FEFF 		bl	__aeabi_f2d
 1089 0352 8046     		mov	r8, r0
 1090 0354 8946     		mov	r9, r1
 1091 0356 40F20003 		movw	r3, #:lower16:sensorData
 1092 035a C0F20003 		movt	r3, #:upper16:sensorData
 1093 035e 9B68     		ldr	r3, [r3, #8]	@ float
 1094 0360 1846     		mov	r0, r3	@ float
 1095 0362 FFF7FEFF 		bl	__aeabi_f2d
 1096 0366 0246     		mov	r2, r0
 1097 0368 0B46     		mov	r3, r1
 1098 036a CDE90089 		strd	r8, [sp]
 1099 036e CDE90223 		strd	r2, [sp, #8]
 1100 0372 40F20000 		movw	r0, #:lower16:c
 1101 0376 C0F20000 		movt	r0, #:upper16:c
 1102 037a 40F20001 		movw	r1, #:lower16:.LC6
 1103 037e C0F20001 		movt	r1, #:upper16:.LC6
 1104 0382 2246     		mov	r2, r4
 1105 0384 2B46     		mov	r3, r5
 1106 0386 FFF7FEFF 		bl	sprintf
 187:../Main.c     **** 					break;
 1107              		.loc 1 187 0
 1108 038a 00BF     		nop
 1109              	.L14:
 188:../Main.c     **** 
 189:../Main.c     **** 			}
 190:../Main.c     **** 			USBVC001_SendString((const char *)c);
 1110              		.loc 1 190 0
 1111 038c 40F20000 		movw	r0, #:lower16:c
 1112 0390 C0F20000 		movt	r0, #:upper16:c
 1113 0394 FFF7FEFF 		bl	USBVC001_SendString
 1114              	.L11:
 191:../Main.c     **** 	    }
 192:../Main.c     **** 
 193:../Main.c     **** 	    if (sendMag)
 1115              		.loc 1 193 0
 1116 0398 40F20003 		movw	r3, #:lower16:sendMag
 1117 039c C0F20003 		movt	r3, #:upper16:sendMag
 1118 03a0 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1119 03a2 002B     		cmp	r3, #0
 1120 03a4 0CD0     		beq	.L24
 194:../Main.c     **** 	    {
 195:../Main.c     **** 	    	sendMag = FALSE;
 1121              		.loc 1 195 0
 1122 03a6 40F20003 		movw	r3, #:lower16:sendMag
 1123 03aa C0F20003 		movt	r3, #:upper16:sendMag
 1124 03ae 4FF00002 		mov	r2, #0
 1125 03b2 1A70     		strb	r2, [r3, #0]
 196:../Main.c     **** 	    	USBVC001_SendString((const char *)c);
 1126              		.loc 1 196 0
 1127 03b4 40F20000 		movw	r0, #:lower16:c
 1128 03b8 C0F20000 		movt	r0, #:upper16:c
 1129 03bc FFF7FEFF 		bl	USBVC001_SendString
 1130              	.L24:
 197:../Main.c     **** 	    }
 198:../Main.c     **** 
 199:../Main.c     **** 	    // Call continuous to handle class specific control request
 200:../Main.c     **** 	    USB_USBTask();
 1131              		.loc 1 200 0
 1132 03c0 FFF7FEFF 		bl	USB_USBTask
 201:../Main.c     **** 	}
 1133              		.loc 1 201 0
 1134 03c4 29E6     		b	.L25
 1135              		.cfi_endproc
 1136              	.LFE155:
 1138 03c6 00BF     		.section	.rodata
 1139 011d 000000   		.align	2
 1140              	.LC7:
 1141 0120 25662C25 		.ascii	"%f,%f,%f\015\012\000"
 1141      662C2566 
 1141      0D0A00
 1142 012b 00       		.section	.text.CCU41_3_IRQHandler,"ax",%progbits
 1143              		.align	2
 1144              		.global	CCU41_3_IRQHandler
 1145              		.thumb
 1146              		.thumb_func
 1148              	CCU41_3_IRQHandler:
 1149              	.LFB156:
 202:../Main.c     **** 	return 0;
 203:../Main.c     **** }
 204:../Main.c     **** 
 205:../Main.c     **** void Mag_Calibration_Int_Handler()
 206:../Main.c     **** {
 1150              		.loc 1 206 0
 1151              		.cfi_startproc
 1152              		@ args = 0, pretend = 0, frame = 0
 1153              		@ frame_needed = 1, uses_anonymous_args = 0
 1154 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 1155              	.LCFI8:
 1156              		.cfi_def_cfa_offset 24
 1157              		.cfi_offset 4, -24
 1158              		.cfi_offset 5, -20
 1159              		.cfi_offset 7, -16
 1160              		.cfi_offset 8, -12
 1161              		.cfi_offset 9, -8
 1162              		.cfi_offset 14, -4
 1163 0004 84B0     		sub	sp, sp, #16
 1164              	.LCFI9:
 1165              		.cfi_def_cfa_offset 40
 1166 0006 04AF     		add	r7, sp, #16
 1167              	.LCFI10:
 1168              		.cfi_def_cfa 7, 24
 207:../Main.c     ****     GetMagData(sensorData);
 1169              		.loc 1 207 0
 1170 0008 40F20000 		movw	r0, #:lower16:sensorData
 1171 000c C0F20000 		movt	r0, #:upper16:sensorData
 1172 0010 FFF7FEFF 		bl	GetMagData
 208:../Main.c     ****     sprintf(c, "%f,%f,%f\r\n", sensorData[0], sensorData[1], sensorData[2]);
 1173              		.loc 1 208 0
 1174 0014 40F20003 		movw	r3, #:lower16:sensorData
 1175 0018 C0F20003 		movt	r3, #:upper16:sensorData
 1176 001c 1B68     		ldr	r3, [r3, #0]	@ float
 1177 001e 1846     		mov	r0, r3	@ float
 1178 0020 FFF7FEFF 		bl	__aeabi_f2d
 1179 0024 0446     		mov	r4, r0
 1180 0026 0D46     		mov	r5, r1
 1181 0028 40F20003 		movw	r3, #:lower16:sensorData
 1182 002c C0F20003 		movt	r3, #:upper16:sensorData
 1183 0030 5B68     		ldr	r3, [r3, #4]	@ float
 1184 0032 1846     		mov	r0, r3	@ float
 1185 0034 FFF7FEFF 		bl	__aeabi_f2d
 1186 0038 8046     		mov	r8, r0
 1187 003a 8946     		mov	r9, r1
 1188 003c 40F20003 		movw	r3, #:lower16:sensorData
 1189 0040 C0F20003 		movt	r3, #:upper16:sensorData
 1190 0044 9B68     		ldr	r3, [r3, #8]	@ float
 1191 0046 1846     		mov	r0, r3	@ float
 1192 0048 FFF7FEFF 		bl	__aeabi_f2d
 1193 004c 0246     		mov	r2, r0
 1194 004e 0B46     		mov	r3, r1
 1195 0050 CDE90089 		strd	r8, [sp]
 1196 0054 CDE90223 		strd	r2, [sp, #8]
 1197 0058 40F20000 		movw	r0, #:lower16:c
 1198 005c C0F20000 		movt	r0, #:upper16:c
 1199 0060 40F20001 		movw	r1, #:lower16:.LC7
 1200 0064 C0F20001 		movt	r1, #:upper16:.LC7
 1201 0068 2246     		mov	r2, r4
 1202 006a 2B46     		mov	r3, r5
 1203 006c FFF7FEFF 		bl	sprintf
 209:../Main.c     ****     sendMag = TRUE;
 1204              		.loc 1 209 0
 1205 0070 40F20003 		movw	r3, #:lower16:sendMag
 1206 0074 C0F20003 		movt	r3, #:upper16:sendMag
 1207 0078 4FF00102 		mov	r2, #1
 1208 007c 1A70     		strb	r2, [r3, #0]
 210:../Main.c     **** }
 1209              		.loc 1 210 0
 1210 007e BD46     		mov	sp, r7
 1211 0080 BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 1212              		.cfi_endproc
 1213              	.LFE156:
 1215              		.text
 1216              	.Letext0:
 1217              		.file 2 "c:\\dave-3.1.10\\arm-gcc\\bin\\../lib/gcc/arm-none-eabi/4.7.4/../../../../arm-none-eabi/i
 1218              		.file 3 "C:\\DAVE-3.1.10\\eclipse\\/../CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 1219              		.file 4 "C:\\DAVE3_workspace\\ws3.1.10\\CORE_Larix_V1.0\\Dave\\Generated\\inc\\DAVESupport/../../i
 1220              		.file 5 "C:\\DAVE3_workspace\\ws3.1.10\\CORE_Larix_V1.0\\Dave\\Generated\\inc\\DAVESupport/../../i
 1221              		.file 6 "C:\\DAVE3_workspace\\ws3.1.10\\CORE_Larix_V1.0\\Dave\\Generated\\inc\\DAVESupport/../../i
 1222              		.file 7 "C:\\DAVE-3.1.10\\eclipse\\/../CMSIS/Include/core_cm4.h"
 1223              		.file 8 "C:\\DAVE3_workspace\\ws3.1.10\\CORE_Larix_V1.0\\Dave\\Generated\\inc\\DAVESupport/../../i
DEFINED SYMBOLS
                            *ABS*:00000000 Main.c
C:\Users\maan\AppData\Local\Temp\cc0ypjSI.s:24     .bss:00000000 PWM_percent
C:\Users\maan\AppData\Local\Temp\cc0ypjSI.s:21     .bss:00000000 $d
                            *COM*:00000008 x_pitch
                            *COM*:00000008 x_roll
C:\Users\maan\AppData\Local\Temp\cc0ypjSI.s:32     .bss:00000010 u_yaw_dot
C:\Users\maan\AppData\Local\Temp\cc0ypjSI.s:38     .bss:00000014 u_pitch
C:\Users\maan\AppData\Local\Temp\cc0ypjSI.s:44     .bss:00000018 u_roll
C:\Users\maan\AppData\Local\Temp\cc0ypjSI.s:51     .rodata:00000000 T
C:\Users\maan\AppData\Local\Temp\cc0ypjSI.s:48     .rodata:00000000 $d
C:\Users\maan\AppData\Local\Temp\cc0ypjSI.s:57     .rodata:00000004 P_roll
C:\Users\maan\AppData\Local\Temp\cc0ypjSI.s:63     .rodata:00000008 I_roll
C:\Users\maan\AppData\Local\Temp\cc0ypjSI.s:69     .rodata:0000000c D_roll
C:\Users\maan\AppData\Local\Temp\cc0ypjSI.s:75     .rodata:00000010 N_roll
C:\Users\maan\AppData\Local\Temp\cc0ypjSI.s:81     .rodata:00000014 P_pitch
C:\Users\maan\AppData\Local\Temp\cc0ypjSI.s:87     .rodata:00000018 I_pitch
C:\Users\maan\AppData\Local\Temp\cc0ypjSI.s:93     .rodata:0000001c D_pitch
C:\Users\maan\AppData\Local\Temp\cc0ypjSI.s:99     .rodata:00000020 N_pitch
C:\Users\maan\AppData\Local\Temp\cc0ypjSI.s:105    .rodata:00000024 P_yaw
                            *COM*:00000008 a_roll
                            *COM*:00000008 a_pitch
                            *COM*:0000000c b_roll
                            *COM*:0000000c b_pitch
C:\Users\maan\AppData\Local\Temp\cc0ypjSI.s:116    .bss:0000001c powerD
C:\Users\maan\AppData\Local\Temp\cc0ypjSI.s:122    .bss:00000020 yawD_dot
C:\Users\maan\AppData\Local\Temp\cc0ypjSI.s:128    .bss:00000024 pitchD
C:\Users\maan\AppData\Local\Temp\cc0ypjSI.s:134    .bss:00000028 rollD
                            *COM*:0000000c YPR
                            *COM*:0000000c sensorData
C:\Users\maan\AppData\Local\Temp\cc0ypjSI.s:142    .bss:0000002c TxBuffer
                            *COM*:00000064 c
C:\Users\maan\AppData\Local\Temp\cc0ypjSI.s:148    .bss:00000090 sendMag
C:\Users\maan\AppData\Local\Temp\cc0ypjSI.s:154    .bss:00000092 counter_main
C:\Users\maan\AppData\Local\Temp\cc0ypjSI.s:160    .bss:00000094 MonitorBuffer
C:\Users\maan\AppData\Local\Temp\cc0ypjSI.s:165    .bss:000000a2 MotorRunning
C:\Users\maan\AppData\Local\Temp\cc0ypjSI.s:172    .text.CCU41_1_IRQHandler:00000000 $t
C:\Users\maan\AppData\Local\Temp\cc0ypjSI.s:177    .text.CCU41_1_IRQHandler:00000000 CCU41_1_IRQHandler
C:\Users\maan\AppData\Local\Temp\cc0ypjSI.s:427    .text.CCU41_1_IRQHandler:00000290 $d
C:\Users\maan\AppData\Local\Temp\cc0ypjSI.s:435    .text.Initialize:00000000 $t
C:\Users\maan\AppData\Local\Temp\cc0ypjSI.s:440    .text.Initialize:00000000 Initialize
C:\Users\maan\AppData\Local\Temp\cc0ypjSI.s:733    .rodata:00000028 .LC0
C:\Users\maan\AppData\Local\Temp\cc0ypjSI.s:737    .rodata:00000060 .LC1
C:\Users\maan\AppData\Local\Temp\cc0ypjSI.s:740    .rodata:0000007c .LC2
C:\Users\maan\AppData\Local\Temp\cc0ypjSI.s:743    .rodata:000000a0 .LC3
C:\Users\maan\AppData\Local\Temp\cc0ypjSI.s:746    .rodata:000000b4 .LC4
C:\Users\maan\AppData\Local\Temp\cc0ypjSI.s:749    .rodata:000000dc .LC5
C:\Users\maan\AppData\Local\Temp\cc0ypjSI.s:752    .rodata:00000104 .LC6
C:\Users\maan\AppData\Local\Temp\cc0ypjSI.s:755    .text.main:00000000 $t
C:\Users\maan\AppData\Local\Temp\cc0ypjSI.s:760    .text.main:00000000 main
C:\Users\maan\AppData\Local\Temp\cc0ypjSI.s:832    .text.main:0000006c $d
C:\Users\maan\AppData\Local\Temp\cc0ypjSI.s:843    .text.main:00000090 $t
C:\Users\maan\AppData\Local\Temp\cc0ypjSI.s:1140   .rodata:00000120 .LC7
C:\Users\maan\AppData\Local\Temp\cc0ypjSI.s:1143   .text.CCU41_3_IRQHandler:00000000 $t
C:\Users\maan\AppData\Local\Temp\cc0ypjSI.s:1148   .text.CCU41_3_IRQHandler:00000000 CCU41_3_IRQHandler
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.84cfd71c6d2dc0bd4021712beaa9efd8
                           .group:00000000 wm4.XMC4500.h.45.215f4b8c79f46c7645c15373868d08c0
                           .group:00000000 wm4.core_cm4.h.47.41af406cb4cda82c972f112a9cd0a024
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.7aefdac4826acebbfc9f3822a0aeb14c
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.core_cmInstr.h.39.3d3d1b4a79aef37532666dc6ee87c6ac
                           .group:00000000 wm4.core_cm4_simd.h.43.b5d1d38735af6366227b4256d330cf13
                           .group:00000000 wm4.core_cm4.h.178.e5ef5ce66d198d7f00f9d0076e267c41
                           .group:00000000 wm4.system_XMC4500.h.29.827f68baa362c84f2abae4ab67dde7c9
                           .group:00000000 wm4.XMC4500.h.198.8e022f279ff353ed081df898dc7b9cf3
                           .group:00000000 wm4.stddef.h.40.50cf36416e06376af8a9dca28536f2e4
                           .group:00000000 wm4.types.h.60.e75c47576398c648cdcf9000ace5e3d8
                           .group:00000000 wm4.MULTIPLEXER.h.46.4a863fbae1c79f0db26da3ce2dc30d02
                           .group:00000000 wm4.CCU8PWMLIB.h.74.725ec81203769525cc7a424597055f47
                           .group:00000000 wm4.MOTORLIB.h.62.951091d95913dd2ff36d761323a1771d
                           .group:00000000 wm4.DBG001.h.116.d6d9e7459a0faa3905c97c1d2edb339d
                           .group:00000000 wm4.uc_id.h.35.fa57ecd9f559d2767f56c96da2848c12
                           .group:00000000 wm4.CLK001_Const.h.50.e5e9c2ddc89f4cc9e7b93e9648fa94e4
                           .group:00000000 wm4.CLK001_Conf.h.81.851ac7a1268528f4d6739384c2f248a5
                           .group:00000000 wm4._default_types.h.6.5e12cd604db8ce00b62bb2f02708eaf3
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4.stddef.h.161.c6104a0666cf681b6269ddc9b4f516d4
                           .group:00000000 wm4.types.h.2.e9cec8c90ab35f77d9f499e06ae02400
                           .group:00000000 wm4.types.h.80.1f2c84c0d57dd52dd9936095d9ac218e
                           .group:00000000 wm4.time.h.16.a4579e68956d2601c6113814b546764b
                           .group:00000000 wm4.RTC001.h.113.715d6fcab1863c6656b238bddd304166
                           .group:00000000 wm4.lmm001_debuglog.h.40.8031299705ecf04ad726bd19baff976d
                           .group:00000000 wm4.reent.h.11.a39e4126dcf3c6afd3054e0622577bae
                           .group:00000000 wm4.stddef.h.161.e50ff8a9d5d1abbc15641da28ac571bf
                           .group:00000000 wm4.string.h.86.d5c872ff52e2712c985b588a0ef39f3c
                           .group:00000000 wm4.LMM001.h.45.fa2df8bae969f45df5071221ac433ffa
                           .group:00000000 wm4.stdio.h.27.f2ac352bab34f31f9f478442827b2ba6
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.63.dfdea6580b080784d08faace69b6ed76
                           .group:00000000 wm4.stdlib.h.13.603ed7eb09a1561ab06840b7c0fcff58
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.53.c69c7609933ff56d59c757cec2d13230
                           .group:00000000 wm4.time.h.2.9857e62ad6ac99431e29d58067232314
                           .group:00000000 wm4.time.h.24.c499d4c1915694df17abb795fd34b719
                           .group:00000000 wm4.time.h.124.10ced469f846269cafc58b59c853e1bb
                           .group:00000000 wm4.errno.h.2.ba016d646105af6cad23be83630b6a3f
                           .group:00000000 wm4.errno.h.9.65044c2b5d8494e43f5986ab0a1d770f
                           .group:00000000 wm4.unistd.h.2.6ce1b91c4223f6078c1b210c7538c1d2
                           .group:00000000 wm4.unistd.h.251.605bc560cdc6c3b07b599bb71ac4e425
                           .group:00000000 wm4.malloc.h.4.62bd13b8107d5245f60bd92bb5994838
                           .group:00000000 wm4.malloc.h.148.73b7de3bd065dafbd594b04197a9466e
                           .group:00000000 wm4.reent.h.91.faac4d0ac97c0fcf23d10d0786197642
                           .group:00000000 wm4.SLTHA003.h.104.05371e300b30617373255b3cdb4765a2
                           .group:00000000 wm4.SYSTM001.h.64.6ecb31c49bc3e7691644fdcdfc11b5cd
                           .group:00000000 wm4.stdarg.h.31.fa591a4b1df9e413e9f5b8097f9ae89d
                           .group:00000000 wm4.Type_CM.h.61.3660c940695d7d5fef91de9c4081d0f0
                           .group:00000000 wm4.dwc_os.h.82.db2ca40c41e2f648d146b8942e5157d9
                           .group:00000000 wm4.dwc_otg_core_if.h.95.37e41eee47e9a4502e4044edf60ea92d
                           .group:00000000 wm4.usbcore001_device.h.107.6c032c9c28ac6c3f4e5e24a068720cd7
                           .group:00000000 wm4.USB.h.399.44a2bec94122294f06c4d854450494d3
                           .group:00000000 wm4.Common.h.102.bc881ac788d1d7ce84e651cbaa40f2c2
                           .group:00000000 wm4.Common.h.134.5069b632a0407201156f18fde915b80c
                           .group:00000000 wm4.USBMode.h.234.0cc9e23131c025605bb7c0db3ebb8ac9
                           .group:00000000 wm4.StdRequestType.h.93.4e19c7c655f990c2abedbb76a546fcde
                           .group:00000000 wm4.Endpoint.h.116.4ef46b127c9047ed49fe1e0df19e09b8
                           .group:00000000 wm4.StdDescriptors.h.120.0ce817e16dcc91b8cf4a79ba0e0e19b6
                           .group:00000000 wm4.CDC.h.103.7ce3e4692dde29e827f8736493eef7ef
                           .group:00000000 wm4.CDC.h.115.c83a7d6c5b6c8644b3dec6212d4ced09
                           .group:00000000 wm4.Descriptors.h.91.5cf84c2489ee54d154cabfe9e14b5c19
                           .group:00000000 wm4.Usic.h.54.8af9f733ba5771eeb374435d205ea54b
                           .group:00000000 wm4.UART001_Conf.h.53.fce01a2aa073e958cae0b1cc894db26c
                           .group:00000000 wm4.UART001.h.109.3e835815a7a59791d8bd39655f4d4cc9
                           .group:00000000 wm4.CCU4Global_Conf.h.63.a52fac0daa39b5f58343578312b4eb54
                           .group:00000000 wm4.PWMSP001.h.57.29b732b86baf3e81f49153f5f495912e
                           .group:00000000 wm4.NVIC002_Conf.h.63.2cf6f4b7cf62c0c8f8d5baa4db880def
                           .group:00000000 wm4.I2C001.h.97.5277d52889d6c741e048ea45ee1277b5
                           .group:00000000 wm4.I2C001_Conf.h.58.e471e519f7471a50493b6f4fe912ee0d
                           .group:00000000 wm4.ERU001_Conf.h.69.6d7c31a774e428b1dc8770c7c31047dd
                           .group:00000000 wm4.ERU002_Conf.h.49.47045c766c6d22ab1185285e9d568758
                           .group:00000000 wm4.IO002_Conf.h.51.be0baad511cf66771895fab0bf90f390
                           .group:00000000 wm4.limits.h.2.43fda939be266b929466b0fef1d948d4
                           .group:00000000 wm4.limits.h.61.9aaff5f42682428210a5b13055277813
                           .group:00000000 wm4.math.h.35.cc9264b0ced3bd063c5784e64e89cf51
                           .group:00000000 wm4.arm_math.h.258.4f811f2034dd4ca295ea6f28c00c3d1e
                           .group:00000000 wm4.arm_math.h.277.3c36979cd3767d76e13a76d35d605b04
                           .group:00000000 wm4.QuaternionFilters.h.9.8d6677ee602ddf2a66354108c84046ca
                           .group:00000000 wm4.MPU9150.h.24.16f5a6eff446695172c3f21781dbc08f
                           .group:00000000 wm4.RCReceive.h.9.9423d286c6666265d5aad415493f1867
                           .group:00000000 wm4.DaisyCodes.h.9.06b3ba8a33d82ef6faf2c6f59bdf534a

UNDEFINED SYMBOLS
__aeabi_f2d
__aeabi_ddiv
__aeabi_dmul
__aeabi_d2uiz
GetAngles
GetRCData
AngleRateController
AngleController
CreatePulseWidth
SendDaisyData
delay
MPU9150_Setup
WatchRC_Init
PWMSP001_Handle0
PWMSP001_Start
DAVE_Init
USBVC001_Init
USBVC001_BytesReceived
USBVC001_ReceiveByte
sprintf
PWMSP001_Handle2
GetSensorCount
GetRCCount
GetGyroData
GetAccData
USBVC001_SendString
USB_USBTask
GetMagData
