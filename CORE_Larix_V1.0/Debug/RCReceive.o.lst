   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"RCReceive.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	throttle
  20              		.bss
  21              		.align	2
  24              	throttle:
  25 0000 00000000 		.space	4
  26              		.global	rudder
  27              		.align	2
  30              	rudder:
  31 0004 00000000 		.space	4
  32              		.global	elevator
  33              		.align	2
  36              	elevator:
  37 0008 00000000 		.space	4
  38              		.global	aileron
  39              		.align	2
  42              	aileron:
  43 000c 00000000 		.space	4
  44              		.global	flightmode
  47              	flightmode:
  48 0010 00       		.space	1
  49              		.global	RCTimeOut
  50              		.data
  53              	RCTimeOut:
  54 0000 01       		.byte	1
  55              		.global	RCCount
  56              		.bss
  59              	RCCount:
  60 0011 00       		.space	1
  61              		.comm	TimerWatchRC,4,4
  62              		.section	.text.mergeBytes,"ax",%progbits
  63              		.align	2
  64              		.global	mergeBytes
  65              		.thumb
  66              		.thumb_func
  68              	mergeBytes:
  69              	.LFB120:
  70              		.file 1 "../RCReceive.c"
   1:../RCReceive.c **** /*
   2:../RCReceive.c ****  * RCReceive.c
   3:../RCReceive.c ****  *
   4:../RCReceive.c ****  *  Created on: 22.12.2014
   5:../RCReceive.c ****  *      Author: maan
   6:../RCReceive.c ****  */
   7:../RCReceive.c **** 
   8:../RCReceive.c **** #include "RCReceive.h"
   9:../RCReceive.c **** 
  10:../RCReceive.c **** //Joystick values (range between -1 and 1, 0 in middle position)
  11:../RCReceive.c **** float throttle = 0.0;
  12:../RCReceive.c **** float rudder = 0.0;
  13:../RCReceive.c **** float elevator = 0.0;
  14:../RCReceive.c **** float aileron = 0.0;
  15:../RCReceive.c **** 
  16:../RCReceive.c **** uint8_t flightmode = 0; //Flightmode switch
  17:../RCReceive.c **** 
  18:../RCReceive.c **** uint8_t RCTimeOut = 1; //Timeout remote control 0:OK 1:TimeOut
  19:../RCReceive.c **** uint8_t RCCount = 0; //Counter for RC read (used for TimeOut)
  20:../RCReceive.c **** 
  21:../RCReceive.c **** // Software timer
  22:../RCReceive.c **** handle_t TimerWatchRC; //Timer for RC watchdog
  23:../RCReceive.c **** 
  24:../RCReceive.c **** /*
  25:../RCReceive.c ****  * Merge two bytes to one integer
  26:../RCReceive.c ****  *
  27:../RCReceive.c ****  * Parameters:
  28:../RCReceive.c ****  * uint8_t a: high-byte
  29:../RCReceive.c ****  * uint8_t b: low-byte
  30:../RCReceive.c ****  *
  31:../RCReceive.c ****  * Returnvalue:
  32:../RCReceive.c ****  * int Merged bytes
  33:../RCReceive.c ****  */
  34:../RCReceive.c **** int mergeBytes (uint8_t a, uint8_t b) {
  71              		.loc 1 34 0
  72              		.cfi_startproc
  73              		@ args = 0, pretend = 0, frame = 16
  74              		@ frame_needed = 1, uses_anonymous_args = 0
  75              		@ link register save eliminated.
  76 0000 80B4     		push	{r7}
  77              	.LCFI0:
  78              		.cfi_def_cfa_offset 4
  79              		.cfi_offset 7, -4
  80 0002 85B0     		sub	sp, sp, #20
  81              	.LCFI1:
  82              		.cfi_def_cfa_offset 24
  83 0004 00AF     		add	r7, sp, #0
  84              	.LCFI2:
  85              		.cfi_def_cfa_register 7
  86 0006 0246     		mov	r2, r0
  87 0008 0B46     		mov	r3, r1
  88 000a FA71     		strb	r2, [r7, #7]
  89 000c BB71     		strb	r3, [r7, #6]
  35:../RCReceive.c ****    int c = a;
  90              		.loc 1 35 0
  91 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  92 0010 FB60     		str	r3, [r7, #12]
  36:../RCReceive.c ****    return (c << 8) | b;
  93              		.loc 1 36 0
  94 0012 FB68     		ldr	r3, [r7, #12]
  95 0014 4FEA0322 		lsl	r2, r3, #8
  96 0018 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
  97 001a 1343     		orrs	r3, r3, r2
  37:../RCReceive.c **** }
  98              		.loc 1 37 0
  99 001c 1846     		mov	r0, r3
 100 001e 07F11407 		add	r7, r7, #20
 101 0022 BD46     		mov	sp, r7
 102 0024 80BC     		pop	{r7}
 103 0026 7047     		bx	lr
 104              		.cfi_endproc
 105              	.LFE120:
 107              		.global	__aeabi_i2d
 108              		.global	__aeabi_ddiv
 109              		.global	__aeabi_d2f
 110              		.section	.text.USIC1_0_IRQHandler,"ax",%progbits
 111              		.align	2
 112              		.global	USIC1_0_IRQHandler
 113              		.thumb
 114              		.thumb_func
 116              	USIC1_0_IRQHandler:
 117              	.LFB121:
  38:../RCReceive.c **** 
  39:../RCReceive.c **** /**
  40:../RCReceive.c ****  * Interrupt routine from UART FIFO in buffer
  41:../RCReceive.c ****  * Buffer is full, new data is ready to read
  42:../RCReceive.c ****  */
  43:../RCReceive.c **** void RC_Receive_Int_Handler()
  44:../RCReceive.c **** {
 118              		.loc 1 44 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 56
 121              		@ frame_needed = 1, uses_anonymous_args = 0
 122 0000 80B5     		push	{r7, lr}
 123              	.LCFI3:
 124              		.cfi_def_cfa_offset 8
 125              		.cfi_offset 7, -8
 126              		.cfi_offset 14, -4
 127 0002 90B0     		sub	sp, sp, #64
 128              	.LCFI4:
 129              		.cfi_def_cfa_offset 72
 130 0004 02AF     		add	r7, sp, #8
 131              	.LCFI5:
 132              		.cfi_def_cfa 7, 64
  45:../RCReceive.c **** 	//Raw values from receiver
  46:../RCReceive.c **** 	int throttleRaw;
  47:../RCReceive.c **** 	int rudderRaw;
  48:../RCReceive.c **** 	int elevatorRaw;
  49:../RCReceive.c **** 	int aileronRaw;
  50:../RCReceive.c **** 	int flightmodeRaw;
  51:../RCReceive.c **** 
  52:../RCReceive.c **** 	uint8_t ReadBufRC[32]; //Readbuffer
  53:../RCReceive.c **** 	int start = 0; //Index of start byte (contains 0x30)
 133              		.loc 1 53 0
 134 0006 4FF00003 		mov	r3, #0
 135 000a 7B63     		str	r3, [r7, #52]
  54:../RCReceive.c **** 
  55:../RCReceive.c **** 	//Check if receive buffer interrupt is set
  56:../RCReceive.c **** 	if(UART001_GetFlagStatus(&UART001_Handle0,UART001_FIFO_STD_RECV_BUF_FLAG) == UART001_SET)
 136              		.loc 1 56 0
 137 000c 40F20000 		movw	r0, #:lower16:UART001_Handle0
 138 0010 C0F20000 		movt	r0, #:upper16:UART001_Handle0
 139 0014 4FF01001 		mov	r1, #16
 140 0018 FFF7FEFF 		bl	UART001_GetFlagStatus
 141 001c 0346     		mov	r3, r0
 142 001e 022B     		cmp	r3, #2
 143 0020 40F07D81 		bne	.L3
  57:../RCReceive.c **** 	{
  58:../RCReceive.c **** 		//Read data from UART buffer
  59:../RCReceive.c **** 		UART001_ReadDataBytes(&UART001_Handle0,ReadBufRC,32);
 144              		.loc 1 59 0
 145 0024 3B46     		mov	r3, r7
 146 0026 40F20000 		movw	r0, #:lower16:UART001_Handle0
 147 002a C0F20000 		movt	r0, #:upper16:UART001_Handle0
 148 002e 1946     		mov	r1, r3
 149 0030 4FF02002 		mov	r2, #32
 150 0034 FFF7FEFF 		bl	UART001_ReadDataBytes
  60:../RCReceive.c **** 		//Clear receive buffer interrupt flag
  61:../RCReceive.c **** 		UART001_ClearFlag(&UART001_Handle0,UART001_FIFO_STD_RECV_BUF_FLAG);
 151              		.loc 1 61 0
 152 0038 40F20000 		movw	r0, #:lower16:UART001_Handle0
 153 003c C0F20000 		movt	r0, #:upper16:UART001_Handle0
 154 0040 4FF01001 		mov	r1, #16
 155 0044 FFF7FEFF 		bl	UART001_ClearFlag
  62:../RCReceive.c **** 
  63:../RCReceive.c **** 		//Search for start byte and check static values
  64:../RCReceive.c **** 		while (ReadBufRC[start] != 0x30 || ReadBufRC[start+1] != 0x00 || ReadBufRC[start+5] != 0xA2 || Re
 156              		.loc 1 64 0
 157 0048 0CE0     		b	.L5
 158              	.L7:
  65:../RCReceive.c **** 		{
  66:../RCReceive.c **** 			if (start++ > 16) {
 159              		.loc 1 66 0
 160 004a 7B6B     		ldr	r3, [r7, #52]
 161 004c 102B     		cmp	r3, #16
 162 004e D4BF     		ite	le
 163 0050 0023     		movle	r3, #0
 164 0052 0123     		movgt	r3, #1
 165 0054 DBB2     		uxtb	r3, r3
 166 0056 7A6B     		ldr	r2, [r7, #52]
 167 0058 02F10102 		add	r2, r2, #1
 168 005c 7A63     		str	r2, [r7, #52]
 169 005e 002B     		cmp	r3, #0
 170 0060 40F05D81 		bne	.L3
 171              	.L5:
  64:../RCReceive.c **** 		while (ReadBufRC[start] != 0x30 || ReadBufRC[start+1] != 0x00 || ReadBufRC[start+5] != 0xA2 || Re
 172              		.loc 1 64 0 discriminator 1
 173 0064 3A46     		mov	r2, r7
 174 0066 7B6B     		ldr	r3, [r7, #52]
 175 0068 D318     		adds	r3, r2, r3
 176 006a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 177 006c 302B     		cmp	r3, #48
 178 006e ECD1     		bne	.L7
  64:../RCReceive.c **** 		while (ReadBufRC[start] != 0x30 || ReadBufRC[start+1] != 0x00 || ReadBufRC[start+5] != 0xA2 || Re
 179              		.loc 1 64 0 is_stmt 0 discriminator 2
 180 0070 7B6B     		ldr	r3, [r7, #52]
 181 0072 03F10103 		add	r3, r3, #1
 182 0076 07F13801 		add	r1, r7, #56
 183 007a CB18     		adds	r3, r1, r3
 184 007c 13F8383C 		ldrb	r3, [r3, #-56]	@ zero_extendqisi2
 185 0080 002B     		cmp	r3, #0
 186 0082 E2D1     		bne	.L7
  64:../RCReceive.c **** 		while (ReadBufRC[start] != 0x30 || ReadBufRC[start+1] != 0x00 || ReadBufRC[start+5] != 0xA2 || Re
 187              		.loc 1 64 0 discriminator 1
 188 0084 7B6B     		ldr	r3, [r7, #52]
 189 0086 03F10503 		add	r3, r3, #5
 190 008a 07F13802 		add	r2, r7, #56
 191 008e D318     		adds	r3, r2, r3
 192 0090 13F8383C 		ldrb	r3, [r3, #-56]	@ zero_extendqisi2
 193 0094 A22B     		cmp	r3, #162
 194 0096 D8D1     		bne	.L7
 195 0098 7B6B     		ldr	r3, [r7, #52]
 196 009a 03F10803 		add	r3, r3, #8
 197 009e 07F13801 		add	r1, r7, #56
 198 00a2 CB18     		adds	r3, r1, r3
 199 00a4 13F8383C 		ldrb	r3, [r3, #-56]	@ zero_extendqisi2
 200 00a8 2B2B     		cmp	r3, #43
 201 00aa CED1     		bne	.L7
 202 00ac 7B6B     		ldr	r3, [r7, #52]
 203 00ae 03F10903 		add	r3, r3, #9
 204 00b2 07F13802 		add	r2, r7, #56
 205 00b6 D318     		adds	r3, r2, r3
 206 00b8 13F8383C 		ldrb	r3, [r3, #-56]	@ zero_extendqisi2
 207 00bc FE2B     		cmp	r3, #254
 208 00be C4D1     		bne	.L7
  67:../RCReceive.c **** 				//Communication check bytes not in buffer
  68:../RCReceive.c **** 				return;
  69:../RCReceive.c **** 			}
  70:../RCReceive.c **** 		}
  71:../RCReceive.c **** 
  72:../RCReceive.c **** 		//Get data from stream
  73:../RCReceive.c **** 		throttleRaw = mergeBytes(ReadBufRC[start+2],ReadBufRC[start+3]);
 209              		.loc 1 73 0 is_stmt 1
 210 00c0 7B6B     		ldr	r3, [r7, #52]
 211 00c2 03F10203 		add	r3, r3, #2
 212 00c6 07F13801 		add	r1, r7, #56
 213 00ca CB18     		adds	r3, r1, r3
 214 00cc 13F8382C 		ldrb	r2, [r3, #-56]	@ zero_extendqisi2
 215 00d0 7B6B     		ldr	r3, [r7, #52]
 216 00d2 03F10303 		add	r3, r3, #3
 217 00d6 07F13801 		add	r1, r7, #56
 218 00da CB18     		adds	r3, r1, r3
 219 00dc 13F8383C 		ldrb	r3, [r3, #-56]	@ zero_extendqisi2
 220 00e0 1046     		mov	r0, r2
 221 00e2 1946     		mov	r1, r3
 222 00e4 FFF7FEFF 		bl	mergeBytes
 223 00e8 3863     		str	r0, [r7, #48]
  74:../RCReceive.c **** 		throttle = map(throttleRaw, THROTTLE_MIN, THROTTLE_MAX, 0, 60000)/60000.0;
 224              		.loc 1 74 0
 225 00ea 4EF66023 		movw	r3, #60000
 226 00ee 0093     		str	r3, [sp, #0]
 227 00f0 386B     		ldr	r0, [r7, #48]
 228 00f2 4FF49971 		mov	r1, #306
 229 00f6 40F2F762 		movw	r2, #1783
 230 00fa 4FF00003 		mov	r3, #0
 231 00fe FFF7FEFF 		bl	map
 232 0102 0346     		mov	r3, r0
 233 0104 1846     		mov	r0, r3
 234 0106 FFF7FEFF 		bl	__aeabi_i2d
 235 010a 0246     		mov	r2, r0
 236 010c 0B46     		mov	r3, r1
 237 010e 1046     		mov	r0, r2
 238 0110 1946     		mov	r1, r3
 239 0112 85A3     		adr	r3, .L11
 240 0114 D3E90023 		ldrd	r2, [r3]
 241 0118 FFF7FEFF 		bl	__aeabi_ddiv
 242 011c 0246     		mov	r2, r0
 243 011e 0B46     		mov	r3, r1
 244 0120 1046     		mov	r0, r2
 245 0122 1946     		mov	r1, r3
 246 0124 FFF7FEFF 		bl	__aeabi_d2f
 247 0128 0246     		mov	r2, r0	@ float
 248 012a 40F20003 		movw	r3, #:lower16:throttle
 249 012e C0F20003 		movt	r3, #:upper16:throttle
 250 0132 1A60     		str	r2, [r3, #0]	@ float
  75:../RCReceive.c **** 		aileronRaw = mergeBytes(ReadBufRC[start+6],ReadBufRC[start+7]);
 251              		.loc 1 75 0
 252 0134 7B6B     		ldr	r3, [r7, #52]
 253 0136 03F10603 		add	r3, r3, #6
 254 013a 07F13802 		add	r2, r7, #56
 255 013e D318     		adds	r3, r2, r3
 256 0140 13F8382C 		ldrb	r2, [r3, #-56]	@ zero_extendqisi2
 257 0144 7B6B     		ldr	r3, [r7, #52]
 258 0146 03F10703 		add	r3, r3, #7
 259 014a 07F13801 		add	r1, r7, #56
 260 014e CB18     		adds	r3, r1, r3
 261 0150 13F8383C 		ldrb	r3, [r3, #-56]	@ zero_extendqisi2
 262 0154 1046     		mov	r0, r2
 263 0156 1946     		mov	r1, r3
 264 0158 FFF7FEFF 		bl	mergeBytes
 265 015c F862     		str	r0, [r7, #44]
  76:../RCReceive.c **** 		aileron = map(aileronRaw, AILERON_MIN, AILERON_MAX, -30000, 30000)/30000.0;
 266              		.loc 1 76 0
 267 015e 47F23053 		movw	r3, #30000
 268 0162 0093     		str	r3, [sp, #0]
 269 0164 F86A     		ldr	r0, [r7, #44]
 270 0166 40F63211 		movw	r1, #2354
 271 016a 40F6CC62 		movw	r2, #3788
 272 016e 48F6D023 		movw	r3, #35536
 273 0172 CFF6FF73 		movt	r3, 65535
 274 0176 FFF7FEFF 		bl	map
 275 017a 0346     		mov	r3, r0
 276 017c 1846     		mov	r0, r3
 277 017e FFF7FEFF 		bl	__aeabi_i2d
 278 0182 0246     		mov	r2, r0
 279 0184 0B46     		mov	r3, r1
 280 0186 1046     		mov	r0, r2
 281 0188 1946     		mov	r1, r3
 282 018a 69A3     		adr	r3, .L11+8
 283 018c D3E90023 		ldrd	r2, [r3]
 284 0190 FFF7FEFF 		bl	__aeabi_ddiv
 285 0194 0246     		mov	r2, r0
 286 0196 0B46     		mov	r3, r1
 287 0198 1046     		mov	r0, r2
 288 019a 1946     		mov	r1, r3
 289 019c FFF7FEFF 		bl	__aeabi_d2f
 290 01a0 0246     		mov	r2, r0	@ float
 291 01a2 40F20003 		movw	r3, #:lower16:aileron
 292 01a6 C0F20003 		movt	r3, #:upper16:aileron
 293 01aa 1A60     		str	r2, [r3, #0]	@ float
  77:../RCReceive.c **** 		elevatorRaw = mergeBytes(ReadBufRC[start+10],ReadBufRC[start+11]);
 294              		.loc 1 77 0
 295 01ac 7B6B     		ldr	r3, [r7, #52]
 296 01ae 03F10A03 		add	r3, r3, #10
 297 01b2 07F13802 		add	r2, r7, #56
 298 01b6 D318     		adds	r3, r2, r3
 299 01b8 13F8382C 		ldrb	r2, [r3, #-56]	@ zero_extendqisi2
 300 01bc 7B6B     		ldr	r3, [r7, #52]
 301 01be 03F10B03 		add	r3, r3, #11
 302 01c2 07F13801 		add	r1, r7, #56
 303 01c6 CB18     		adds	r3, r1, r3
 304 01c8 13F8383C 		ldrb	r3, [r3, #-56]	@ zero_extendqisi2
 305 01cc 1046     		mov	r0, r2
 306 01ce 1946     		mov	r1, r3
 307 01d0 FFF7FEFF 		bl	mergeBytes
 308 01d4 B862     		str	r0, [r7, #40]
  78:../RCReceive.c **** 		elevator = map(elevatorRaw, ELEVATOR_MIN, ELEVATOR_MAX, -30000, 30000)/30000.0;
 309              		.loc 1 78 0
 310 01d6 47F23053 		movw	r3, #30000
 311 01da 0093     		str	r3, [sp, #0]
 312 01dc B86A     		ldr	r0, [r7, #40]
 313 01de 41F23011 		movw	r1, #4400
 314 01e2 41F2CA62 		movw	r2, #5834
 315 01e6 48F6D023 		movw	r3, #35536
 316 01ea CFF6FF73 		movt	r3, 65535
 317 01ee FFF7FEFF 		bl	map
 318 01f2 0346     		mov	r3, r0
 319 01f4 1846     		mov	r0, r3
 320 01f6 FFF7FEFF 		bl	__aeabi_i2d
 321 01fa 0246     		mov	r2, r0
 322 01fc 0B46     		mov	r3, r1
 323 01fe 1046     		mov	r0, r2
 324 0200 1946     		mov	r1, r3
 325 0202 4BA3     		adr	r3, .L11+8
 326 0204 D3E90023 		ldrd	r2, [r3]
 327 0208 FFF7FEFF 		bl	__aeabi_ddiv
 328 020c 0246     		mov	r2, r0
 329 020e 0B46     		mov	r3, r1
 330 0210 1046     		mov	r0, r2
 331 0212 1946     		mov	r1, r3
 332 0214 FFF7FEFF 		bl	__aeabi_d2f
 333 0218 0246     		mov	r2, r0	@ float
 334 021a 40F20003 		movw	r3, #:lower16:elevator
 335 021e C0F20003 		movt	r3, #:upper16:elevator
 336 0222 1A60     		str	r2, [r3, #0]	@ float
  79:../RCReceive.c **** 		rudderRaw = mergeBytes(ReadBufRC[start+14],ReadBufRC[start+15]);
 337              		.loc 1 79 0
 338 0224 7B6B     		ldr	r3, [r7, #52]
 339 0226 03F10E03 		add	r3, r3, #14
 340 022a 07F13802 		add	r2, r7, #56
 341 022e D318     		adds	r3, r2, r3
 342 0230 13F8382C 		ldrb	r2, [r3, #-56]	@ zero_extendqisi2
 343 0234 7B6B     		ldr	r3, [r7, #52]
 344 0236 03F10F03 		add	r3, r3, #15
 345 023a 07F13801 		add	r1, r7, #56
 346 023e CB18     		adds	r3, r1, r3
 347 0240 13F8383C 		ldrb	r3, [r3, #-56]	@ zero_extendqisi2
 348 0244 1046     		mov	r0, r2
 349 0246 1946     		mov	r1, r3
 350 0248 FFF7FEFF 		bl	mergeBytes
 351 024c 7862     		str	r0, [r7, #36]
  80:../RCReceive.c **** 		rudder = map(rudderRaw, RUDDER_MIN, RUDDER_MAX, -30000, 30000)/30000.0;
 352              		.loc 1 80 0
 353 024e 47F23053 		movw	r3, #30000
 354 0252 0093     		str	r3, [sp, #0]
 355 0254 786A     		ldr	r0, [r7, #36]
 356 0256 41F63211 		movw	r1, #6450
 357 025a 41F6CC62 		movw	r2, #7884
 358 025e 48F6D023 		movw	r3, #35536
 359 0262 CFF6FF73 		movt	r3, 65535
 360 0266 FFF7FEFF 		bl	map
 361 026a 0346     		mov	r3, r0
 362 026c 1846     		mov	r0, r3
 363 026e FFF7FEFF 		bl	__aeabi_i2d
 364 0272 0246     		mov	r2, r0
 365 0274 0B46     		mov	r3, r1
 366 0276 1046     		mov	r0, r2
 367 0278 1946     		mov	r1, r3
 368 027a 2DA3     		adr	r3, .L11+8
 369 027c D3E90023 		ldrd	r2, [r3]
 370 0280 FFF7FEFF 		bl	__aeabi_ddiv
 371 0284 0246     		mov	r2, r0
 372 0286 0B46     		mov	r3, r1
 373 0288 1046     		mov	r0, r2
 374 028a 1946     		mov	r1, r3
 375 028c FFF7FEFF 		bl	__aeabi_d2f
 376 0290 0246     		mov	r2, r0	@ float
 377 0292 40F20003 		movw	r3, #:lower16:rudder
 378 0296 C0F20003 		movt	r3, #:upper16:rudder
 379 029a 1A60     		str	r2, [r3, #0]	@ float
  81:../RCReceive.c **** 		flightmodeRaw = mergeBytes(ReadBufRC[start+12],ReadBufRC[start+13]);
 380              		.loc 1 81 0
 381 029c 7B6B     		ldr	r3, [r7, #52]
 382 029e 03F10C03 		add	r3, r3, #12
 383 02a2 07F13802 		add	r2, r7, #56
 384 02a6 D318     		adds	r3, r2, r3
 385 02a8 13F8382C 		ldrb	r2, [r3, #-56]	@ zero_extendqisi2
 386 02ac 7B6B     		ldr	r3, [r7, #52]
 387 02ae 03F10D03 		add	r3, r3, #13
 388 02b2 07F13801 		add	r1, r7, #56
 389 02b6 CB18     		adds	r3, r1, r3
 390 02b8 13F8383C 		ldrb	r3, [r3, #-56]	@ zero_extendqisi2
 391 02bc 1046     		mov	r0, r2
 392 02be 1946     		mov	r1, r3
 393 02c0 FFF7FEFF 		bl	mergeBytes
 394 02c4 3862     		str	r0, [r7, #32]
  82:../RCReceive.c **** 		if (flightmodeRaw == FLIGHTMODE0) flightmode = 0;
 395              		.loc 1 82 0
 396 02c6 3A6A     		ldr	r2, [r7, #32]
 397 02c8 42F23213 		movw	r3, #8498
 398 02cc 9A42     		cmp	r2, r3
 399 02ce 06D1     		bne	.L8
 400              		.loc 1 82 0 is_stmt 0 discriminator 1
 401 02d0 40F20003 		movw	r3, #:lower16:flightmode
 402 02d4 C0F20003 		movt	r3, #:upper16:flightmode
 403 02d8 4FF00002 		mov	r2, #0
 404 02dc 1A70     		strb	r2, [r3, #0]
 405              	.L8:
  83:../RCReceive.c **** 		if (flightmodeRaw == FLIGHTMODE1) flightmode = 1;
 406              		.loc 1 83 0 is_stmt 1
 407 02de 3A6A     		ldr	r2, [r7, #32]
 408 02e0 42F2CA63 		movw	r3, #9930
 409 02e4 9A42     		cmp	r2, r3
 410 02e6 06D1     		bne	.L9
 411              		.loc 1 83 0 is_stmt 0 discriminator 1
 412 02e8 40F20003 		movw	r3, #:lower16:flightmode
 413 02ec C0F20003 		movt	r3, #:upper16:flightmode
 414 02f0 4FF00102 		mov	r2, #1
 415 02f4 1A70     		strb	r2, [r3, #0]
 416              	.L9:
  84:../RCReceive.c **** 
  85:../RCReceive.c **** 		//Set values for RC Timeout check
  86:../RCReceive.c **** 		RCTimeOut = 0;
 417              		.loc 1 86 0 is_stmt 1
 418 02f6 40F20003 		movw	r3, #:lower16:RCTimeOut
 419 02fa C0F20003 		movt	r3, #:upper16:RCTimeOut
 420 02fe 4FF00002 		mov	r2, #0
 421 0302 1A70     		strb	r2, [r3, #0]
  87:../RCReceive.c **** 		RCCount++;
 422              		.loc 1 87 0
 423 0304 40F20003 		movw	r3, #:lower16:RCCount
 424 0308 C0F20003 		movt	r3, #:upper16:RCCount
 425 030c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 426 030e 03F10103 		add	r3, r3, #1
 427 0312 DAB2     		uxtb	r2, r3
 428 0314 40F20003 		movw	r3, #:lower16:RCCount
 429 0318 C0F20003 		movt	r3, #:upper16:RCCount
 430 031c 1A70     		strb	r2, [r3, #0]
 431              	.L3:
  88:../RCReceive.c **** 	}
  89:../RCReceive.c **** }
 432              		.loc 1 89 0
 433 031e 07F13807 		add	r7, r7, #56
 434 0322 BD46     		mov	sp, r7
 435 0324 80BD     		pop	{r7, pc}
 436              	.L12:
 437 0326 00BF     		.align	3
 438              	.L11:
 439 0328 00000000 		.word	0
 440 032c 004CED40 		.word	1089293312
 441 0330 00000000 		.word	0
 442 0334 004CDD40 		.word	1088244736
 443              		.cfi_endproc
 444              	.LFE121:
 446              		.section	.text.WatchRC,"ax",%progbits
 447              		.align	2
 448              		.global	WatchRC
 449              		.thumb
 450              		.thumb_func
 452              	WatchRC:
 453              	.LFB122:
  90:../RCReceive.c **** 
  91:../RCReceive.c **** /*
  92:../RCReceive.c ****  * Check if new data has been arrived since last function call
  93:../RCReceive.c ****  * This function is called from software Timer "TimerWatchRC"
  94:../RCReceive.c ****  */
  95:../RCReceive.c **** void WatchRC(void* Temp)
  96:../RCReceive.c **** {
 454              		.loc 1 96 0
 455              		.cfi_startproc
 456              		@ args = 0, pretend = 0, frame = 8
 457              		@ frame_needed = 1, uses_anonymous_args = 0
 458              		@ link register save eliminated.
 459 0000 80B4     		push	{r7}
 460              	.LCFI6:
 461              		.cfi_def_cfa_offset 4
 462              		.cfi_offset 7, -4
 463 0002 83B0     		sub	sp, sp, #12
 464              	.LCFI7:
 465              		.cfi_def_cfa_offset 16
 466 0004 00AF     		add	r7, sp, #0
 467              	.LCFI8:
 468              		.cfi_def_cfa_register 7
 469 0006 7860     		str	r0, [r7, #4]
  97:../RCReceive.c **** 	static uint8_t lastCount;
  98:../RCReceive.c **** 
  99:../RCReceive.c **** 	if (lastCount == RCCount) RCTimeOut = 1;
 470              		.loc 1 99 0
 471 0008 40F20003 		movw	r3, #:lower16:lastCount.10639
 472 000c C0F20003 		movt	r3, #:upper16:lastCount.10639
 473 0010 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 474 0012 40F20003 		movw	r3, #:lower16:RCCount
 475 0016 C0F20003 		movt	r3, #:upper16:RCCount
 476 001a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 477 001c 9A42     		cmp	r2, r3
 478 001e 06D1     		bne	.L14
 479              		.loc 1 99 0 is_stmt 0 discriminator 1
 480 0020 40F20003 		movw	r3, #:lower16:RCTimeOut
 481 0024 C0F20003 		movt	r3, #:upper16:RCTimeOut
 482 0028 4FF00102 		mov	r2, #1
 483 002c 1A70     		strb	r2, [r3, #0]
 484              	.L14:
 100:../RCReceive.c **** 	lastCount = RCCount;
 485              		.loc 1 100 0 is_stmt 1
 486 002e 40F20003 		movw	r3, #:lower16:RCCount
 487 0032 C0F20003 		movt	r3, #:upper16:RCCount
 488 0036 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 489 0038 40F20003 		movw	r3, #:lower16:lastCount.10639
 490 003c C0F20003 		movt	r3, #:upper16:lastCount.10639
 491 0040 1A70     		strb	r2, [r3, #0]
 101:../RCReceive.c **** }
 492              		.loc 1 101 0
 493 0042 07F10C07 		add	r7, r7, #12
 494 0046 BD46     		mov	sp, r7
 495 0048 80BC     		pop	{r7}
 496 004a 7047     		bx	lr
 497              		.cfi_endproc
 498              	.LFE122:
 500              		.section	.text.WatchRC_Init,"ax",%progbits
 501              		.align	2
 502              		.global	WatchRC_Init
 503              		.thumb
 504              		.thumb_func
 506              	WatchRC_Init:
 507              	.LFB123:
 102:../RCReceive.c **** 
 103:../RCReceive.c **** /*
 104:../RCReceive.c ****  * Initialize RC watchdog
 105:../RCReceive.c ****  */
 106:../RCReceive.c **** void WatchRC_Init()
 107:../RCReceive.c **** {
 508              		.loc 1 107 0
 509              		.cfi_startproc
 510              		@ args = 0, pretend = 0, frame = 0
 511              		@ frame_needed = 1, uses_anonymous_args = 0
 512 0000 80B5     		push	{r7, lr}
 513              	.LCFI9:
 514              		.cfi_def_cfa_offset 8
 515              		.cfi_offset 7, -8
 516              		.cfi_offset 14, -4
 517 0002 00AF     		add	r7, sp, #0
 518              	.LCFI10:
 519              		.cfi_def_cfa_register 7
 108:../RCReceive.c **** 	//Set timer to check every 100ms, if new data has arrived
 109:../RCReceive.c **** 	TimerWatchRC = SYSTM001_CreateTimer(100,SYSTM001_PERIODIC,WatchRC,NULL);
 520              		.loc 1 109 0
 521 0004 4FF06400 		mov	r0, #100
 522 0008 4FF00101 		mov	r1, #1
 523 000c 40F20002 		movw	r2, #:lower16:WatchRC
 524 0010 C0F20002 		movt	r2, #:upper16:WatchRC
 525 0014 4FF00003 		mov	r3, #0
 526 0018 FFF7FEFF 		bl	SYSTM001_CreateTimer
 527 001c 0246     		mov	r2, r0
 528 001e 40F20003 		movw	r3, #:lower16:TimerWatchRC
 529 0022 C0F20003 		movt	r3, #:upper16:TimerWatchRC
 530 0026 1A60     		str	r2, [r3, #0]
 110:../RCReceive.c **** 	if(TimerWatchRC != 0)
 531              		.loc 1 110 0
 532 0028 40F20003 		movw	r3, #:lower16:TimerWatchRC
 533 002c C0F20003 		movt	r3, #:upper16:TimerWatchRC
 534 0030 1B68     		ldr	r3, [r3, #0]
 535 0032 002B     		cmp	r3, #0
 536 0034 07D0     		beq	.L15
 111:../RCReceive.c **** 	{
 112:../RCReceive.c **** 		//Timer is created successfully
 113:../RCReceive.c **** 		if(SYSTM001_StartTimer(TimerWatchRC) == DAVEApp_SUCCESS)
 537              		.loc 1 113 0
 538 0036 40F20003 		movw	r3, #:lower16:TimerWatchRC
 539 003a C0F20003 		movt	r3, #:upper16:TimerWatchRC
 540 003e 1B68     		ldr	r3, [r3, #0]
 541 0040 1846     		mov	r0, r3
 542 0042 FFF7FEFF 		bl	SYSTM001_StartTimer
 543              	.L15:
 114:../RCReceive.c **** 		{
 115:../RCReceive.c **** 			//Timer started
 116:../RCReceive.c **** 		}
 117:../RCReceive.c **** 	}
 118:../RCReceive.c **** }
 544              		.loc 1 118 0
 545 0046 80BD     		pop	{r7, pc}
 546              		.cfi_endproc
 547              	.LFE123:
 549              		.section	.text.GetRCCount,"ax",%progbits
 550              		.align	2
 551              		.global	GetRCCount
 552              		.thumb
 553              		.thumb_func
 555              	GetRCCount:
 556              	.LFB124:
 119:../RCReceive.c **** 
 120:../RCReceive.c **** uint8_t GetRCCount()
 121:../RCReceive.c **** {
 557              		.loc 1 121 0
 558              		.cfi_startproc
 559              		@ args = 0, pretend = 0, frame = 0
 560              		@ frame_needed = 1, uses_anonymous_args = 0
 561              		@ link register save eliminated.
 562 0000 80B4     		push	{r7}
 563              	.LCFI11:
 564              		.cfi_def_cfa_offset 4
 565              		.cfi_offset 7, -4
 566 0002 00AF     		add	r7, sp, #0
 567              	.LCFI12:
 568              		.cfi_def_cfa_register 7
 122:../RCReceive.c **** 	return RCCount;
 569              		.loc 1 122 0
 570 0004 40F20003 		movw	r3, #:lower16:RCCount
 571 0008 C0F20003 		movt	r3, #:upper16:RCCount
 572 000c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 123:../RCReceive.c **** }
 573              		.loc 1 123 0
 574 000e 1846     		mov	r0, r3
 575 0010 BD46     		mov	sp, r7
 576 0012 80BC     		pop	{r7}
 577 0014 7047     		bx	lr
 578              		.cfi_endproc
 579              	.LFE124:
 581 0016 00BF     		.section	.text.GetRCTimeOut,"ax",%progbits
 582              		.align	2
 583              		.global	GetRCTimeOut
 584              		.thumb
 585              		.thumb_func
 587              	GetRCTimeOut:
 588              	.LFB125:
 124:../RCReceive.c **** 
 125:../RCReceive.c **** uint8_t GetRCTimeOut()
 126:../RCReceive.c **** {
 589              		.loc 1 126 0
 590              		.cfi_startproc
 591              		@ args = 0, pretend = 0, frame = 0
 592              		@ frame_needed = 1, uses_anonymous_args = 0
 593              		@ link register save eliminated.
 594 0000 80B4     		push	{r7}
 595              	.LCFI13:
 596              		.cfi_def_cfa_offset 4
 597              		.cfi_offset 7, -4
 598 0002 00AF     		add	r7, sp, #0
 599              	.LCFI14:
 600              		.cfi_def_cfa_register 7
 127:../RCReceive.c **** 	return RCTimeOut;
 601              		.loc 1 127 0
 602 0004 40F20003 		movw	r3, #:lower16:RCTimeOut
 603 0008 C0F20003 		movt	r3, #:upper16:RCTimeOut
 604 000c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 128:../RCReceive.c **** }
 605              		.loc 1 128 0
 606 000e 1846     		mov	r0, r3
 607 0010 BD46     		mov	sp, r7
 608 0012 80BC     		pop	{r7}
 609 0014 7047     		bx	lr
 610              		.cfi_endproc
 611              	.LFE125:
 613              		.global	__aeabi_f2d
 614              		.global	__aeabi_dcmpgt
 615              		.global	__aeabi_dcmplt
 616 0016 00BF     		.section	.text.GetRCData,"ax",%progbits
 617              		.align	2
 618              		.global	GetRCData
 619              		.thumb
 620              		.thumb_func
 622              	GetRCData:
 623              	.LFB126:
 129:../RCReceive.c **** 
 130:../RCReceive.c **** void GetRCData(float* power, float* yaw_dot, float* pitch, float* roll)
 131:../RCReceive.c **** {
 624              		.loc 1 131 0
 625              		.cfi_startproc
 626              		@ args = 0, pretend = 0, frame = 16
 627              		@ frame_needed = 1, uses_anonymous_args = 0
 628 0000 80B5     		push	{r7, lr}
 629              	.LCFI15:
 630              		.cfi_def_cfa_offset 8
 631              		.cfi_offset 7, -8
 632              		.cfi_offset 14, -4
 633 0002 84B0     		sub	sp, sp, #16
 634              	.LCFI16:
 635              		.cfi_def_cfa_offset 24
 636 0004 00AF     		add	r7, sp, #0
 637              	.LCFI17:
 638              		.cfi_def_cfa_register 7
 639 0006 F860     		str	r0, [r7, #12]
 640 0008 B960     		str	r1, [r7, #8]
 641 000a 7A60     		str	r2, [r7, #4]
 642 000c 3B60     		str	r3, [r7, #0]
 132:../RCReceive.c **** 	if (RCTimeOut)
 643              		.loc 1 132 0
 644 000e 40F20003 		movw	r3, #:lower16:RCTimeOut
 645 0012 C0F20003 		movt	r3, #:upper16:RCTimeOut
 646 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 647 0018 002B     		cmp	r3, #0
 648 001a 10D0     		beq	.L22
 133:../RCReceive.c **** 	{
 134:../RCReceive.c **** 		*power=0;
 649              		.loc 1 134 0
 650 001c FB68     		ldr	r3, [r7, #12]
 651 001e 4FF00002 		mov	r2, #0
 652 0022 1A60     		str	r2, [r3, #0]	@ float
 135:../RCReceive.c **** 		*yaw_dot=0;
 653              		.loc 1 135 0
 654 0024 BB68     		ldr	r3, [r7, #8]
 655 0026 4FF00002 		mov	r2, #0
 656 002a 1A60     		str	r2, [r3, #0]	@ float
 136:../RCReceive.c **** 		*pitch=0;
 657              		.loc 1 136 0
 658 002c 7B68     		ldr	r3, [r7, #4]
 659 002e 4FF00002 		mov	r2, #0
 660 0032 1A60     		str	r2, [r3, #0]	@ float
 137:../RCReceive.c **** 		*roll=0;
 661              		.loc 1 137 0
 662 0034 3B68     		ldr	r3, [r7, #0]
 663 0036 4FF00002 		mov	r2, #0
 664 003a 1A60     		str	r2, [r3, #0]	@ float
 665 003c 62E0     		b	.L21
 666              	.L22:
 138:../RCReceive.c **** 	}
 139:../RCReceive.c **** 	else
 140:../RCReceive.c **** 	{
 141:../RCReceive.c **** 		*power=SCALE_POWER*throttle;
 667              		.loc 1 141 0
 668 003e 40F20003 		movw	r3, #:lower16:throttle
 669 0042 C0F20003 		movt	r3, #:upper16:throttle
 670 0046 93ED007A 		flds	s14, [r3, #0]
 671 004a DFED357A 		flds	s15, .L29+16
 672 004e 67EE277A 		fmuls	s15, s14, s15
 673 0052 FB68     		ldr	r3, [r7, #12]
 674 0054 C3ED007A 		fsts	s15, [r3, #0]
 142:../RCReceive.c **** 		if (rudder > 0.01 || rudder < -0.01)
 675              		.loc 1 142 0
 676 0058 40F20003 		movw	r3, #:lower16:rudder
 677 005c C0F20003 		movt	r3, #:upper16:rudder
 678 0060 1B68     		ldr	r3, [r3, #0]	@ float
 679 0062 1846     		mov	r0, r3	@ float
 680 0064 FFF7FEFF 		bl	__aeabi_f2d
 681 0068 0246     		mov	r2, r0
 682 006a 0B46     		mov	r3, r1
 683 006c 1046     		mov	r0, r2
 684 006e 1946     		mov	r1, r3
 685 0070 27A3     		adr	r3, .L29
 686 0072 D3E90023 		ldrd	r2, [r3]
 687 0076 FFF7FEFF 		bl	__aeabi_dcmpgt
 688 007a 0346     		mov	r3, r0
 689 007c 002B     		cmp	r3, #0
 690 007e 13D1     		bne	.L24
 691              		.loc 1 142 0 is_stmt 0 discriminator 1
 692 0080 40F20003 		movw	r3, #:lower16:rudder
 693 0084 C0F20003 		movt	r3, #:upper16:rudder
 694 0088 1B68     		ldr	r3, [r3, #0]	@ float
 695 008a 1846     		mov	r0, r3	@ float
 696 008c FFF7FEFF 		bl	__aeabi_f2d
 697 0090 0246     		mov	r2, r0
 698 0092 0B46     		mov	r3, r1
 699 0094 1046     		mov	r0, r2
 700 0096 1946     		mov	r1, r3
 701 0098 1FA3     		adr	r3, .L29+8
 702 009a D3E90023 		ldrd	r2, [r3]
 703 009e FFF7FEFF 		bl	__aeabi_dcmplt
 704 00a2 0346     		mov	r3, r0
 705 00a4 002B     		cmp	r3, #0
 706 00a6 0DD0     		beq	.L28
 707              	.L24:
 143:../RCReceive.c **** 			*yaw_dot=rudder*SCALE_YAW;
 708              		.loc 1 143 0 is_stmt 1
 709 00a8 40F20003 		movw	r3, #:lower16:rudder
 710 00ac C0F20003 		movt	r3, #:upper16:rudder
 711 00b0 93ED007A 		flds	s14, [r3, #0]
 712 00b4 DFED1B7A 		flds	s15, .L29+20
 713 00b8 67EE277A 		fmuls	s15, s14, s15
 714 00bc BB68     		ldr	r3, [r7, #8]
 715 00be C3ED007A 		fsts	s15, [r3, #0]
 716 00c2 03E0     		b	.L27
 717              	.L28:
 144:../RCReceive.c **** 		else
 145:../RCReceive.c **** 			*yaw_dot = 0;
 718              		.loc 1 145 0
 719 00c4 BB68     		ldr	r3, [r7, #8]
 720 00c6 4FF00002 		mov	r2, #0
 721 00ca 1A60     		str	r2, [r3, #0]	@ float
 722              	.L27:
 146:../RCReceive.c **** 		*pitch=elevator*SCALE_PITCH;
 723              		.loc 1 146 0
 724 00cc 40F20003 		movw	r3, #:lower16:elevator
 725 00d0 C0F20003 		movt	r3, #:upper16:elevator
 726 00d4 93ED007A 		flds	s14, [r3, #0]
 727 00d8 F3EE0E7A 		fconsts	s15, #62
 728 00dc 67EE277A 		fmuls	s15, s14, s15
 729 00e0 7B68     		ldr	r3, [r7, #4]
 730 00e2 C3ED007A 		fsts	s15, [r3, #0]
 147:../RCReceive.c **** 		*roll=-aileron*SCALE_ROLL;
 731              		.loc 1 147 0
 732 00e6 40F20003 		movw	r3, #:lower16:aileron
 733 00ea C0F20003 		movt	r3, #:upper16:aileron
 734 00ee D3ED007A 		flds	s15, [r3, #0]
 735 00f2 B1EE677A 		fnegs	s14, s15
 736 00f6 F3EE0E7A 		fconsts	s15, #62
 737 00fa 67EE277A 		fmuls	s15, s14, s15
 738 00fe 3B68     		ldr	r3, [r7, #0]
 739 0100 C3ED007A 		fsts	s15, [r3, #0]
 740              	.L21:
 148:../RCReceive.c **** 	}
 149:../RCReceive.c **** }
 741              		.loc 1 149 0
 742 0104 07F11007 		add	r7, r7, #16
 743 0108 BD46     		mov	sp, r7
 744 010a 80BD     		pop	{r7, pc}
 745              	.L30:
 746 010c AFF30080 		.align	3
 747              	.L29:
 748 0110 7B14AE47 		.word	1202590843
 749 0114 E17A843F 		.word	1065646817
 750 0118 7B14AE47 		.word	1202590843
 751 011c E17A84BF 		.word	-1081836831
 752 0120 0000C842 		.word	1120403456
 753 0124 0000B442 		.word	1119092736
 754              		.cfi_endproc
 755              	.LFE126:
 757              		.section	.text.map,"ax",%progbits
 758              		.align	2
 759              		.global	map
 760              		.thumb
 761              		.thumb_func
 763              	map:
 764              	.LFB127:
 150:../RCReceive.c **** 
 151:../RCReceive.c **** long map(long x, long in_min, long in_max, long out_min, long out_max)
 152:../RCReceive.c **** {
 765              		.loc 1 152 0
 766              		.cfi_startproc
 767              		@ args = 4, pretend = 0, frame = 16
 768              		@ frame_needed = 1, uses_anonymous_args = 0
 769              		@ link register save eliminated.
 770 0000 80B4     		push	{r7}
 771              	.LCFI18:
 772              		.cfi_def_cfa_offset 4
 773              		.cfi_offset 7, -4
 774 0002 85B0     		sub	sp, sp, #20
 775              	.LCFI19:
 776              		.cfi_def_cfa_offset 24
 777 0004 00AF     		add	r7, sp, #0
 778              	.LCFI20:
 779              		.cfi_def_cfa_register 7
 780 0006 F860     		str	r0, [r7, #12]
 781 0008 B960     		str	r1, [r7, #8]
 782 000a 7A60     		str	r2, [r7, #4]
 783 000c 3B60     		str	r3, [r7, #0]
 153:../RCReceive.c ****   return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
 784              		.loc 1 153 0
 785 000e FA68     		ldr	r2, [r7, #12]
 786 0010 BB68     		ldr	r3, [r7, #8]
 787 0012 D31A     		subs	r3, r2, r3
 788 0014 B969     		ldr	r1, [r7, #24]
 789 0016 3A68     		ldr	r2, [r7, #0]
 790 0018 8A1A     		subs	r2, r1, r2
 791 001a 02FB03F2 		mul	r2, r2, r3
 792 001e 7968     		ldr	r1, [r7, #4]
 793 0020 BB68     		ldr	r3, [r7, #8]
 794 0022 CB1A     		subs	r3, r1, r3
 795 0024 92FBF3F2 		sdiv	r2, r2, r3
 796 0028 3B68     		ldr	r3, [r7, #0]
 797 002a D318     		adds	r3, r2, r3
 154:../RCReceive.c **** }
 798              		.loc 1 154 0
 799 002c 1846     		mov	r0, r3
 800 002e 07F11407 		add	r7, r7, #20
 801 0032 BD46     		mov	sp, r7
 802 0034 80BC     		pop	{r7}
 803 0036 7047     		bx	lr
 804              		.cfi_endproc
 805              	.LFE127:
 807              		.bss
 808              	lastCount.10639:
 809 0012 00       		.space	1
 810 0013 00       		.text
 811              	.Letext0:
 812              		.file 2 "c:\\dave-3.1.10\\arm-gcc\\bin\\../lib/gcc/arm-none-eabi/4.7.4/../../../../arm-none-eabi/i
 813              		.file 3 "C:\\DAVE-3.1.10\\eclipse\\/../CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 814              		.file 4 "C:\\DAVE3_workspace\\ws3.1.10\\CORE_Larix_V1.0\\Dave\\Generated\\inc\\DAVESupport/../../i
 815              		.file 5 "C:\\DAVE3_workspace\\ws3.1.10\\CORE_Larix_V1.0\\Dave\\Generated\\inc\\DAVESupport/../../i
 816              		.file 6 "C:\\DAVE3_workspace\\ws3.1.10\\CORE_Larix_V1.0\\Dave\\Generated\\inc\\DAVESupport/../../i
 817              		.file 7 "C:\\DAVE3_workspace\\ws3.1.10\\CORE_Larix_V1.0\\Dave\\Generated\\inc\\DAVESupport/../../i
 818              		.file 8 "C:\\DAVE3_workspace\\ws3.1.10\\CORE_Larix_V1.0\\Dave\\Generated\\inc\\DAVESupport/../../i
 819              		.file 9 "C:\\DAVE-3.1.10\\eclipse\\/../CMSIS/Include/core_cm4.h"
 820              		.file 10 "C:\\DAVE3_workspace\\ws3.1.10\\CORE_Larix_V1.0\\Dave\\Generated\\inc\\DAVESupport/../../
DEFINED SYMBOLS
                            *ABS*:00000000 RCReceive.c
C:\Users\maan\AppData\Local\Temp\cclyF4h6.s:24     .bss:00000000 throttle
C:\Users\maan\AppData\Local\Temp\cclyF4h6.s:21     .bss:00000000 $d
C:\Users\maan\AppData\Local\Temp\cclyF4h6.s:30     .bss:00000004 rudder
C:\Users\maan\AppData\Local\Temp\cclyF4h6.s:36     .bss:00000008 elevator
C:\Users\maan\AppData\Local\Temp\cclyF4h6.s:42     .bss:0000000c aileron
C:\Users\maan\AppData\Local\Temp\cclyF4h6.s:47     .bss:00000010 flightmode
C:\Users\maan\AppData\Local\Temp\cclyF4h6.s:53     .data:00000000 RCTimeOut
C:\Users\maan\AppData\Local\Temp\cclyF4h6.s:59     .bss:00000011 RCCount
                            *COM*:00000004 TimerWatchRC
C:\Users\maan\AppData\Local\Temp\cclyF4h6.s:63     .text.mergeBytes:00000000 $t
C:\Users\maan\AppData\Local\Temp\cclyF4h6.s:68     .text.mergeBytes:00000000 mergeBytes
C:\Users\maan\AppData\Local\Temp\cclyF4h6.s:111    .text.USIC1_0_IRQHandler:00000000 $t
C:\Users\maan\AppData\Local\Temp\cclyF4h6.s:116    .text.USIC1_0_IRQHandler:00000000 USIC1_0_IRQHandler
C:\Users\maan\AppData\Local\Temp\cclyF4h6.s:763    .text.map:00000000 map
C:\Users\maan\AppData\Local\Temp\cclyF4h6.s:439    .text.USIC1_0_IRQHandler:00000328 $d
C:\Users\maan\AppData\Local\Temp\cclyF4h6.s:447    .text.WatchRC:00000000 $t
C:\Users\maan\AppData\Local\Temp\cclyF4h6.s:452    .text.WatchRC:00000000 WatchRC
C:\Users\maan\AppData\Local\Temp\cclyF4h6.s:808    .bss:00000012 lastCount.10639
C:\Users\maan\AppData\Local\Temp\cclyF4h6.s:501    .text.WatchRC_Init:00000000 $t
C:\Users\maan\AppData\Local\Temp\cclyF4h6.s:506    .text.WatchRC_Init:00000000 WatchRC_Init
C:\Users\maan\AppData\Local\Temp\cclyF4h6.s:550    .text.GetRCCount:00000000 $t
C:\Users\maan\AppData\Local\Temp\cclyF4h6.s:555    .text.GetRCCount:00000000 GetRCCount
C:\Users\maan\AppData\Local\Temp\cclyF4h6.s:582    .text.GetRCTimeOut:00000000 $t
C:\Users\maan\AppData\Local\Temp\cclyF4h6.s:587    .text.GetRCTimeOut:00000000 GetRCTimeOut
C:\Users\maan\AppData\Local\Temp\cclyF4h6.s:617    .text.GetRCData:00000000 $t
C:\Users\maan\AppData\Local\Temp\cclyF4h6.s:622    .text.GetRCData:00000000 GetRCData
C:\Users\maan\AppData\Local\Temp\cclyF4h6.s:748    .text.GetRCData:00000110 $d
C:\Users\maan\AppData\Local\Temp\cclyF4h6.s:758    .text.map:00000000 $t
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.84cfd71c6d2dc0bd4021712beaa9efd8
                           .group:00000000 wm4.XMC4500.h.45.215f4b8c79f46c7645c15373868d08c0
                           .group:00000000 wm4.core_cm4.h.47.41af406cb4cda82c972f112a9cd0a024
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.7aefdac4826acebbfc9f3822a0aeb14c
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.core_cmInstr.h.39.3d3d1b4a79aef37532666dc6ee87c6ac
                           .group:00000000 wm4.core_cm4_simd.h.43.b5d1d38735af6366227b4256d330cf13
                           .group:00000000 wm4.core_cm4.h.178.e5ef5ce66d198d7f00f9d0076e267c41
                           .group:00000000 wm4.system_XMC4500.h.29.827f68baa362c84f2abae4ab67dde7c9
                           .group:00000000 wm4.XMC4500.h.198.8e022f279ff353ed081df898dc7b9cf3
                           .group:00000000 wm4.stddef.h.40.50cf36416e06376af8a9dca28536f2e4
                           .group:00000000 wm4.types.h.60.e75c47576398c648cdcf9000ace5e3d8
                           .group:00000000 wm4.MULTIPLEXER.h.46.4a863fbae1c79f0db26da3ce2dc30d02
                           .group:00000000 wm4.CCU8PWMLIB.h.74.725ec81203769525cc7a424597055f47
                           .group:00000000 wm4.MOTORLIB.h.62.951091d95913dd2ff36d761323a1771d
                           .group:00000000 wm4.DBG001.h.116.d6d9e7459a0faa3905c97c1d2edb339d
                           .group:00000000 wm4.uc_id.h.35.fa57ecd9f559d2767f56c96da2848c12
                           .group:00000000 wm4.CLK001_Const.h.50.e5e9c2ddc89f4cc9e7b93e9648fa94e4
                           .group:00000000 wm4.CLK001_Conf.h.81.851ac7a1268528f4d6739384c2f248a5
                           .group:00000000 wm4._default_types.h.6.5e12cd604db8ce00b62bb2f02708eaf3
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4.stddef.h.161.c6104a0666cf681b6269ddc9b4f516d4
                           .group:00000000 wm4.types.h.2.e9cec8c90ab35f77d9f499e06ae02400
                           .group:00000000 wm4.types.h.80.1f2c84c0d57dd52dd9936095d9ac218e
                           .group:00000000 wm4.time.h.16.a4579e68956d2601c6113814b546764b
                           .group:00000000 wm4.RTC001.h.113.715d6fcab1863c6656b238bddd304166
                           .group:00000000 wm4.lmm001_debuglog.h.40.8031299705ecf04ad726bd19baff976d
                           .group:00000000 wm4.reent.h.11.a39e4126dcf3c6afd3054e0622577bae
                           .group:00000000 wm4.stddef.h.161.e50ff8a9d5d1abbc15641da28ac571bf
                           .group:00000000 wm4.string.h.86.d5c872ff52e2712c985b588a0ef39f3c
                           .group:00000000 wm4.LMM001.h.45.fa2df8bae969f45df5071221ac433ffa
                           .group:00000000 wm4.stdio.h.27.f2ac352bab34f31f9f478442827b2ba6
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.63.dfdea6580b080784d08faace69b6ed76
                           .group:00000000 wm4.stdlib.h.13.603ed7eb09a1561ab06840b7c0fcff58
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.53.c69c7609933ff56d59c757cec2d13230
                           .group:00000000 wm4.time.h.2.9857e62ad6ac99431e29d58067232314
                           .group:00000000 wm4.time.h.24.c499d4c1915694df17abb795fd34b719
                           .group:00000000 wm4.time.h.124.10ced469f846269cafc58b59c853e1bb
                           .group:00000000 wm4.errno.h.2.ba016d646105af6cad23be83630b6a3f
                           .group:00000000 wm4.errno.h.9.65044c2b5d8494e43f5986ab0a1d770f
                           .group:00000000 wm4.unistd.h.2.6ce1b91c4223f6078c1b210c7538c1d2
                           .group:00000000 wm4.unistd.h.251.605bc560cdc6c3b07b599bb71ac4e425
                           .group:00000000 wm4.malloc.h.4.62bd13b8107d5245f60bd92bb5994838
                           .group:00000000 wm4.malloc.h.148.73b7de3bd065dafbd594b04197a9466e
                           .group:00000000 wm4.reent.h.91.faac4d0ac97c0fcf23d10d0786197642
                           .group:00000000 wm4.SLTHA003.h.104.05371e300b30617373255b3cdb4765a2
                           .group:00000000 wm4.SYSTM001.h.64.6ecb31c49bc3e7691644fdcdfc11b5cd
                           .group:00000000 wm4.stdarg.h.31.fa591a4b1df9e413e9f5b8097f9ae89d
                           .group:00000000 wm4.Type_CM.h.61.3660c940695d7d5fef91de9c4081d0f0
                           .group:00000000 wm4.dwc_os.h.82.db2ca40c41e2f648d146b8942e5157d9
                           .group:00000000 wm4.dwc_otg_core_if.h.95.37e41eee47e9a4502e4044edf60ea92d
                           .group:00000000 wm4.usbcore001_device.h.107.6c032c9c28ac6c3f4e5e24a068720cd7
                           .group:00000000 wm4.USB.h.399.44a2bec94122294f06c4d854450494d3
                           .group:00000000 wm4.Common.h.102.bc881ac788d1d7ce84e651cbaa40f2c2
                           .group:00000000 wm4.Common.h.134.5069b632a0407201156f18fde915b80c
                           .group:00000000 wm4.USBMode.h.234.0cc9e23131c025605bb7c0db3ebb8ac9
                           .group:00000000 wm4.StdRequestType.h.93.4e19c7c655f990c2abedbb76a546fcde
                           .group:00000000 wm4.Endpoint.h.116.4ef46b127c9047ed49fe1e0df19e09b8
                           .group:00000000 wm4.StdDescriptors.h.120.0ce817e16dcc91b8cf4a79ba0e0e19b6
                           .group:00000000 wm4.CDC.h.103.7ce3e4692dde29e827f8736493eef7ef
                           .group:00000000 wm4.CDC.h.115.c83a7d6c5b6c8644b3dec6212d4ced09
                           .group:00000000 wm4.Descriptors.h.91.5cf84c2489ee54d154cabfe9e14b5c19
                           .group:00000000 wm4.Usic.h.54.8af9f733ba5771eeb374435d205ea54b
                           .group:00000000 wm4.UART001_Conf.h.53.2bb5ea9bb71ee763bf6e76b6ab83e6b4
                           .group:00000000 wm4.UART001.h.109.3e835815a7a59791d8bd39655f4d4cc9
                           .group:00000000 wm4.CCU4Global_Conf.h.63.a52fac0daa39b5f58343578312b4eb54
                           .group:00000000 wm4.PWMSP001.h.57.29b732b86baf3e81f49153f5f495912e
                           .group:00000000 wm4.NVIC002_Conf.h.63.1c36d067cc7a6ac3b9658ba6083fe89f
                           .group:00000000 wm4.I2C001.h.97.5277d52889d6c741e048ea45ee1277b5
                           .group:00000000 wm4.I2C001_Conf.h.58.e471e519f7471a50493b6f4fe912ee0d
                           .group:00000000 wm4.ERU001_Conf.h.69.6d7c31a774e428b1dc8770c7c31047dd
                           .group:00000000 wm4.ERU002_Conf.h.49.47045c766c6d22ab1185285e9d568758
                           .group:00000000 wm4.IO002_Conf.h.51.be0baad511cf66771895fab0bf90f390
                           .group:00000000 wm4.RCReceive.h.14.11c0548da9b0e8ded354bef3e50425ec

UNDEFINED SYMBOLS
__aeabi_i2d
__aeabi_ddiv
__aeabi_d2f
UART001_Handle0
UART001_GetFlagStatus
UART001_ReadDataBytes
UART001_ClearFlag
SYSTM001_CreateTimer
SYSTM001_StartTimer
__aeabi_f2d
__aeabi_dcmpgt
__aeabi_dcmplt
