   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ADC.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NVIC_EnableIRQ,"ax",%progbits
  18              		.align	2
  19              		.code	16
  20              		.thumb_func
  22              	NVIC_EnableIRQ:
  23              	.LFB24:
  24              		.file 1 "C:\\DAVE-3.1.10\\eclipse\\/../CMSIS/Include/core_cm0.h"
   1:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /**************************************************************************//**
   2:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  * @file     core_cm0.h
   3:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  * @brief    CMSIS Cortex-M0 Core Peripheral Access Layer Header File
   4:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  * @version  V3.20
   5:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  * @date     25. February 2013
   6:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  *
   7:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  * @note
   8:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  *
   9:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  ******************************************************************************/
  10:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /* Copyright (c) 2009 - 2013 ARM LIMITED
  11:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
  12:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****    All rights reserved.
  13:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****    Redistribution and use in source and binary forms, with or without
  14:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****    modification, are permitted provided that the following conditions are met:
  15:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****    - Redistributions of source code must retain the above copyright
  16:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****      notice, this list of conditions and the following disclaimer.
  17:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****    - Redistributions in binary form must reproduce the above copyright
  18:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****      notice, this list of conditions and the following disclaimer in the
  19:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****      documentation and/or other materials provided with the distribution.
  20:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****    - Neither the name of ARM nor the names of its contributors may be used
  21:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****      to endorse or promote products derived from this software without
  22:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****      specific prior written permission.
  23:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****    *
  24:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  25:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  26:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  27:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  28:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  29:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  30:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  31:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  32:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  33:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  34:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****    POSSIBILITY OF SUCH DAMAGE.
  35:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****    ---------------------------------------------------------------------------*/
  36:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
  37:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
  38:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #if defined ( __ICCARM__ )
  39:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  #pragma system_include  /* treat file as system include file for MISRA check */
  40:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #endif
  41:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
  42:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #ifdef __cplusplus
  43:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  extern "C" {
  44:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #endif
  45:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
  46:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #ifndef __CORE_CM0_H_GENERIC
  47:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define __CORE_CM0_H_GENERIC
  48:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
  49:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /** \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  50:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   CMSIS violates the following MISRA-C:2004 rules:
  51:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
  52:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  53:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****      Function definitions in header files are used to allow 'inlining'.
  54:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
  55:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  56:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****      Unions are used for effective representation of core registers.
  57:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
  58:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  59:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****      Function-like macros are used to allow more efficient code.
  60:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  */
  61:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
  62:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
  63:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /*******************************************************************************
  64:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  *                 CMSIS definitions
  65:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  ******************************************************************************/
  66:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /** \ingroup Cortex_M0
  67:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   @{
  68:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  */
  69:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
  70:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /*  CMSIS CM0 definitions */
  71:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define __CM0_CMSIS_VERSION_MAIN  (0x03)                                   /*!< [31:16] CMSIS HAL m
  72:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define __CM0_CMSIS_VERSION_SUB   (0x20)                                   /*!< [15:0]  CMSIS HAL s
  73:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define __CM0_CMSIS_VERSION       ((__CM0_CMSIS_VERSION_MAIN << 16) | \
  74:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****                                     __CM0_CMSIS_VERSION_SUB          )     /*!< CMSIS HAL version n
  75:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
  76:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define __CORTEX_M                (0x00)                                   /*!< Cortex-M Core      
  77:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
  78:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
  79:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #if   defined ( __CC_ARM )
  80:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  81:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  82:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #define __STATIC_INLINE  static __inline
  83:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
  84:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #elif defined ( __ICCARM__ )
  85:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  86:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
  87:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #define __STATIC_INLINE  static inline
  88:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
  89:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #elif defined ( __GNUC__ )
  90:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  91:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  92:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #define __STATIC_INLINE  static inline
  93:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
  94:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #elif defined ( __TASKING__ )
  95:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
  96:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
  97:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #define __STATIC_INLINE  static inline
  98:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
  99:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #endif
 100:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 101:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /** __FPU_USED indicates whether an FPU is used or not. This core does not support an FPU at all
 102:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** */
 103:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define __FPU_USED       0
 104:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 105:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #if defined ( __CC_ARM )
 106:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #if defined __TARGET_FPU_VFP
 107:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 108:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #endif
 109:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 110:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #elif defined ( __ICCARM__ )
 111:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #if defined __ARMVFP__
 112:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 113:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #endif
 114:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 115:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #elif defined ( __GNUC__ )
 116:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 117:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #endif
 119:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 120:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #elif defined ( __TASKING__ )
 121:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #if defined __FPU_VFP__
 122:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 123:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #endif
 124:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #endif
 125:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 126:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #include <stdint.h>                      /* standard types definitions                      */
 127:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #include <core_cmInstr.h>                /* Core Instruction Access                         */
 128:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #include <core_cmFunc.h>                 /* Core Function Access                            */
 129:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 130:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #endif /* __CORE_CM0_H_GENERIC */
 131:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 132:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #ifndef __CMSIS_GENERIC
 133:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 134:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #ifndef __CORE_CM0_H_DEPENDANT
 135:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define __CORE_CM0_H_DEPENDANT
 136:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 137:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /* check device defines and use defaults */
 138:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #if defined __CHECK_DEVICE_DEFINES
 139:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #ifndef __CM0_REV
 140:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     #define __CM0_REV               0x0000
 141:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     #warning "__CM0_REV not defined in device header file; using default!"
 142:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #endif
 143:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 144:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #ifndef __NVIC_PRIO_BITS
 145:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     #define __NVIC_PRIO_BITS          2
 146:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 147:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #endif
 148:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 149:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #ifndef __Vendor_SysTickConfig
 150:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     #define __Vendor_SysTickConfig    0
 151:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 152:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #endif
 153:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #endif
 154:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 155:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /* IO definitions (access restrictions to peripheral registers) */
 156:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /**
 157:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 158:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 159:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     <strong>IO Type Qualifiers</strong> are used
 160:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \li to specify the access to peripheral variables.
 161:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \li for automatic generation of peripheral register debug information.
 162:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** */
 163:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #ifdef __cplusplus
 164:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions                 */
 165:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #else
 166:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions                 */
 167:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #endif
 168:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define     __O     volatile             /*!< Defines 'write only' permissions                */
 169:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions              */
 170:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 171:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /*@} end of group Cortex_M0 */
 172:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 173:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 174:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 175:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /*******************************************************************************
 176:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  *                 Register Abstraction
 177:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   Core Register contain:
 178:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   - Core Register
 179:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   - Core NVIC Register
 180:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   - Core SCB Register
 181:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   - Core SysTick Register
 182:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  ******************************************************************************/
 183:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /** \defgroup CMSIS_core_register Defines and Type Definitions
 184:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \brief Type definitions and defines for Cortex-M processor based devices.
 185:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** */
 186:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 187:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /** \ingroup    CMSIS_core_register
 188:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \defgroup   CMSIS_CORE  Status and Control Registers
 189:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \brief  Core Register type definitions.
 190:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   @{
 191:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  */
 192:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 193:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /** \brief  Union type to access the Application Program Status Register (APSR).
 194:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  */
 195:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** typedef union
 196:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** {
 197:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   struct
 198:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   {
 199:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #if (__CORTEX_M != 0x04)
 200:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t _reserved0:27;              /*!< bit:  0..26  Reserved                           */
 201:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #else
 202:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved                           */
 203:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
 204:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved                           */
 205:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #endif
 206:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 207:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 208:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 209:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 210:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 211:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   } b;                                   /*!< Structure used for bit  access                  */
 212:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 213:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** } APSR_Type;
 214:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 215:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 216:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /** \brief  Union type to access the Interrupt Program Status Register (IPSR).
 217:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  */
 218:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** typedef union
 219:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** {
 220:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   struct
 221:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   {
 222:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
 223:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved                           */
 224:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   } b;                                   /*!< Structure used for bit  access                  */
 225:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 226:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** } IPSR_Type;
 227:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 228:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 229:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /** \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 230:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  */
 231:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** typedef union
 232:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** {
 233:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   struct
 234:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   {
 235:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
 236:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #if (__CORTEX_M != 0x04)
 237:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved                           */
 238:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #else
 239:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t _reserved0:7;               /*!< bit:  9..15  Reserved                           */
 240:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
 241:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved                           */
 242:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #endif
 243:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0)          */
 244:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0)          */
 245:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 246:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 247:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 248:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 249:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 250:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   } b;                                   /*!< Structure used for bit  access                  */
 251:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 252:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** } xPSR_Type;
 253:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 254:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 255:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /** \brief  Union type to access the Control Registers (CONTROL).
 256:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  */
 257:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** typedef union
 258:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** {
 259:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   struct
 260:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   {
 261:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 262:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used                   */
 263:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag           */
 264:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved                           */
 265:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   } b;                                   /*!< Structure used for bit  access                  */
 266:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 267:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** } CONTROL_Type;
 268:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 269:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /*@} end of group CMSIS_CORE */
 270:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 271:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 272:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /** \ingroup    CMSIS_core_register
 273:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 274:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \brief      Type definitions for the NVIC Registers
 275:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   @{
 276:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  */
 277:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 278:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /** \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 279:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  */
 280:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** typedef struct
 281:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** {
 282:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   __IO uint32_t ISER[1];                 /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register   
 283:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****        uint32_t RESERVED0[31];
 284:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   __IO uint32_t ICER[1];                 /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 285:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****        uint32_t RSERVED1[31];
 286:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   __IO uint32_t ISPR[1];                 /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register  
 287:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****        uint32_t RESERVED2[31];
 288:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   __IO uint32_t ICPR[1];                 /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 289:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****        uint32_t RESERVED3[31];
 290:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****        uint32_t RESERVED4[64];
 291:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   __IO uint32_t IP[8];                   /*!< Offset: 0x300 (R/W)  Interrupt Priority Register     
 292:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** }  NVIC_Type;
 293:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 294:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /*@} end of group CMSIS_NVIC */
 295:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 296:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 297:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /** \ingroup  CMSIS_core_register
 298:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \defgroup CMSIS_SCB     System Control Block (SCB)
 299:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \brief      Type definitions for the System Control Block Registers
 300:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   @{
 301:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  */
 302:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 303:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /** \brief  Structure type to access the System Control Block (SCB).
 304:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  */
 305:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** typedef struct
 306:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** {
 307:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   __I  uint32_t CPUID;                   /*!< Offset: 0x000 (R/ )  CPUID Base Register             
 308:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   __IO uint32_t ICSR;                    /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 309:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****        uint32_t RESERVED0;
 310:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   __IO uint32_t AIRCR;                   /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 311:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   __IO uint32_t SCR;                     /*!< Offset: 0x010 (R/W)  System Control Register         
 312:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   __IO uint32_t CCR;                     /*!< Offset: 0x014 (R/W)  Configuration Control Register  
 313:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****        uint32_t RESERVED1;
 314:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   __IO uint32_t SHP[2];                  /*!< Offset: 0x01C (R/W)  System Handlers Priority Registe
 315:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   __IO uint32_t SHCSR;                   /*!< Offset: 0x024 (R/W)  System Handler Control and State
 316:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** } SCB_Type;
 317:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 318:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /* SCB CPUID Register Definitions */
 319:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 320:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 321:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 322:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 323:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 324:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 325:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16                                             /*!< SCB 
 326:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 327:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 328:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 329:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 330:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 331:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 332:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 333:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 334:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /* SCB Interrupt Control State Register Definitions */
 335:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 336:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 337:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 338:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 339:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 340:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 341:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 342:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 343:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 344:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 345:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 346:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 347:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 348:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 349:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 350:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 351:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 352:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 353:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 354:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 355:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 356:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 357:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 358:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 359:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 360:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 361:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 362:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 363:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 364:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 365:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 366:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 367:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 368:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 369:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 370:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 371:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 372:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 373:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 374:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 375:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 376:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 377:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 378:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /* SCB System Control Register Definitions */
 379:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 380:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 381:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 382:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 383:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 384:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 385:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 386:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 387:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 388:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /* SCB Configuration Control Register Definitions */
 389:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 390:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 391:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 392:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 393:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 394:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 395:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /* SCB System Handler Control and State Register Definitions */
 396:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 397:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 398:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 399:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /*@} end of group CMSIS_SCB */
 400:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 401:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 402:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /** \ingroup  CMSIS_core_register
 403:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 404:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \brief      Type definitions for the System Timer Registers.
 405:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   @{
 406:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  */
 407:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 408:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /** \brief  Structure type to access the System Timer (SysTick).
 409:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  */
 410:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** typedef struct
 411:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** {
 412:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 413:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   __IO uint32_t LOAD;                    /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register   
 414:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   __IO uint32_t VAL;                     /*!< Offset: 0x008 (R/W)  SysTick Current Value Register  
 415:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   __I  uint32_t CALIB;                   /*!< Offset: 0x00C (R/ )  SysTick Calibration Register    
 416:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** } SysTick_Type;
 417:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 418:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /* SysTick Control / Status Register Definitions */
 419:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 420:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 421:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 422:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 423:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 424:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 425:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 426:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 427:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 428:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 429:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 430:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 431:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /* SysTick Reload Register Definitions */
 432:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 433:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 434:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 435:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /* SysTick Current Register Definitions */
 436:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 437:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 438:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 439:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /* SysTick Calibration Register Definitions */
 440:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 441:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 442:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 443:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 444:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 445:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 446:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 447:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 448:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 449:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /*@} end of group CMSIS_SysTick */
 450:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 451:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 452:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /** \ingroup  CMSIS_core_register
 453:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
 454:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \brief      Cortex-M0 Core Debug Registers (DCB registers, SHCSR, and DFSR)
 455:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****                 are only accessible over DAP and not via processor. Therefore
 456:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****                 they are not covered by the Cortex-M0 header file.
 457:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   @{
 458:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  */
 459:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /*@} end of group CMSIS_CoreDebug */
 460:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 461:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 462:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /** \ingroup    CMSIS_core_register
 463:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \defgroup   CMSIS_core_base     Core Definitions
 464:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \brief      Definitions for base addresses, unions, and structures.
 465:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   @{
 466:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  */
 467:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 468:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /* Memory mapping of Cortex-M0 Hardware */
 469:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
 470:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address    
 471:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address       
 472:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
 473:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 474:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
 475:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
 476:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
 477:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 478:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 479:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /*@} */
 480:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 481:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 482:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 483:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /*******************************************************************************
 484:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  *                Hardware Abstraction Layer
 485:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   Core Function Interface contains:
 486:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   - Core NVIC Functions
 487:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   - Core SysTick Functions
 488:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   - Core Register Access Functions
 489:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  ******************************************************************************/
 490:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /** \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
 491:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** */
 492:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 493:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 494:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 495:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /* ##########################   NVIC functions  #################################### */
 496:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 497:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \defgroup CMSIS_Core_NVICFunctions NVIC Functions
 498:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \brief      Functions that manage interrupts and exceptions via the NVIC.
 499:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     @{
 500:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  */
 501:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 502:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /* Interrupt Priorities are WORD accessible only under ARMv6M                   */
 503:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /* The following MACROS handle generation of the register offset and byte masks */
 504:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define _BIT_SHIFT(IRQn)         (  (((uint32_t)(IRQn)       )    &  0x03) * 8 )
 505:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define _SHP_IDX(IRQn)           ( ((((uint32_t)(IRQn) & 0x0F)-8) >>    2)     )
 506:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define _IP_IDX(IRQn)            (   ((uint32_t)(IRQn)            >>    2)     )
 507:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 508:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 509:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /** \brief  Enable External Interrupt
 510:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 511:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     The function enables a device-specific interrupt in the NVIC interrupt controller.
 512:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 513:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
 514:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  */
 515:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
 516:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** {
  25              		.loc 1 516 0
  26              		.cfi_startproc
  27 0000 80B5     		push	{r7, lr}
  28              	.LCFI0:
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 7, -8
  31              		.cfi_offset 14, -4
  32 0002 82B0     		sub	sp, sp, #8
  33              	.LCFI1:
  34              		.cfi_def_cfa_offset 16
  35 0004 00AF     		add	r7, sp, #0
  36              	.LCFI2:
  37              		.cfi_def_cfa_register 7
  38 0006 021C     		mov	r2, r0
  39 0008 FB1D     		add	r3, r7, #7
  40 000a 1A70     		strb	r2, [r3]
 517:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   NVIC->ISER[0] = (1 << ((uint32_t)(IRQn) & 0x1F));
  41              		.loc 1 517 0
  42 000c 064B     		ldr	r3, .L2
  43 000e FA1D     		add	r2, r7, #7
  44 0010 1278     		ldrb	r2, [r2]
  45 0012 111C     		mov	r1, r2
  46 0014 1F22     		mov	r2, #31
  47 0016 0A40     		and	r2, r1
  48 0018 0121     		mov	r1, #1
  49 001a 081C     		mov	r0, r1
  50 001c 9040     		lsl	r0, r0, r2
  51 001e 021C     		mov	r2, r0
  52 0020 1A60     		str	r2, [r3]
 518:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** }
  53              		.loc 1 518 0
  54 0022 BD46     		mov	sp, r7
  55 0024 02B0     		add	sp, sp, #8
  56              		@ sp needed for prologue
  57 0026 80BD     		pop	{r7, pc}
  58              	.L3:
  59              		.align	2
  60              	.L2:
  61 0028 00E100E0 		.word	-536813312
  62              		.cfi_endproc
  63              	.LFE24:
  65              		.section	.text.NVIC_SetPriority,"ax",%progbits
  66              		.align	2
  67              		.code	16
  68              		.thumb_func
  70              	NVIC_SetPriority:
  71              	.LFB29:
 519:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 520:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 521:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /** \brief  Disable External Interrupt
 522:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 523:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     The function disables a device-specific interrupt in the NVIC interrupt controller.
 524:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 525:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
 526:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  */
 527:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
 528:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** {
 529:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   NVIC->ICER[0] = (1 << ((uint32_t)(IRQn) & 0x1F));
 530:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** }
 531:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 532:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 533:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /** \brief  Get Pending Interrupt
 534:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 535:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     The function reads the pending register in the NVIC and returns the pending bit
 536:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     for the specified interrupt.
 537:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 538:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \param [in]      IRQn  Interrupt number.
 539:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 540:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \return             0  Interrupt status is not pending.
 541:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \return             1  Interrupt status is pending.
 542:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  */
 543:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** __STATIC_INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
 544:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** {
 545:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   return((uint32_t) ((NVIC->ISPR[0] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0));
 546:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** }
 547:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 548:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 549:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /** \brief  Set Pending Interrupt
 550:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 551:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     The function sets the pending bit of an external interrupt.
 552:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 553:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \param [in]      IRQn  Interrupt number. Value cannot be negative.
 554:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  */
 555:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
 556:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** {
 557:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   NVIC->ISPR[0] = (1 << ((uint32_t)(IRQn) & 0x1F));
 558:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** }
 559:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 560:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 561:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /** \brief  Clear Pending Interrupt
 562:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 563:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     The function clears the pending bit of an external interrupt.
 564:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 565:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
 566:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  */
 567:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** __STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
 568:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** {
 569:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   NVIC->ICPR[0] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
 570:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** }
 571:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 572:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 573:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /** \brief  Set Interrupt Priority
 574:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 575:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     The function sets the priority of an interrupt.
 576:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 577:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \note The priority cannot be set for every core interrupt.
 578:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 579:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \param [in]      IRQn  Interrupt number.
 580:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \param [in]  priority  Priority to set.
 581:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  */
 582:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
 583:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** {
  72              		.loc 1 583 0
  73              		.cfi_startproc
  74 0000 B0B5     		push	{r4, r5, r7, lr}
  75              	.LCFI3:
  76              		.cfi_def_cfa_offset 16
  77              		.cfi_offset 4, -16
  78              		.cfi_offset 5, -12
  79              		.cfi_offset 7, -8
  80              		.cfi_offset 14, -4
  81 0002 82B0     		sub	sp, sp, #8
  82              	.LCFI4:
  83              		.cfi_def_cfa_offset 24
  84 0004 00AF     		add	r7, sp, #0
  85              	.LCFI5:
  86              		.cfi_def_cfa_register 7
  87 0006 021C     		mov	r2, r0
  88 0008 3960     		str	r1, [r7]
  89 000a FB1D     		add	r3, r7, #7
  90 000c 1A70     		strb	r2, [r3]
 584:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   if(IRQn < 0) {
  91              		.loc 1 584 0
  92 000e FB1D     		add	r3, r7, #7
  93 0010 1B78     		ldrb	r3, [r3]
  94 0012 7F2B     		cmp	r3, #127
  95 0014 32D9     		bls	.L5
 585:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     SCB->SHP[_SHP_IDX(IRQn)] = (SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) |
  96              		.loc 1 585 0
  97 0016 3049     		ldr	r1, .L7
  98 0018 FB1D     		add	r3, r7, #7
  99 001a 1B78     		ldrb	r3, [r3]
 100 001c 1A1C     		mov	r2, r3
 101 001e 0F23     		mov	r3, #15
 102 0020 1340     		and	r3, r2
 103 0022 083B     		sub	r3, r3, #8
 104 0024 9808     		lsr	r0, r3, #2
 105 0026 2C4A     		ldr	r2, .L7
 106 0028 FB1D     		add	r3, r7, #7
 107 002a 1B78     		ldrb	r3, [r3]
 108 002c 1C1C     		mov	r4, r3
 109 002e 0F23     		mov	r3, #15
 110 0030 2340     		and	r3, r4
 111 0032 083B     		sub	r3, r3, #8
 112 0034 9B08     		lsr	r3, r3, #2
 113 0036 0633     		add	r3, r3, #6
 114 0038 9B00     		lsl	r3, r3, #2
 115 003a D318     		add	r3, r2, r3
 116 003c 5B68     		ldr	r3, [r3, #4]
 117 003e FA1D     		add	r2, r7, #7
 118 0040 1278     		ldrb	r2, [r2]
 119 0042 141C     		mov	r4, r2
 120 0044 0322     		mov	r2, #3
 121 0046 2240     		and	r2, r4
 122 0048 D200     		lsl	r2, r2, #3
 123 004a FF24     		mov	r4, #255
 124 004c 251C     		mov	r5, r4
 125 004e 9540     		lsl	r5, r5, r2
 126 0050 2A1C     		mov	r2, r5
 127 0052 D243     		mvn	r2, r2
 128 0054 1A40     		and	r2, r3
 586:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****         (((priority << (8 - __NVIC_PRIO_BITS)) & 0xFF) << _BIT_SHIFT(IRQn)); }
 129              		.loc 1 586 0
 130 0056 3B68     		ldr	r3, [r7]
 131 0058 9C01     		lsl	r4, r3, #6
 132 005a FF23     		mov	r3, #255
 133 005c 1C40     		and	r4, r3
 134 005e FB1D     		add	r3, r7, #7
 135 0060 1B78     		ldrb	r3, [r3]
 136 0062 1D1C     		mov	r5, r3
 137 0064 0323     		mov	r3, #3
 138 0066 2B40     		and	r3, r5
 139 0068 DB00     		lsl	r3, r3, #3
 140 006a 251C     		mov	r5, r4
 141 006c 9D40     		lsl	r5, r5, r3
 142 006e 2B1C     		mov	r3, r5
 585:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     SCB->SHP[_SHP_IDX(IRQn)] = (SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) |
 143              		.loc 1 585 0
 144 0070 1A43     		orr	r2, r3
 145 0072 831D     		add	r3, r0, #6
 146 0074 9B00     		lsl	r3, r3, #2
 147 0076 CB18     		add	r3, r1, r3
 148 0078 5A60     		str	r2, [r3, #4]
 149 007a 29E0     		b	.L4
 150              	.L5:
 587:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   else {
 588:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     NVIC->IP[_IP_IDX(IRQn)] = (NVIC->IP[_IP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) |
 151              		.loc 1 588 0
 152 007c 174B     		ldr	r3, .L7+4
 153 007e FA1D     		add	r2, r7, #7
 154 0080 1278     		ldrb	r2, [r2]
 155 0082 52B2     		sxtb	r2, r2
 156 0084 9208     		lsr	r2, r2, #2
 157 0086 1549     		ldr	r1, .L7+4
 158 0088 F81D     		add	r0, r7, #7
 159 008a 0078     		ldrb	r0, [r0]
 160 008c 40B2     		sxtb	r0, r0
 161 008e 8008     		lsr	r0, r0, #2
 162 0090 C030     		add	r0, r0, #192
 163 0092 8000     		lsl	r0, r0, #2
 164 0094 4158     		ldr	r1, [r0, r1]
 165 0096 F81D     		add	r0, r7, #7
 166 0098 0078     		ldrb	r0, [r0]
 167 009a 041C     		mov	r4, r0
 168 009c 0320     		mov	r0, #3
 169 009e 2040     		and	r0, r4
 170 00a0 C000     		lsl	r0, r0, #3
 171 00a2 FF24     		mov	r4, #255
 172 00a4 251C     		mov	r5, r4
 173 00a6 8540     		lsl	r5, r5, r0
 174 00a8 281C     		mov	r0, r5
 175 00aa C043     		mvn	r0, r0
 176 00ac 0840     		and	r0, r1
 589:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****         (((priority << (8 - __NVIC_PRIO_BITS)) & 0xFF) << _BIT_SHIFT(IRQn)); }
 177              		.loc 1 589 0
 178 00ae 3968     		ldr	r1, [r7]
 179 00b0 8C01     		lsl	r4, r1, #6
 180 00b2 FF21     		mov	r1, #255
 181 00b4 0C40     		and	r4, r1
 182 00b6 F91D     		add	r1, r7, #7
 183 00b8 0978     		ldrb	r1, [r1]
 184 00ba 0D1C     		mov	r5, r1
 185 00bc 0321     		mov	r1, #3
 186 00be 2940     		and	r1, r5
 187 00c0 C900     		lsl	r1, r1, #3
 188 00c2 251C     		mov	r5, r4
 189 00c4 8D40     		lsl	r5, r5, r1
 190 00c6 291C     		mov	r1, r5
 588:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     NVIC->IP[_IP_IDX(IRQn)] = (NVIC->IP[_IP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) |
 191              		.loc 1 588 0
 192 00c8 0143     		orr	r1, r0
 193 00ca C032     		add	r2, r2, #192
 194 00cc 9200     		lsl	r2, r2, #2
 195 00ce D150     		str	r1, [r2, r3]
 196              	.L4:
 590:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** }
 197              		.loc 1 590 0
 198 00d0 BD46     		mov	sp, r7
 199 00d2 02B0     		add	sp, sp, #8
 200              		@ sp needed for prologue
 201 00d4 B0BD     		pop	{r4, r5, r7, pc}
 202              	.L8:
 203 00d6 C046     		.align	2
 204              	.L7:
 205 00d8 00ED00E0 		.word	-536810240
 206 00dc 00E100E0 		.word	-536813312
 207              		.cfi_endproc
 208              	.LFE29:
 210              		.global	ADCReference
 211              		.bss
 212              		.align	1
 215              	ADCReference:
 216 0000 0000     		.space	2
 217              		.section	.text.InitADC,"ax",%progbits
 218              		.align	2
 219              		.global	InitADC
 220              		.code	16
 221              		.thumb_func
 223              	InitADC:
 224              	.LFB38:
 225              		.file 2 "../ADC.c"
   1:../ADC.c      **** /*
   2:../ADC.c      ****  * ADC.c
   3:../ADC.c      ****  *
   4:../ADC.c      ****  *  Created on: 01.09.2015
   5:../ADC.c      ****  *      Author: maan
   6:../ADC.c      ****  */
   7:../ADC.c      **** 
   8:../ADC.c      **** #include "ADC.h"
   9:../ADC.c      **** 
  10:../ADC.c      **** volatile uint16_t ADCReference=0;
  11:../ADC.c      **** 
  12:../ADC.c      **** void InitADC()
  13:../ADC.c      **** {
 226              		.loc 2 13 0
 227              		.cfi_startproc
 228 0000 80B5     		push	{r7, lr}
 229              	.LCFI6:
 230              		.cfi_def_cfa_offset 8
 231              		.cfi_offset 7, -8
 232              		.cfi_offset 14, -4
 233 0002 00AF     		add	r7, sp, #0
 234              	.LCFI7:
 235              		.cfi_def_cfa_register 7
  14:../ADC.c      **** 	//Converter is permanently on
  15:../ADC.c      **** 	VADC_G0->ARBCFG |= 0x83UL;
 236              		.loc 2 15 0
 237 0004 8F4A     		ldr	r2, .L11
 238 0006 8F49     		ldr	r1, .L11
 239 0008 8023     		mov	r3, #128
 240 000a CB58     		ldr	r3, [r1, r3]
 241 000c 8321     		mov	r1, #131
 242 000e 1943     		orr	r1, r3
 243 0010 8023     		mov	r3, #128
 244 0012 D150     		str	r1, [r2, r3]
  16:../ADC.c      **** 	VADC_G1->ARBCFG |= 0x83UL;
 245              		.loc 2 16 0
 246 0014 8C4A     		ldr	r2, .L11+4
 247 0016 8C49     		ldr	r1, .L11+4
 248 0018 8023     		mov	r3, #128
 249 001a CB58     		ldr	r3, [r1, r3]
 250 001c 8321     		mov	r1, #131
 251 001e 1943     		orr	r1, r3
 252 0020 8023     		mov	r3, #128
 253 0022 D150     		str	r1, [r2, r3]
  17:../ADC.c      **** 
  18:../ADC.c      **** 	//Start-Up Calibration
  19:../ADC.c      **** 	VADC->GLOBCFG |= 1UL << 31;
 254              		.loc 2 19 0
 255 0024 894A     		ldr	r2, .L11+8
 256 0026 8949     		ldr	r1, .L11+8
 257 0028 8023     		mov	r3, #128
 258 002a CB58     		ldr	r3, [r1, r3]
 259 002c 8021     		mov	r1, #128
 260 002e 0906     		lsl	r1, r1, #24
 261 0030 1943     		orr	r1, r3
 262 0032 8023     		mov	r3, #128
 263 0034 D150     		str	r1, [r2, r3]
  20:../ADC.c      **** 	VADC->GLOBCFG |= 1UL << 31;
 264              		.loc 2 20 0
 265 0036 854A     		ldr	r2, .L11+8
 266 0038 8449     		ldr	r1, .L11+8
 267 003a 8023     		mov	r3, #128
 268 003c CB58     		ldr	r3, [r1, r3]
 269 003e 8021     		mov	r1, #128
 270 0040 0906     		lsl	r1, r1, #24
 271 0042 1943     		orr	r1, r3
 272 0044 8023     		mov	r3, #128
 273 0046 D150     		str	r1, [r2, r3]
  21:../ADC.c      **** 	while(VADC_G0->ARBCFG & (1UL<<28) || VADC_G1->ARBCFG & (1UL<<28));
 274              		.loc 2 21 0
 275 0048 C046     		mov	r8, r8
 276              	.L10:
 277              		.loc 2 21 0 is_stmt 0 discriminator 1
 278 004a 7E4A     		ldr	r2, .L11
 279 004c 8023     		mov	r3, #128
 280 004e D258     		ldr	r2, [r2, r3]
 281 0050 8023     		mov	r3, #128
 282 0052 5B05     		lsl	r3, r3, #21
 283 0054 1340     		and	r3, r2
 284 0056 F8D1     		bne	.L10
 285              		.loc 2 21 0 discriminator 2
 286 0058 7B4A     		ldr	r2, .L11+4
 287 005a 8023     		mov	r3, #128
 288 005c D258     		ldr	r2, [r2, r3]
 289 005e 8023     		mov	r3, #128
 290 0060 5B05     		lsl	r3, r3, #21
 291 0062 1340     		and	r3, r2
 292 0064 F1D1     		bne	.L10
  22:../ADC.c      **** 
  23:../ADC.c      **** 	//Priority Channel
  24:../ADC.c      **** 	VADC_G0->CHASS |= 0x07UL;
 293              		.loc 2 24 0 is_stmt 1
 294 0066 774A     		ldr	r2, .L11
 295 0068 7649     		ldr	r1, .L11
 296 006a 8823     		mov	r3, #136
 297 006c CB58     		ldr	r3, [r1, r3]
 298 006e 0721     		mov	r1, #7
 299 0070 1943     		orr	r1, r3
 300 0072 8823     		mov	r3, #136
 301 0074 D150     		str	r1, [r2, r3]
  25:../ADC.c      **** 	VADC_G1->CHASS |= 0x02UL;
 302              		.loc 2 25 0
 303 0076 744A     		ldr	r2, .L11+4
 304 0078 7349     		ldr	r1, .L11+4
 305 007a 8823     		mov	r3, #136
 306 007c CB58     		ldr	r3, [r1, r3]
 307 007e 0221     		mov	r1, #2
 308 0080 1943     		orr	r1, r3
 309 0082 8823     		mov	r3, #136
 310 0084 D150     		str	r1, [r2, r3]
  26:../ADC.c      **** 
  27:../ADC.c      **** 	//Input class
  28:../ADC.c      **** 	VADC_G0->CHCTR[0] |= 0x341UL;
 311              		.loc 2 28 0
 312 0086 6F4A     		ldr	r2, .L11
 313 0088 6E49     		ldr	r1, .L11
 314 008a 8023     		mov	r3, #128
 315 008c 9B00     		lsl	r3, r3, #2
 316 008e CB58     		ldr	r3, [r1, r3]
 317 0090 6F49     		ldr	r1, .L11+12
 318 0092 1943     		orr	r1, r3
 319 0094 8023     		mov	r3, #128
 320 0096 9B00     		lsl	r3, r3, #2
 321 0098 D150     		str	r1, [r2, r3]
  29:../ADC.c      **** 	VADC_G0->CHCTR[1] |= 0x341UL;
 322              		.loc 2 29 0
 323 009a 6A4A     		ldr	r2, .L11
 324 009c 6949     		ldr	r1, .L11
 325 009e 8123     		mov	r3, #129
 326 00a0 9B00     		lsl	r3, r3, #2
 327 00a2 CB58     		ldr	r3, [r1, r3]
 328 00a4 6A49     		ldr	r1, .L11+12
 329 00a6 1943     		orr	r1, r3
 330 00a8 8123     		mov	r3, #129
 331 00aa 9B00     		lsl	r3, r3, #2
 332 00ac D150     		str	r1, [r2, r3]
  30:../ADC.c      **** 	VADC_G0->CHCTR[2] |= 0x341UL;
 333              		.loc 2 30 0
 334 00ae 654A     		ldr	r2, .L11
 335 00b0 6449     		ldr	r1, .L11
 336 00b2 8223     		mov	r3, #130
 337 00b4 9B00     		lsl	r3, r3, #2
 338 00b6 CB58     		ldr	r3, [r1, r3]
 339 00b8 6549     		ldr	r1, .L11+12
 340 00ba 1943     		orr	r1, r3
 341 00bc 8223     		mov	r3, #130
 342 00be 9B00     		lsl	r3, r3, #2
 343 00c0 D150     		str	r1, [r2, r3]
  31:../ADC.c      **** 	VADC_G0->RCR[0] |= 1UL <<31;
 344              		.loc 2 31 0
 345 00c2 604A     		ldr	r2, .L11
 346 00c4 5F49     		ldr	r1, .L11
 347 00c6 A023     		mov	r3, #160
 348 00c8 9B00     		lsl	r3, r3, #2
 349 00ca CB58     		ldr	r3, [r1, r3]
 350 00cc 8021     		mov	r1, #128
 351 00ce 0906     		lsl	r1, r1, #24
 352 00d0 1943     		orr	r1, r3
 353 00d2 A023     		mov	r3, #160
 354 00d4 9B00     		lsl	r3, r3, #2
 355 00d6 D150     		str	r1, [r2, r3]
  32:../ADC.c      **** 
  33:../ADC.c      **** 	VADC_G1->CHCTR[1] |= 1UL;
 356              		.loc 2 33 0
 357 00d8 5B4A     		ldr	r2, .L11+4
 358 00da 5B49     		ldr	r1, .L11+4
 359 00dc 8123     		mov	r3, #129
 360 00de 9B00     		lsl	r3, r3, #2
 361 00e0 CB58     		ldr	r3, [r1, r3]
 362 00e2 0121     		mov	r1, #1
 363 00e4 1943     		orr	r1, r3
 364 00e6 8123     		mov	r3, #129
 365 00e8 9B00     		lsl	r3, r3, #2
 366 00ea D150     		str	r1, [r2, r3]
  34:../ADC.c      **** 	VADC_G1->CHCTR[1] |= 1UL << 16;
 367              		.loc 2 34 0
 368 00ec 564A     		ldr	r2, .L11+4
 369 00ee 5649     		ldr	r1, .L11+4
 370 00f0 8123     		mov	r3, #129
 371 00f2 9B00     		lsl	r3, r3, #2
 372 00f4 CB58     		ldr	r3, [r1, r3]
 373 00f6 8021     		mov	r1, #128
 374 00f8 4902     		lsl	r1, r1, #9
 375 00fa 1943     		orr	r1, r3
 376 00fc 8123     		mov	r3, #129
 377 00fe 9B00     		lsl	r3, r3, #2
 378 0100 D150     		str	r1, [r2, r3]
  35:../ADC.c      **** 	VADC_G1->RCR[1] |= 1UL <<31;
 379              		.loc 2 35 0
 380 0102 514A     		ldr	r2, .L11+4
 381 0104 5049     		ldr	r1, .L11+4
 382 0106 A123     		mov	r3, #161
 383 0108 9B00     		lsl	r3, r3, #2
 384 010a CB58     		ldr	r3, [r1, r3]
 385 010c 8021     		mov	r1, #128
 386 010e 0906     		lsl	r1, r1, #24
 387 0110 1943     		orr	r1, r3
 388 0112 A123     		mov	r3, #161
 389 0114 9B00     		lsl	r3, r3, #2
 390 0116 D150     		str	r1, [r2, r3]
  36:../ADC.c      **** 
  37:../ADC.c      **** 	//External Trigger
  38:../ADC.c      **** 	VADC_G0->ASCTRL |= 0xC800UL;
 391              		.loc 2 38 0
 392 0118 4A4A     		ldr	r2, .L11
 393 011a 4A49     		ldr	r1, .L11
 394 011c 9023     		mov	r3, #144
 395 011e 5B00     		lsl	r3, r3, #1
 396 0120 CB58     		ldr	r3, [r1, r3]
 397 0122 C821     		mov	r1, #200
 398 0124 0902     		lsl	r1, r1, #8
 399 0126 1943     		orr	r1, r3
 400 0128 9023     		mov	r3, #144
 401 012a 5B00     		lsl	r3, r3, #1
 402 012c D150     		str	r1, [r2, r3]
  39:../ADC.c      **** 	VADC_G1->ASCTRL |= 0xC800UL;
 403              		.loc 2 39 0
 404 012e 464A     		ldr	r2, .L11+4
 405 0130 4549     		ldr	r1, .L11+4
 406 0132 9023     		mov	r3, #144
 407 0134 5B00     		lsl	r3, r3, #1
 408 0136 CB58     		ldr	r3, [r1, r3]
 409 0138 C821     		mov	r1, #200
 410 013a 0902     		lsl	r1, r1, #8
 411 013c 1943     		orr	r1, r3
 412 013e 9023     		mov	r3, #144
 413 0140 5B00     		lsl	r3, r3, #1
 414 0142 D150     		str	r1, [r2, r3]
  40:../ADC.c      **** 
  41:../ADC.c      **** 	//Gating mode
  42:../ADC.c      **** 	VADC_G0->ASMR |= 0x05UL;
 415              		.loc 2 42 0
 416 0144 3F4A     		ldr	r2, .L11
 417 0146 3F49     		ldr	r1, .L11
 418 0148 9223     		mov	r3, #146
 419 014a 5B00     		lsl	r3, r3, #1
 420 014c CB58     		ldr	r3, [r1, r3]
 421 014e 0521     		mov	r1, #5
 422 0150 1943     		orr	r1, r3
 423 0152 9223     		mov	r3, #146
 424 0154 5B00     		lsl	r3, r3, #1
 425 0156 D150     		str	r1, [r2, r3]
  43:../ADC.c      **** 	VADC_G1->ASMR |= 0x05UL;
 426              		.loc 2 43 0
 427 0158 3B4A     		ldr	r2, .L11+4
 428 015a 3B49     		ldr	r1, .L11+4
 429 015c 9223     		mov	r3, #146
 430 015e 5B00     		lsl	r3, r3, #1
 431 0160 CB58     		ldr	r3, [r1, r3]
 432 0162 0521     		mov	r1, #5
 433 0164 1943     		orr	r1, r3
 434 0166 9223     		mov	r3, #146
 435 0168 5B00     		lsl	r3, r3, #1
 436 016a D150     		str	r1, [r2, r3]
  44:../ADC.c      **** 
  45:../ADC.c      **** 	//Channel Select
  46:../ADC.c      **** 	VADC_G0->ASSEL = 0x04UL;
 437              		.loc 2 46 0
 438 016c 354A     		ldr	r2, .L11
 439 016e 9423     		mov	r3, #148
 440 0170 5B00     		lsl	r3, r3, #1
 441 0172 0421     		mov	r1, #4
 442 0174 D150     		str	r1, [r2, r3]
  47:../ADC.c      **** 	VADC_G1->ASSEL = 0x02UL;
 443              		.loc 2 47 0
 444 0176 344A     		ldr	r2, .L11+4
 445 0178 9423     		mov	r3, #148
 446 017a 5B00     		lsl	r3, r3, #1
 447 017c 0221     		mov	r1, #2
 448 017e D150     		str	r1, [r2, r3]
  48:../ADC.c      **** 
  49:../ADC.c      **** 	//Enable Arbitration slot
  50:../ADC.c      **** 	VADC_G0->ARBPR |= 0x01UL << 25;
 449              		.loc 2 50 0
 450 0180 304A     		ldr	r2, .L11
 451 0182 3049     		ldr	r1, .L11
 452 0184 8423     		mov	r3, #132
 453 0186 CB58     		ldr	r3, [r1, r3]
 454 0188 8021     		mov	r1, #128
 455 018a 8904     		lsl	r1, r1, #18
 456 018c 1943     		orr	r1, r3
 457 018e 8423     		mov	r3, #132
 458 0190 D150     		str	r1, [r2, r3]
  51:../ADC.c      **** 	VADC_G1->ARBPR |= 0x01UL << 25;
 459              		.loc 2 51 0
 460 0192 2D4A     		ldr	r2, .L11+4
 461 0194 2C49     		ldr	r1, .L11+4
 462 0196 8423     		mov	r3, #132
 463 0198 CB58     		ldr	r3, [r1, r3]
 464 019a 8021     		mov	r1, #128
 465 019c 8904     		lsl	r1, r1, #18
 466 019e 1943     		orr	r1, r3
 467 01a0 8423     		mov	r3, #132
 468 01a2 D150     		str	r1, [r2, r3]
  52:../ADC.c      **** 
  53:../ADC.c      **** 	//Service Request Software Activation Trigger
  54:../ADC.c      **** 	VADC_G0->SRACT |= 0x02UL;
 469              		.loc 2 54 0
 470 01a4 274A     		ldr	r2, .L11
 471 01a6 2749     		ldr	r1, .L11
 472 01a8 E423     		mov	r3, #228
 473 01aa 5B00     		lsl	r3, r3, #1
 474 01ac CB58     		ldr	r3, [r1, r3]
 475 01ae 0221     		mov	r1, #2
 476 01b0 1943     		orr	r1, r3
 477 01b2 E423     		mov	r3, #228
 478 01b4 5B00     		lsl	r3, r3, #1
 479 01b6 D150     		str	r1, [r2, r3]
  55:../ADC.c      **** 	VADC_G0->REVNP0 |= 1UL << 0;
 480              		.loc 2 55 0
 481 01b8 224A     		ldr	r2, .L11
 482 01ba 2249     		ldr	r1, .L11
 483 01bc D823     		mov	r3, #216
 484 01be 5B00     		lsl	r3, r3, #1
 485 01c0 CB58     		ldr	r3, [r1, r3]
 486 01c2 0121     		mov	r1, #1
 487 01c4 1943     		orr	r1, r3
 488 01c6 D823     		mov	r3, #216
 489 01c8 5B00     		lsl	r3, r3, #1
 490 01ca D150     		str	r1, [r2, r3]
  56:../ADC.c      **** 	NVIC_SetPriority((IRQn_Type)18, 0);
 491              		.loc 2 56 0
 492 01cc 1220     		mov	r0, #18
 493 01ce 0021     		mov	r1, #0
 494 01d0 FFF7FEFF 		bl	NVIC_SetPriority
  57:../ADC.c      **** 	NVIC_EnableIRQ((IRQn_Type)18);
 495              		.loc 2 57 0
 496 01d4 1220     		mov	r0, #18
 497 01d6 FFF7FEFF 		bl	NVIC_EnableIRQ
  58:../ADC.c      **** 	VADC_G1->SRACT |= 0x02UL;
 498              		.loc 2 58 0
 499 01da 1B4A     		ldr	r2, .L11+4
 500 01dc 1A49     		ldr	r1, .L11+4
 501 01de E423     		mov	r3, #228
 502 01e0 5B00     		lsl	r3, r3, #1
 503 01e2 CB58     		ldr	r3, [r1, r3]
 504 01e4 0221     		mov	r1, #2
 505 01e6 1943     		orr	r1, r3
 506 01e8 E423     		mov	r3, #228
 507 01ea 5B00     		lsl	r3, r3, #1
 508 01ec D150     		str	r1, [r2, r3]
  59:../ADC.c      **** 	VADC_G1->REVNP0 |= 1UL << 4;
 509              		.loc 2 59 0
 510 01ee 164A     		ldr	r2, .L11+4
 511 01f0 1549     		ldr	r1, .L11+4
 512 01f2 D823     		mov	r3, #216
 513 01f4 5B00     		lsl	r3, r3, #1
 514 01f6 CB58     		ldr	r3, [r1, r3]
 515 01f8 1021     		mov	r1, #16
 516 01fa 1943     		orr	r1, r3
 517 01fc D823     		mov	r3, #216
 518 01fe 5B00     		lsl	r3, r3, #1
 519 0200 D150     		str	r1, [r2, r3]
  60:../ADC.c      **** 	NVIC_SetPriority((IRQn_Type)20, 2);
 520              		.loc 2 60 0
 521 0202 1420     		mov	r0, #20
 522 0204 0221     		mov	r1, #2
 523 0206 FFF7FEFF 		bl	NVIC_SetPriority
  61:../ADC.c      **** 	NVIC_EnableIRQ((IRQn_Type)20);
 524              		.loc 2 61 0
 525 020a 1420     		mov	r0, #20
 526 020c FFF7FEFF 		bl	NVIC_EnableIRQ
  62:../ADC.c      **** 
  63:../ADC.c      **** 	//IO enable
  64:../ADC.c      **** 	PORT2->PDISC &= (~((uint32_t)0x1U << 6));		//Pin 2.6
 527              		.loc 2 64 0
 528 0210 104B     		ldr	r3, .L11+16
 529 0212 104A     		ldr	r2, .L11+16
 530 0214 126E     		ldr	r2, [r2, #96]
 531 0216 4021     		mov	r1, #64
 532 0218 8A43     		bic	r2, r1
 533 021a 1A66     		str	r2, [r3, #96]
  65:../ADC.c      **** 	PORT2->PDISC &= (~((uint32_t)0x1U << 8));		//Pin 2.8
 534              		.loc 2 65 0
 535 021c 0D4B     		ldr	r3, .L11+16
 536 021e 0D4A     		ldr	r2, .L11+16
 537 0220 116E     		ldr	r1, [r2, #96]
 538 0222 0D4A     		ldr	r2, .L11+20
 539 0224 0A40     		and	r2, r1
 540 0226 1A66     		str	r2, [r3, #96]
  66:../ADC.c      **** 	PORT2->PDISC &= (~((uint32_t)0x1U << 9));		//Pin 2.9
 541              		.loc 2 66 0
 542 0228 0A4B     		ldr	r3, .L11+16
 543 022a 0A4A     		ldr	r2, .L11+16
 544 022c 116E     		ldr	r1, [r2, #96]
 545 022e 0B4A     		ldr	r2, .L11+24
 546 0230 0A40     		and	r2, r1
 547 0232 1A66     		str	r2, [r3, #96]
  67:../ADC.c      **** 
  68:../ADC.c      **** 	PORT2->PDISC &= (~((uint32_t)0x1U << 7));		//Pin 2.7
 548              		.loc 2 68 0
 549 0234 074B     		ldr	r3, .L11+16
 550 0236 074A     		ldr	r2, .L11+16
 551 0238 126E     		ldr	r2, [r2, #96]
 552 023a 8021     		mov	r1, #128
 553 023c 8A43     		bic	r2, r1
 554 023e 1A66     		str	r2, [r3, #96]
  69:../ADC.c      **** }
 555              		.loc 2 69 0
 556 0240 BD46     		mov	sp, r7
 557              		@ sp needed for prologue
 558 0242 80BD     		pop	{r7, pc}
 559              	.L12:
 560              		.align	2
 561              	.L11:
 562 0244 00040348 		.word	1208157184
 563 0248 00080348 		.word	1208158208
 564 024c 00000348 		.word	1208156160
 565 0250 41030000 		.word	833
 566 0254 00020440 		.word	1074004480
 567 0258 FFFEFFFF 		.word	-257
 568 025c FFFDFFFF 		.word	-513
 569              		.cfi_endproc
 570              	.LFE38:
 572              		.section	.text.VADC0_G0_1_IRQHandler,"ax",%progbits
 573              		.align	2
 574              		.global	VADC0_G0_1_IRQHandler
 575              		.code	16
 576              		.thumb_func
 578              	VADC0_G0_1_IRQHandler:
 579              	.LFB39:
  70:../ADC.c      **** 
  71:../ADC.c      **** void ZeroCrossing_ISR()
  72:../ADC.c      **** {
 580              		.loc 2 72 0
 581              		.cfi_startproc
 582 0000 80B5     		push	{r7, lr}
 583              	.LCFI8:
 584              		.cfi_def_cfa_offset 8
 585              		.cfi_offset 7, -8
 586              		.cfi_offset 14, -4
 587 0002 00AF     		add	r7, sp, #0
 588              	.LCFI9:
 589              		.cfi_def_cfa_register 7
  73:../ADC.c      **** 	if(VADC_G0->RES[0] & (1UL << 31))
 590              		.loc 2 73 0
 591 0004 234A     		ldr	r2, .L17
 592 0006 C023     		mov	r3, #192
 593 0008 9B00     		lsl	r3, r3, #2
 594 000a D358     		ldr	r3, [r2, r3]
 595 000c 002B     		cmp	r3, #0
 596 000e 3EDA     		bge	.L13
  74:../ADC.c      **** 	{
  75:../ADC.c      **** 		if((GetPhaseState() % 2 == 0 && ((uint16_t) VADC_G0->RES[0]) < ADCReference) ||
 597              		.loc 2 75 0
 598 0010 FFF7FEFF 		bl	GetPhaseState
 599 0014 031C     		mov	r3, r0
 600 0016 1A1C     		mov	r2, r3
 601 0018 0123     		mov	r3, #1
 602 001a 1340     		and	r3, r2
 603 001c DBB2     		uxtb	r3, r3
 604 001e 002B     		cmp	r3, #0
 605 0020 09D1     		bne	.L15
 606              		.loc 2 75 0 is_stmt 0 discriminator 1
 607 0022 1C4A     		ldr	r2, .L17
 608 0024 C023     		mov	r3, #192
 609 0026 9B00     		lsl	r3, r3, #2
 610 0028 D358     		ldr	r3, [r2, r3]
 611 002a 9AB2     		uxth	r2, r3
 612 002c 1A4B     		ldr	r3, .L17+4
 613 002e 1B88     		ldrh	r3, [r3]
 614 0030 9BB2     		uxth	r3, r3
 615 0032 9A42     		cmp	r2, r3
 616 0034 12D3     		bcc	.L16
 617              	.L15:
  76:../ADC.c      **** 		   (GetPhaseState() % 2 != 0 && ((uint16_t) VADC_G0->RES[0]) > ADCReference))
 618              		.loc 2 76 0 is_stmt 1 discriminator 2
 619 0036 FFF7FEFF 		bl	GetPhaseState
 620 003a 031C     		mov	r3, r0
 621 003c 1A1C     		mov	r2, r3
 622 003e 0123     		mov	r3, #1
 623 0040 1340     		and	r3, r2
 624 0042 DBB2     		uxtb	r3, r3
  75:../ADC.c      **** 		if((GetPhaseState() % 2 == 0 && ((uint16_t) VADC_G0->RES[0]) < ADCReference) ||
 625              		.loc 2 75 0 discriminator 2
 626 0044 002B     		cmp	r3, #0
 627 0046 22D0     		beq	.L13
 628              		.loc 2 76 0
 629 0048 124A     		ldr	r2, .L17
 630 004a C023     		mov	r3, #192
 631 004c 9B00     		lsl	r3, r3, #2
 632 004e D358     		ldr	r3, [r2, r3]
 633 0050 9AB2     		uxth	r2, r3
 634 0052 114B     		ldr	r3, .L17+4
 635 0054 1B88     		ldrh	r3, [r3]
 636 0056 9BB2     		uxth	r3, r3
 637 0058 9A42     		cmp	r2, r3
 638 005a 18D9     		bls	.L13
 639              	.L16:
  77:../ADC.c      **** 		{
  78:../ADC.c      **** 			CCU40_CC40->TCCLR|=0x02;
 640              		.loc 2 78 0
 641 005c 0F4B     		ldr	r3, .L17+8
 642 005e 0F4A     		ldr	r2, .L17+8
 643 0060 1269     		ldr	r2, [r2, #16]
 644 0062 0221     		mov	r1, #2
 645 0064 0A43     		orr	r2, r1
 646 0066 1A61     		str	r2, [r3, #16]
  79:../ADC.c      **** 			CCU80_CC83->INTE &= ~(1UL<<4);
 647              		.loc 2 79 0
 648 0068 0D4A     		ldr	r2, .L17+12
 649 006a 0D49     		ldr	r1, .L17+12
 650 006c A423     		mov	r3, #164
 651 006e CB58     		ldr	r3, [r1, r3]
 652 0070 1021     		mov	r1, #16
 653 0072 181C     		mov	r0, r3
 654 0074 8843     		bic	r0, r1
 655 0076 011C     		mov	r1, r0
 656 0078 A423     		mov	r3, #164
 657 007a D150     		str	r1, [r2, r3]
  80:../ADC.c      **** 			IO004_TogglePin(IO004_Handle0);
 658              		.loc 2 80 0
 659 007c 094B     		ldr	r3, .L17+16
 660 007e 5B68     		ldr	r3, [r3, #4]
 661 0080 084A     		ldr	r2, .L17+16
 662 0082 5278     		ldrb	r2, [r2, #1]
 663 0084 0849     		ldr	r1, .L17+20
 664 0086 081C     		mov	r0, r1
 665 0088 9040     		lsl	r0, r0, r2
 666 008a 021C     		mov	r2, r0
 667 008c 5A60     		str	r2, [r3, #4]
 668              	.L13:
  81:../ADC.c      **** 		}
  82:../ADC.c      **** 	}
  83:../ADC.c      **** }
 669              		.loc 2 83 0
 670 008e BD46     		mov	sp, r7
 671              		@ sp needed for prologue
 672 0090 80BD     		pop	{r7, pc}
 673              	.L18:
 674 0092 C046     		.align	2
 675              	.L17:
 676 0094 00040348 		.word	1208157184
 677 0098 00000000 		.word	ADCReference
 678 009c 00010448 		.word	1208221952
 679 00a0 00040050 		.word	1342178304
 680 00a4 00000000 		.word	IO004_Handle0
 681 00a8 01000100 		.word	65537
 682              		.cfi_endproc
 683              	.LFE39:
 685              		.section	.text.VADC0_G1_1_IRQHandler,"ax",%progbits
 686              		.align	2
 687              		.global	VADC0_G1_1_IRQHandler
 688              		.code	16
 689              		.thumb_func
 691              	VADC0_G1_1_IRQHandler:
 692              	.LFB40:
  84:../ADC.c      **** 
  85:../ADC.c      **** void ReferenceResult_ISR()
  86:../ADC.c      **** {
 693              		.loc 2 86 0
 694              		.cfi_startproc
 695 0000 80B5     		push	{r7, lr}
 696              	.LCFI10:
 697              		.cfi_def_cfa_offset 8
 698              		.cfi_offset 7, -8
 699              		.cfi_offset 14, -4
 700 0002 00AF     		add	r7, sp, #0
 701              	.LCFI11:
 702              		.cfi_def_cfa_register 7
  87:../ADC.c      **** 	if(VADC_G1->RES[1] & (1UL << 31))
 703              		.loc 2 87 0
 704 0004 074A     		ldr	r2, .L21
 705 0006 C123     		mov	r3, #193
 706 0008 9B00     		lsl	r3, r3, #2
 707 000a D358     		ldr	r3, [r2, r3]
 708 000c 002B     		cmp	r3, #0
 709 000e 06DA     		bge	.L19
  88:../ADC.c      **** 		ADCReference = VADC_G1->RES[1];
 710              		.loc 2 88 0
 711 0010 044A     		ldr	r2, .L21
 712 0012 C123     		mov	r3, #193
 713 0014 9B00     		lsl	r3, r3, #2
 714 0016 D358     		ldr	r3, [r2, r3]
 715 0018 9AB2     		uxth	r2, r3
 716 001a 034B     		ldr	r3, .L21+4
 717 001c 1A80     		strh	r2, [r3]
 718              	.L19:
  89:../ADC.c      **** }
 719              		.loc 2 89 0
 720 001e BD46     		mov	sp, r7
 721              		@ sp needed for prologue
 722 0020 80BD     		pop	{r7, pc}
 723              	.L22:
 724 0022 C046     		.align	2
 725              	.L21:
 726 0024 00080348 		.word	1208158208
 727 0028 00000000 		.word	ADCReference
 728              		.cfi_endproc
 729              	.LFE40:
 731              		.text
 732              	.Letext0:
 733              		.file 3 "C:\\DAVE-3.1.10\\eclipse\\/../CMSIS/Infineon/XMC1300_series/Include/XMC1300.h"
 734              		.file 4 "c:\\dave-3.1.10\\arm-gcc\\bin\\../lib/gcc/arm-none-eabi/4.7.4/../../../../arm-none-eabi/i
 735              		.file 5 "C:\\Dave_Backup_Workspace\\ESC_Pinus_XMC1302_V1.2\\Dave\\Generated\\inc\\DAVESupport/../.
 736              		.file 6 "C:\\Dave_Backup_Workspace\\ESC_Pinus_XMC1302_V1.2\\Dave\\Generated\\inc\\DAVESupport/../.
DEFINED SYMBOLS
                            *ABS*:00000000 ADC.c
C:\Users\SteurerE\AppData\Local\Temp\cchTIdYg.s:18     .text.NVIC_EnableIRQ:00000000 $t
C:\Users\SteurerE\AppData\Local\Temp\cchTIdYg.s:22     .text.NVIC_EnableIRQ:00000000 NVIC_EnableIRQ
C:\Users\SteurerE\AppData\Local\Temp\cchTIdYg.s:61     .text.NVIC_EnableIRQ:00000028 $d
C:\Users\SteurerE\AppData\Local\Temp\cchTIdYg.s:66     .text.NVIC_SetPriority:00000000 $t
C:\Users\SteurerE\AppData\Local\Temp\cchTIdYg.s:70     .text.NVIC_SetPriority:00000000 NVIC_SetPriority
C:\Users\SteurerE\AppData\Local\Temp\cchTIdYg.s:205    .text.NVIC_SetPriority:000000d8 $d
C:\Users\SteurerE\AppData\Local\Temp\cchTIdYg.s:215    .bss:00000000 ADCReference
C:\Users\SteurerE\AppData\Local\Temp\cchTIdYg.s:212    .bss:00000000 $d
C:\Users\SteurerE\AppData\Local\Temp\cchTIdYg.s:218    .text.InitADC:00000000 $t
C:\Users\SteurerE\AppData\Local\Temp\cchTIdYg.s:223    .text.InitADC:00000000 InitADC
C:\Users\SteurerE\AppData\Local\Temp\cchTIdYg.s:562    .text.InitADC:00000244 $d
C:\Users\SteurerE\AppData\Local\Temp\cchTIdYg.s:573    .text.VADC0_G0_1_IRQHandler:00000000 $t
C:\Users\SteurerE\AppData\Local\Temp\cchTIdYg.s:578    .text.VADC0_G0_1_IRQHandler:00000000 VADC0_G0_1_IRQHandler
C:\Users\SteurerE\AppData\Local\Temp\cchTIdYg.s:676    .text.VADC0_G0_1_IRQHandler:00000094 $d
C:\Users\SteurerE\AppData\Local\Temp\cchTIdYg.s:686    .text.VADC0_G1_1_IRQHandler:00000000 $t
C:\Users\SteurerE\AppData\Local\Temp\cchTIdYg.s:691    .text.VADC0_G1_1_IRQHandler:00000000 VADC0_G1_1_IRQHandler
C:\Users\SteurerE\AppData\Local\Temp\cchTIdYg.s:726    .text.VADC0_G1_1_IRQHandler:00000024 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.665d63c3c957c91c5ed795826dcbc088
                           .group:00000000 wm4.XMC1300.h.45.4ee692c6c98aa9fc42e2abbc732052b9
                           .group:00000000 wm4.core_cm0.h.47.022e66414e77714da7c4b30b3ad99fe8
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.7aefdac4826acebbfc9f3822a0aeb14c
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.core_cmInstr.h.39.b7b6650bdd2316848d940915272d75b8
                           .group:00000000 wm4.core_cm0.h.135.ca70469f87e143609670bb393bfa6518
                           .group:00000000 wm4.XMC1000_RomFunctionTable.h.31.6d9a94465618f31b040dc9cea9a47ad7
                           .group:00000000 wm4.XMC1300.h.126.871a37eeeb3f6a078f5ddf5efd64103f
                           .group:00000000 wm4.stddef.h.40.50cf36416e06376af8a9dca28536f2e4
                           .group:00000000 wm4.types.h.60.e75c47576398c648cdcf9000ace5e3d8
                           .group:00000000 wm4.MULTIPLEXER.h.46.383e3edbb9cbf6e538f7c1532ef623c1
                           .group:00000000 wm4.CCU8PWMLIB.h.74.725ec81203769525cc7a424597055f47
                           .group:00000000 wm4.MOTORLIB.h.62.1aa717522e337383e1234be386036b7c
                           .group:00000000 wm4.CLK002.h.56.d2936f957892acc36e594c5138aee657
                           .group:00000000 wm4.uc_id.h.35.f852fba3565a132d8ed947977fab9fbc
                           .group:00000000 wm4.CCU4Global_Conf.h.63.a52fac0daa39b5f58343578312b4eb54
                           .group:00000000 wm4.CCU8GLOBAL_Conf.h.82.76c6b1bf357180d1e8ea1f462a66deb8
                           .group:00000000 wm4.IO004.h.53.442ea5eb47ad9eedc675253aa35f3107
                           .group:00000000 wm4.Usic.h.54.8af9f733ba5771eeb374435d205ea54b
                           .group:00000000 wm4.UART001_Conf.h.53.f334402b2e237110b77f625dfc27af0e
                           .group:00000000 wm4.UART001.h.109.3e835815a7a59791d8bd39655f4d4cc9
                           .group:00000000 wm4.NVIC002_Conf.h.63.00b91c10e79f81ab4aec2120d8519584
                           .group:00000000 wm4.BlockCommutation.h.9.09df5d1c29ae6c6e4e741202c42fad1e
                           .group:00000000 wm4.ADC.h.14.6b8768c4d2517137abc355fb88038f3a

UNDEFINED SYMBOLS
GetPhaseState
IO004_Handle0
